{"version":3,"sources":["Login/Login.styles.js","Firebase.js","Header/Header.styles.js","Header/Header.js","VeritcalScroll/VeritcalScroll.styles.js","VeritcalScroll/VerticalScroll.js","HorizontalGallery/HorizontalGallery.styles.js","HorizontalGallery/HorizontalGallery.js","Dropdown/Dropdown.styles.js","Dropdown/Dropdown.js","AddContent/AddContent.styles.js","PhotoFeatured/PhotoFeatured.styles.js","PhotoFeatured/PhotoFeatured.js","GetPhotosHomepage/GetPhotosHomepage.styles.js","GetPhotosHomepage/GetPhotosHomepage.js","Collections/DropdownDelete.styles.js","Collections/DropdownDelete.js","UserPosts/UserPosts.styles.js","Collections/Collections.styles.js","Collections/Collections.js","Profile/Profile.styles.js","Profile/Profile.js","Login/Signout.js","Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","styled","input","SubmitButton","button","Text","div","Container","Container2","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","UL","ul","LI","li","Header","props","getPhotoInfo","continent","photosArray","collection","where","get","then","photos","docs","forEach","photo","push","data","console","log","setHomePhotoInformation","className","onClick","user","setPageRoute","Scroll","scrollHeight","maxHeight","VerticalScroll","children","Title","TextContainer","SeeMore","OverflowX","Image","img","DisplayPhoto","setPhotoInformation","info","alt","src","url","HorizontalGallery","title","place","placeName","limit","map","index","image","photoInformation","getCountries","Collection","Warning","CreateNewButton","CreateNewInput","CreateNewSubmit","DropdownItem","addToCollection","addRef","doc","bool","add","length","timestamp","Date","now","updateCollectionPreview","updateTimestampBool","updateObject","preview","FieldValue","delete","updateRef","update","orderBy","imageArray","set","merge","removeFromCollection","remove","item","ref","arrayCopy","collectionsList","setCollectionsList","style","cursor","Dropdown","useState","isCreateCollection","setIsCreateCollection","isCollectionExists","setIsCollectionExists","setCollectionsBoolArray","collectionsBoolArray","collection2","autoComplete","placeholder","id","collectionName","document","getElementById","value","includes","name","form","textarea","select","Container3","Author","Description","PhotoFeatured","showDropdown","setShowDropdown","countryPhotos","setCountryPhotos","cityPhotos","setCityPhotos","city","country","getCities","snapshot","cityArray","countriesArray","window","scrollTo","top","useEffect","onclick","e","target","matches","collectionsArray","collections","mapArray","getCollectionsList","author","description","width","grid","href","photoInfo","GetPhotos","homePhotoInformation","elem","macy","container","columns","trueOrder","breakAt","1500","520","400","DropdownDelete","Ellipsis","height","NoImage","ImagesContainer","isDeleteMenu","setIsDeleteMenu","items","array","dimensionsMap","large","small","1","2","3","4","Collections","collectionInfo","setCollectionInfo","valueArray","collectionObject","Profile","signout","auth","signOut","catch","error","Login","email","setEmail","password","setPassword","onChange","type","signInWithEmailAndPassword","setUser","uid","App","pageRoute","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30013641.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: white;\n        color: black;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    color: white;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const UL = styled.ul`\n    width: 90%;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    color: whitesmoke;\n    display: flex;\n    justify-content: space-between;\n    font-size: 25px;\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n`\n\n\n// .test {\n//     display: flex;\n//     justify-content: center;\n//   }\n  \n// ul {\n//     width: 90%;\n//     padding: 0;\n//     margin: 0;\n//     list-style-type: none;\n//     color: whitesmoke;\n//     display: flex;\n//     justify-content: space-between;\n//     font-size: 25px;\n//   }","import React from 'react'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { db } from '../Firebase'\nimport {\n    Container,\n    UL,\n    LI,\n} from './Header.styles'\n\nconst Header = (props) => {\n\n    const getPhotoInfo = (continent) => {\n        const photosArray = []\n        db.collection('posts').where('continent', '==', continent)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            console.log(photosArray)\n            props.setHomePhotoInformation(photosArray)\n        })\n    }\n\n    return(\n        <Container className='test'>\n            <UL>\n                <LI onClick={()=> getPhotoInfo('North America')}>NORTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('Europe')}>EUROPE</LI>\n                <LI onClick={()=> getPhotoInfo('Oceania')}>OCEANIA</LI>\n                <LI onClick={()=> getPhotoInfo('Asia')}>ASIA</LI>\n                <LI onClick={()=> getPhotoInfo('Africa')}>AFRICA</LI>\n            </UL>\n            {props.user ? \n            <SubmitButton onClick={()=>props.setPageRoute('Profile')}>Profile</SubmitButton>\n            :\n            <SubmitButton onClick={()=>props.setPageRoute('Login')}>Log in</SubmitButton>\n            }\n        </Container>\n    )\n}\n\nexport default Header\n\n\n\n\n\n\n\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }","import styled from 'styled-components'\n\nexport const Scroll = styled.div`\n    -webkit-overflow-scrolling: touch;\n    height: ${props => props.scrollHeight};\n    max-height: ${props => props.maxHeight};\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { Scroll } from './VeritcalScroll.styles'\n\nconst VerticalScroll = (props) => {\n    return(\n        <Scroll scrollHeight={props.scrollHeight}>\n            {props.children}\n        </Scroll>\n    )\n}\n\nexport default VerticalScroll","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px\n`\n\nexport const TextContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const SeeMore = styled.div`\n    color: white;\n    cursor: pointer;\n`\n\nexport const OverflowX = styled.div`\n    overflow-x: scroll;\n    display: flex;\n    -webkit-overflow-scrolling: touch;\n`\n\nexport const Image = styled.img`\n    height: 300px;\n    width: auto;\n    padding-right: 10px;\n    cursor: pointer;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport { \n    Title,\n    OverflowX, \n    Image,\n    SeeMore,\n    TextContainer,\n} from './HorizontalGallery.styles'\n \nconst DisplayPhoto = (props) => {\n    return(\n        <div>\n            <Image onClick={()=>props.setPhotoInformation(props.info)} className='grid-item' alt='' src={props.url}></Image>\n        </div>\n    )\n}\n\nconst HorizontalGallery = (props) => {\n\n    const seeMore = () => {\n        const photosArray = []\n        db.collection('posts').where(props.place, '==', props.placeName)\n        .limit(8)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            props.setHomePhotoInformation(photosArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    return(\n        <div>\n            {props.photos ? \n            <div>\n            <TextContainer>\n                <Title>{props.title}</Title>\n                <SeeMore onClick={seeMore}>See more</SeeMore>\n            </TextContainer>\n            <OverflowX>\n                {\n                props.photos.map((info, index) => {\n                    const duplicateCheck = info.image !== props.photoInformation.image\n                    return(\n                        duplicateCheck ? \n                        <DisplayPhoto getCountries={props.getCountries} setPhotoInformation={props.setPhotoInformation} setHomePhotoInformation={props.setHomePhotoInformation} key={index} info={info} url={info.image}/>\n                        :\n                        null\n                    )\n                })\n                }\n            </OverflowX>\n            </div>\n        :\n        null\n        }\n        </div>\n    )\n}\n\nexport default HorizontalGallery","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 250px;\n    background-color: black;\n    position: absolute;\n`\n\nexport const Collection = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 18px;\n    height: 30px;\n    &:hover {\n        background-color: gray;\n    }\n`\n\nexport const Warning = styled.div`\n    color: red;\n`\n\nexport const CreateNewButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 200px;\n    font-size: 15px;\n    transition: background-color 350ms;\n    cursor: pointer;\n`\n\nexport const CreateNewInput = styled.input`\n    display:inline-block;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    color: white;\n    background-color: black;\n    height: 30px;\n    font-size: 17px;\n`\n\nexport const CreateNewSubmit = styled.button`\n    height: 35px;\n`","import React, { useState } from 'react'\nimport VerticalScroll from '../VeritcalScroll/VerticalScroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport { \n    Container,\n    Collection, \n    Warning,\n    CreateNewButton,\n    CreateNewInput,\n    CreateNewSubmit,\n} from './Dropdown.styles'\n\nconst DropdownItem = (props) => {\n\n    const addToCollection = () => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        if(!props.bool) {\n            addRef.where('image', '==', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .get()\n            .then(data=> {\n                add()\n                if(data.docs.length === 0) {\n                    addRef.add({\n                        ...props.photoInformation,\n                        collection: props.collection,\n                        timestamp: Date.now()\n                    }).then(console.log('added to collection'))\n                    updateCollectionPreview(true)\n                }\n            })\n        }\n    }\n\n    const updateCollectionPreview = (updateTimestampBool) => {\n        const updateObject = {\n            preview: firebase.firestore.FieldValue.delete()\n        }\n        if (updateTimestampBool) {\n            updateObject['timestamp'] = Date.now()\n        }\n        const updateRef = db.collection('users').doc(props.user)\n        updateRef.collection('collection-names')\n        .doc(props.collection)\n        .update(updateObject)\n        .then(\n            updateRef.collection('collections')\n            .where('collection', '==', props.collection)\n            .orderBy('timestamp', 'desc') \n            .limit(4)\n            .get()\n            .then(data=> {\n                const imageArray = []\n                data.docs.forEach(image=> {\n                    imageArray.push(image.data().image)\n                })\n                updateRef.collection('collection-names')\n                .doc(props.collection)\n                .set({\n                    preview: imageArray\n                }, {merge: true})\n            })\n        )\n\n    }\n\n    const removeFromCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('image', '==', props.photoInformation.image)\n        .where('collection', '==', props.collection)\n        .get()\n        .then(data => {\n            remove()\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            updateCollectionPreview(false)\n        })\n    }\n\n    const add = () => {\n        addToCollection()\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = true\n        props.setCollectionsList([...arrayCopy])\n\n    }\n\n    const remove = () => {\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = false\n        props.setCollectionsList([...arrayCopy])\n        removeFromCollection()\n    }\n\n    return(\n        <Collection className='dropdown' onClick={null}>\n            <div className='dropdown'>{props.collection}</div>\n            {props.collectionsList.length > 0 ?\n                (props.bool ?\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={removeFromCollection}>Remove</div>\n                :\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={addToCollection}>Add</div> )\n            :\n            null\n        }\n        </Collection>\n    )\n}\n\nconst Dropdown = (props) => {\n\n    const [isCreateCollection, setIsCreateCollection] = useState(false)\n    const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n    const addToCollection = (name) => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        addRef.where('image', '==', props.photoInformation.image)\n        .where('collection', '==', name)\n        .get()\n        .then(data=> {\n            if(data.docs.length === 0) {\n                addRef.add({\n                    ...props.photoInformation,\n                    collection: name,\n                    timestamp: Date.now()\n                }).then(console.log('added to collection'))\n            }\n        })\n    }\n\n    const createCollection = () => {\n        const collectionName = document.getElementById('collection-name').value\n        if(!props.collectionsList.includes(collectionName) && collectionName.length>0){\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .doc(collectionName)\n            .set({\n                name: collectionName,\n                timestamp: Date.now(),\n                preview: [props.photoInformation.image]\n            },{merge: true})\n            .then(addToCollection(collectionName))\n            props.setCollectionsList([[collectionName, true], ...props.collectionsList])\n            setIsCollectionExists(false)\n            document.getElementById('collection-name').value=''\n        }else{\n            setIsCollectionExists(true)\n        }\n    }\n\n    return(\n        <Container>\n            <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n            {props.collectionsList?.map((collection, index) => {\n                return(\n                    <DropdownItem \n                        setCollectionsList={props.setCollectionsList}\n                        collectionsList={props.collectionsList}\n                        setCollectionsBoolArray={props.setCollectionsBoolArray} \n                        collectionsBoolArray={props.collectionsBoolArray} \n                        index={index} \n                        className='dropdown' \n                        user={props.user} \n                        photoInformation={props.photoInformation} \n                        collection={collection[0]} \n                        collection2={collection}\n                        key={index}\n                        bool={collection[1]}\n                    />\n                )\n            })}\n            </VerticalScroll>\n            {isCreateCollection ? \n            <div>\n                <CreateNewInput autoComplete='off' placeholder='collection name' id='collection-name' className='dropdown'></CreateNewInput>\n                <CreateNewSubmit onClick={createCollection} className='dropdown'>Enter</CreateNewSubmit>\n            </div>\n            :\n            <CreateNewButton onClick={()=>setIsCreateCollection(true)} className='dropdown'>Create new collection</CreateNewButton>\n        }\n        {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n        </Container>\n    )\n}\n\nexport default Dropdown\n\n\n\n\n\n\n\n// import React, { useState } from 'react'\n// import VerticalScroll from '../VeritcalScroll/VerticalScroll'\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n// import { \n//     Container,\n//     Collection, \n//     Warning,\n// } from './Dropdown.styles'\n\n// const DropdownItem = (props) => {\n\n//     // const [isAdded, setIsAdded] = useState(props.collectionsBoolArray[props.index])\n//     const [isAdded, setIsAdded] = useState(props.bool)\n\n//     const addToCollection = () => {\n//         const addRef = db.collection('users').doc(props.user).collection('collections')\n//         if(!isAdded) {\n//             addRef.where('image', '==', props.photoInformation.image)\n//             .where('collection', '==', props.collection)\n//             .get()\n//             .then(data=> {\n//                 if(data.docs.length === 0) {\n//                     addRef.add({\n//                         ...props.photoInformation,\n//                         collection: props.collection,\n//                         timestamp: Date.now()\n//                     }).then(console.log('added to collection'))\n//                     updateCollectionPreview(true)\n//                 }\n//             })\n\n//         }\n//     }\n\n//     const updateCollectionPreview = (updateTimestampBool) => {\n//         const updateObject = {\n//             preview: firebase.firestore.FieldValue.delete()\n//         }\n//         if (updateTimestampBool) {\n//             updateObject['timestamp'] = Date.now()\n//         }\n//         const updateRef = db.collection('users').doc(props.user)\n//         updateRef.collection('collection-names')\n//         .doc(props.collection)\n//         .update(updateObject)\n//         .then(\n//             updateRef.collection('collections')\n//             .where('collection', '==', props.collection)\n//             .orderBy('timestamp', 'desc') \n//             .limit(4)\n//             .get()\n//             .then(data=> {\n//                 const imageArray = []\n//                 data.docs.forEach(image=> {\n//                     imageArray.push(image.data().image)\n//                 })\n//                 updateRef.collection('collection-names')\n//                 .doc(props.collection)\n//                 .set({\n//                     preview: imageArray\n//                 }, {merge: true})\n//             })\n//         )\n\n//     }\n\n//     const removeFromCollection = () => {\n//         db.collection('users')\n//         .doc(props.user)\n//         .collection('collections')\n//         .where('image', '==', props.photoInformation.image)\n//         .where('collection', '==', props.collection)\n//         .get()\n//         .then(data => {\n//             data.docs.forEach(item => {\n//                 item.ref.delete()\n//             })\n//             updateCollectionPreview(false)\n//         })\n//     }\n\n//     const add = () => {\n//         const arrayCopy = props.collectionsBoolArray\n//         const reverseBool = !isAdded\n//         arrayCopy[props.index] = reverseBool\n//         props.setCollectionsBoolArray(arrayCopy)\n//         setIsAdded(reverseBool)\n//     }\n\n//     const remove = () => {\n//         const arrayCopy = props.collectionsBoolArray\n//         const reverseBool = !isAdded\n//         arrayCopy[props.index] = reverseBool\n//         props.setCollectionsBoolArray(arrayCopy)\n//         setIsAdded(reverseBool)\n//         removeFromCollection()\n//     }\n\n//     return(\n//         <Collection className='dropdown' onClick={addToCollection}>\n//             <div className='dropdown'>{props.collection}</div>\n//             {props.collectionsBoolArray.length > 0 ?\n//                 (isAdded ?\n//                 <div className='dropdown' onClick={remove}>Remove</div>\n//                 :\n//                 <div className='dropdown' onClick={add}>Add</div> )\n//             :\n//             null\n//         }\n//         </Collection>\n//     )\n// }\n\n// const Dropdown = (props) => {\n\n//     const [isCreateCollection, setIsCreateCollection] = useState(false)\n//     const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n//     const addToCollection = (name) => {\n//         const addRef = db.collection('users').doc(props.user).collection('collections')\n//         addRef.where('image', '==', props.photoInformation.image)\n//         .where('collection', '==', name)\n//         .get()\n//         .then(data=> {\n//             if(data.docs.length === 0) {\n//                 addRef.add({\n//                     ...props.photoInformation,\n//                     collection: name,\n//                     timestamp: Date.now()\n//                 }).then(console.log('added to collection:', props.collection))\n//             }\n//         })\n//     }\n\n//     const createCollection = () => {\n//         const collectionName = document.getElementById('collection-name').value\n//         if(!props.collectionsList.includes(collectionName)){\n//             db.collection('users')\n//             .doc(props.user)\n//             .collection('collection-names')\n//             .doc(collectionName)\n//             .set({\n//                 name: collectionName,\n//                 timestamp: Date.now(),\n//                 preview: [props.photoInformation.image]\n//             },{merge: true})\n//             .then(addToCollection(collectionName))\n    \n//             // props.setCollectionsBoolArray([ ...props.collectionsBoolArray, true])\n//             props.setCollectionsBoolArray([true, ...props.collectionsBoolArray])\n//             props.setCollectionsList([collectionName, ...props.collectionsList])\n//             setIsCollectionExists(false)\n//         }else{\n//             setIsCollectionExists(true)\n//         }\n//     }\n\n//     return(\n//         <Container>\n//             <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n//             {console.log(props?.collectionsBoolArray)}\n//             {props.collectionsList?.map((collection, index) => {\n//                 return(\n//                     <DropdownItem \n//                         setCollectionsBoolArray={props.setCollectionsBoolArray} \n//                         collectionsBoolArray={props.collectionsBoolArray} \n//                         index={index} \n//                         className='dropdown' \n//                         user={props.user} \n//                         photoInformation={props.photoInformation} \n//                         collection={collection} \n//                         key={index}\n//                         bool={props.collectionsBoolArray[index]}\n//                     />\n//                 )\n//             })}\n//             </VerticalScroll>\n//             {isCreateCollection ? \n//             <div>\n//                 <input placeholder='collection name' id='collection-name' className='dropdown'></input>\n//                 <button onClick={createCollection} className='dropdown'>Enter</button>\n//             </div>\n//             :\n//             <button onClick={()=>setIsCreateCollection(true)} className='dropdown'>Add to new collection</button>\n//         }\n//         {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n//         </Container>\n//     )\n// }\n\n// export default Dropdown","import styled from 'styled-components'\n\nexport const SubmitButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n        /* color: grey; */\n    }\n`\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FormContainer = styled.form`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const PreviewImage = styled.img`\n    height: 500px;\n    width: auto;\n    position: relative;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container3 = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    /* flex-direction: column; */\n    justify-content: center;\n`\n\nexport const Title = styled.div`\n    color: white;\n    display: flex;\n    justify-content: center;\n`\n\nexport const Image = styled.img`\n    width: 800px;\n    /* display: flex;\n    justify-content: center; */\n`\n\nexport const Author = styled.div`\n    color: white;\n    display: flex;\n    justify-content: center;\n`\n\nexport const Description = styled.div`\n    color: white;\n    padding: 0 20%;\n    display: flex;\n    justify-content: center;\n    font-size: 20px;\n    white-space: pre-wrap;\n`","import React, { useEffect, useState } from 'react'\nimport HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\nimport Dropdown from '../Dropdown/Dropdown'\nimport { db } from '../Firebase'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    Container2,\n    Container3,\n} from './PhotoFeatured.styles'\n\nconst PhotoFeatured = (props) => {\n\n    const [collectionsList, setCollectionsList] = useState([])\n    const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n    const [showDropdown, setShowDropdown] = useState(null)\n    const [countryPhotos, setCountryPhotos] = useState([])\n    const [cityPhotos, setCityPhotos] = useState([])\n\n    const { city, continent, country, id } = props.photoInformation\n\n    const getCities = () => {\n\n        const ref = db.collection('posts')\n        .where('continent', '==', continent)\n        .where('country', '==', country)\n\n        ref.where('city', '==', city)\n        .get().then(snapshot=>{\n            const cityArray = []\n            snapshot.forEach(city=>{\n                cityArray.push(city.data())\n            })\n            setCityPhotos(cityArray)\n        })\n\n        ref.get().then(snapshot=>{\n            const countriesArray = []\n            snapshot.docs.forEach(doc=> {\n                countriesArray.push(doc.data())\n            }) \n            setCountryPhotos(countriesArray)\n        })\n        window.scrollTo({top: 0})\n    }\n    \n    useEffect(getCities,[city, continent, country])\n\n    const getCollectionsList = () => {\n        const collectionsArray = []\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .orderBy('timestamp', 'desc')\n        .get()\n        .then(collections => {\n            if(collections.docs.length>0) {\n\n                collections.docs.forEach((collection, index)=> {\n                    const mapArray = []\n                    mapArray.push(collection.data().name)\n                    db.collection('users')\n                    .doc(props.user)\n                    .collection('collections')\n                    .where('collection', '==', collection.data().name)\n                    .where('id', '==', id)\n                    .get()\n                    .then(data=> {\n                        if(data) {\n                            if(data.docs.length > 0){\n                                mapArray.push(true)\n                            }else{\n                                mapArray.push(false)\n                            }\n                        }\n                        collectionsArray.push(mapArray)\n                        if (index+1 === collections.docs.length) {\n                            setCollectionsList(collectionsArray)\n                            setShowDropdown(!showDropdown)\n                        }\n                    })\n                })\n            }else{\n                setShowDropdown(!showDropdown)\n            }\n        })\n    }\n\n    const showDropdownAndGetList = () => {\n        if(collectionsList?.length === 0) {\n            getCollectionsList()\n        }else{\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.dropdown')) {\n            setShowDropdown(false)\n        }\n    }\n\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <Container2>\n                <Container>\n                    <Title>{props.photoInformation.title}</Title>\n                    <Container2>\n                        <Container3>\n                                <Image alt='display' src={props.photoInformation.image}></Image>\n                                {props?.user ? \n                                <div>\n                                    <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n                                        <div className='dropdown'>Add to collection</div>\n                                    </SubmitButton>\n                                    {showDropdown ? \n                                    <Dropdown \n                                        setCollectionsBoolArray={setCollectionsBoolArray}\n                                        collectionsBoolArray={collectionsBoolArray} \n                                        className='dropdown' \n                                        photoInformation={props.photoInformation} \n                                        user={props.user} \n                                        collectionsList={collectionsList}\n                                        setCollectionsList={setCollectionsList}\n                                    /> \n                                    : \n                                    null}  \n                                </div>\n                                :\n                                null}\n                        </Container3>\n                    </Container2>\n                    <Author>{props.photoInformation.author}</Author>\n                    <Description>{props.photoInformation.description}</Description>\n                </Container>\n            </Container2>\n            <HorizontalGallery \n                getCountries={getCities} \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute}  \n                placeName={props.photoInformation.city} \n                place={'city'} \n                title={props.photoInformation.city} \n                photoInformation={props.photoInformation} \n                photos={cityPhotos} \n                setPhotoInformation={props.setPhotoInformation}  \n            />\n            <HorizontalGallery \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute} \n                placeName={props.photoInformation.country} \n                place={'country'} \n                title={props.photoInformation.country} \n                setPhotoInformation={props.setPhotoInformation} \n                photos={countryPhotos} \n                photoInformation={props.photoInformation} \n            />\n        </div>\n    )\n}\n\nexport default PhotoFeatured\n\n\n// import React, { useEffect, useState } from 'react'\n// import HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\n// import Dropdown from '../Dropdown/Dropdown'\n// import { db } from '../Firebase'\n// import { SubmitButton } from '../AddContent/AddContent.styles'\n// import {\n//     Title,\n//     Description,\n//     Image,\n//     Author,\n//     Container,\n//     Container2,\n//     Container3,\n// } from './PhotoFeatured.styles'\n\n// const PhotoFeatured = (props) => {\n\n//     const [collectionsList, setCollectionsList] = useState([])\n//     const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n//     const [showDropdown, setShowDropdown] = useState(null)\n//     const [countryPhotos, setCountryPhotos] = useState([])\n//     const [cityPhotos, setCityPhotos] = useState([])\n\n//     const { city, continent, country, id } = props.photoInformation\n\n//     const getCities = () => {\n\n//         const ref = db.collection('posts')\n//         .where('continent', '==', continent)\n//         .where('country', '==', country)\n\n//         ref.where('city', '==', city)\n//         .get().then(snapshot=>{\n//             const cityArray = []\n//             snapshot.forEach(city=>{\n//                 cityArray.push(city.data())\n//             })\n//             setCityPhotos(cityArray)\n//         })\n\n//         ref.get().then(snapshot=>{\n//             const countriesArray = []\n//             snapshot.docs.forEach(doc=> {\n//                 countriesArray.push(doc.data())\n//             }) \n//             setCountryPhotos(countriesArray)\n//         })\n//         window.scrollTo({top: 0})\n//     }\n    \n//     useEffect(getCities,[city, continent, country])\n\n//     const getCollectionsList = () => {\n//         const boolArray = []\n//         const collectionsArray = []\n//         db.collection('users')\n//         .doc(props.user)\n//         .collection('collection-names')\n//         .orderBy('timestamp', 'desc')\n//         .get()\n//         .then(collections => {\n//             collections.docs.forEach((collection, index)=> {\n//                 collectionsArray.push(collection.data().name)\n//                 db.collection('users')\n//                 .doc(props.user)\n//                 .collection('collections')\n//                 .where('collection', '==', collection.data().name)\n//                 .where('id', '==', id)\n//                 .get()\n//                 .then(data=> {\n//                     if(data) {\n//                         if(data.docs.length > 0){\n//                             boolArray.push(true)\n//                         }else{\n//                             boolArray.push(false)\n//                         }\n                        \n//                     }\n//                     setCollectionsBoolArray(boolArray)\n//                     setCollectionsList(collectionsArray)\n//                     if (index+1 === collections.docs.length) {\n//                         setShowDropdown(!showDropdown)\n//                     }\n//                 })\n//             })\n//         })\n//     }\n\n//     const showDropdownAndGetList = () => {\n//         if(collectionsList?.length === 0) {\n//             getCollectionsList()\n//         }else{\n//             setShowDropdown(!showDropdown)\n//         }\n//     }\n\n//     window.onclick = (e) => {\n//         if (!e.target.matches('.dropdown')) {\n//             setShowDropdown(false)\n//         }\n//     }\n\n//     return(\n//         <div>\n//             <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n//             <Container2>\n//                 <Container>\n//                     <Title>{props.photoInformation.title}</Title>\n//                     <Container2>\n//                         <Container3>\n//                                 <Image alt='display' src={props.photoInformation.image}></Image>\n//                                 {props?.user ? \n//                                 <div>\n//                                     <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n//                                         <div className='dropdown'>Add to collection</div>\n//                                     </SubmitButton>\n//                                     {showDropdown ? \n//                                         <Dropdown \n//                                             setCollectionsBoolArray={setCollectionsBoolArray}\n//                                             collectionsBoolArray={collectionsBoolArray} \n//                                             className='dropdown' \n//                                             photoInformation={props.photoInformation} \n//                                             user={props.user} \n//                                             collectionsList={collectionsList}\n//                                             setCollectionsList={setCollectionsList}\n//                                         /> \n//                                     : \n//                                     null}  \n//                                 </div>\n//                                 :\n//                                 null}\n//                         </Container3>\n//                     </Container2>\n//                     <Author>{props.photoInformation.author}</Author>\n//                     <Description>{props.photoInformation.description}</Description>\n//                 </Container>\n//             </Container2>\n//             <HorizontalGallery \n//                 getCountries={getCities} \n//                 setHomePhotoInformation={props.setHomePhotoInformation} \n//                 setPageRoute={props.setPageRoute}  \n//                 placeName={props.photoInformation.city} \n//                 place={'city'} \n//                 title={props.photoInformation.city} \n//                 photoInformation={props.photoInformation} \n//                 photos={cityPhotos} \n//                 setPhotoInformation={props.setPhotoInformation}  \n//             />\n//             <HorizontalGallery \n//                 setHomePhotoInformation={props.setHomePhotoInformation} \n//                 setPageRoute={props.setPageRoute} \n//                 placeName={props.photoInformation.country} \n//                 place={'country'} \n//                 title={props.photoInformation.country} \n//                 setPhotoInformation={props.setPhotoInformation} \n//                 photos={countryPhotos} \n//                 photoInformation={props.photoInformation} \n//             />\n//         </div>\n//     )\n// }\n\n// export default PhotoFeatured","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    margin: 0 15px;\n    margin-left: 35px;\n`\n\nexport const Image = styled.img`\n    width: ${props => props.width};\n\n    @media(max-width: 520px) {\n        width: 40vw;\n    }\n\n    @media(max-width: 400px) {\n        width: 90vw;\n    }\n\n    cursor: pointer;\n    animation: fadeIn ease 3s;\n    -webkit-animation: fadeIn ease 3s;\n    -moz-animation: fadeIn ease 3s;\n    -o-animation: fadeIn ease 3s;\n    -ms-animation: fadeIn ease 3s;\n    \n    @keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-o-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n`\n\n","import React, { useEffect, \n    // useState \n} from 'react'\nimport { db } from '../Firebase'\nimport '../App.css'\nimport { \n    Image, \n    Container, \n} from './GetPhotosHomepage.styles'\nimport macy from 'macy'\n// import Spinner from '../Spinner/Spinner'\n\nconst DisplayPhoto = (props) => {\n    useEffect(()=> { \n        props.grid()\n        // eslint-disable-next-line  \n    }, [])\n\n    const click = () => {\n        props.setPageRoute('PhotoFeatured')\n        props.setPhotoInformation(props.photoInfo)\n    }\n\n    let width = '30vw'\n\n    return(\n        <div>\n            <a href={props.url}><Image width={width} onClick={click} className='grid-item' alt='' src={props.photoInfo.image}></Image></a>\n        </div>\n    )\n}\n\nconst GetPhotos = (props) => {\n    \n    \n    // const [photos, setPhotos] = useState(null)\n    \n\n    const { setHomePhotoInformation, homePhotoInformation} = props\n\n\n    useEffect(()=>{\n        window.scrollTo({top: 0})\n        if(!homePhotoInformation){\n            const photoRef = db.collection('posts')\n            photoRef.get()\n            .then(snapshot => {\n                const photosArray = []\n                snapshot.docs.forEach(doc => {\n                    photosArray.push(doc.data())\n                })\n                setHomePhotoInformation(photosArray)\n                console.log('running')\n            })\n        }\n    }, [setHomePhotoInformation, homePhotoInformation])\n\n    const grid = () => {\n        var elem = document.getElementById('grid');\n        macy ({\n            container: elem,\n            columns: 2,\n            trueOrder: false,\n            breakAt: {\n                1500: 3,\n                520: 2,\n                400: 1\n            },\n        })\n    }\n    return(\n        <div>\n            <Container>\n                <div id=\"grid\">\n                    {props.homePhotoInformation ? props.homePhotoInformation.map((photo, index)=> {\n                        return(\n                            <DisplayPhoto setPageRoute={props.setPageRoute} setPhotoInformation={props.setPhotoInformation} key={index} grid={grid} photoInfo={photo} />\n                        )\n                    })\n                    :\n                    null}\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default GetPhotos","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 70px;\n    height: 20px;\n    position: absolute;\n    background-color: green;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container\n} from './DropdownDelete.styles'\n\nconst DropdownDelete = (props) => {\n\n    const deleteCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .where('name', '==', props.collectionName)\n        .get()\n        .then(data=> {\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            console.log('collection deleted')\n        })\n    }\n\n    return(\n        <Container onClick={deleteCollection}>\n            Delete\n        </Container>\n    )\n}\n\nexport default DropdownDelete","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px;\n`\n\nexport const Photo = styled.img`\n    object-fit: cover;\n    height: 180px;\n    width: 180px;\n    border-radius: 50%;\n`\n\nexport const PostsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport const PostContainer = styled.div`\n    margin: 20px;\n    cursor: pointer;\n`\n\nexport const PostTitle = styled.div`\n    color: white;\n    font-size: 20px;\n`","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const Ellipsis = styled.div`\n    cursor: pointer;\n`\n\nexport const Image = styled.img`\n    height: ${props => props.height};\n    width: ${props => props.width};\n    object-fit: cover;\n`\n\nexport const NoImage = styled.div`\n    height: 268px;\n    width: 270px;\n    object-fit: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid gray;\n`\n\nexport const ImagesContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    height: 270px;\n    width: 270px;\n    overflow: hidden;\n    cursor: pointer;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`","import React, { useState, useEffect } from 'react'\nimport { db } from '../Firebase'\nimport DropdownDelete from './DropdownDelete'\nimport { \n    Title\n} from '../UserPosts/UserPosts.styles'\nimport { \n    Image,\n    ImagesContainer,\n    Container,\n    NoImage,\n    Header,\n    Ellipsis,\n} from './Collections.styles'\n\nconst Collection = (props) => {\n\n    const getPhotos = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('collection', '==', props.collection[0])\n        .get()\n        .then(data=> {\n            const array = []\n            data.docs.forEach(doc=> {\n                array.push(doc.data())\n            })\n            props.setHomePhotoInformation(array)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n    let items = props.collection[1].length\n    if(props.collection[1][0] !== null) {\n        items = props.collection[1].length\n    }else{\n        items = 0\n    }\n    \n    const { collection } = props\n    \n    return(\n        <div>\n            <Header>\n                <Title>{props.collection[0]}</Title>\n                <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n                    <div>&#8942;</div>\n                    {isDeleteMenu ? \n                    <DropdownDelete user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n                    :\n                    null\n                    }\n                </Ellipsis>\n            </Header>\n            <ImagesContainer onClick={getPhotos}>\n                {items > 0 ? \n                <div>\n                    <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n                </div>\n                :\n                <NoImage>Collection is empty</NoImage>\n                }\n            </ImagesContainer>\n        </div>\n    )\n}\n\nconst Collections = (props) => {\n\n    const [collectionInfo, setCollectionInfo] = useState(null)\n\n    const getCollections = () => {\n        if(props.user) {    \n            const collectionsArray = []\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .orderBy('timestamp', 'desc')\n            .get()\n            .then(collections=> {\n                collections.docs.forEach(collection => {\n                    const valueArray = []\n                    const collectionObject = collection.data()\n                    valueArray.push(collectionObject.name)\n                    if(collectionObject?.preview?.length>0) {\n                        valueArray.push(collectionObject.preview)\n                    }else{\n                        valueArray.push([null])\n                    }\n                    collectionsArray.push(valueArray)\n                })\n                setCollectionInfo(collectionsArray)\n            })\n        }\n    }\n\n    useEffect(getCollections, [props.user])\n\n    return(\n        <Container>\n            {collectionInfo?.map((collection, index)=> {\n                return(\n                    <Collection \n                        user={props.user} \n                        setHomePhotoInformation={props.setHomePhotoInformation} \n                        setPageRoute={props.setPageRoute} \n                        collection={collection} \n                        key={index}\n                    />\n                )\n            })}\n        </Container>\n    )\n}\n\nconst large = 270\nconst small = 135\n\nconst dimensionsMap = {\n    1: {\n        height: {\n            1: large,\n        },\n        width: {\n            1: large\n        }\n    },\n    2: {\n        height: {\n            1: small,\n            2: small,\n        },\n        width: {\n            1: large,\n            2: large\n        }\n    },\n    3: {\n        height: {\n            1: small,\n            2: small,\n            3: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: large\n        }\n    },\n    4: {\n        height: {\n            1: small,\n            2: small,\n            3: small,\n            4: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: small,\n            4: small,\n        }\n    },\n}\n\nexport default Collections","import styled from 'styled-components'\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    display: flex;\n    justify-content: space-between;\n    padding: 0;\n`","import React from 'react'\n// import UserPosts from '../UserPosts/UserPosts'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport Collections from '../Collections/Collections'\nimport { LI } from '../Header/Header.styles'\nimport { UL } from './Profile.styles'\n\nconst Profile = (props) => {\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <div style={{width: '50%'}}>\n                <UL>\n                    <LI>Collections</LI>\n                    <LI>Posts</LI>\n                    <LI>Settings</LI>\n                </UL>\n            </div>\n            {/* <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton> */}\n            <Collections setHomePhotoInformation={props.setHomePhotoInformation} setPageRoute={props.setPageRoute} user={props.user}/>\n            {/* <UserPosts setPhotoInformation={props.setPhotoInformation} setPageRoute={props.setPageRoute} user={props.user} /> */}\n        </div>\n    )\n}\n\nexport default Profile","import firebase from 'firebase'\n\nconst signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                <SubmitButton onClick={signout}>Signout</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import React, { \n  useState, \n  useEffect,\n} from 'react'\nimport Header from './Header/Header'\nimport VerticalScroll from './VeritcalScroll/VerticalScroll'\nimport PhotoFeatured from './PhotoFeatured/PhotoFeatured'\n// import AddContent from './AddContent/AddContent'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Profile from './Profile/Profile'\nimport Login from './Login/Login'\n// import Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\n// import { firebaseApp } from './Firebase'\n\nconst App = () => {\n  const [user, setUser] = useState()\n  const [homePhotoInformation, setHomePhotoInformation] = useState(null)\n  const [photoInformation, setPhotoInformation] = useState(null)\n  const [pageRoute, setPageRoute] = useState('GetPhotos')\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.uid)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      {pageRoute==='GetPhotos' ? \n      <Header setHomePhotoInformation={setHomePhotoInformation} setPageRoute={setPageRoute} user={user}/>\n      :\n      null\n      }\n\n      {/* <Autocomplete /> */}\n      {/* <Signup /> */}\n      {/* <AddContent user={user} /> */}\n\n      {(() => {\n        switch (pageRoute) {\n          case 'GetPhotos':\n            // return null\n            return (\n              <VerticalScroll scrollHeight='90vh'>\n                <GetPhotos \n                  homePhotoInformation={homePhotoInformation} \n                  setHomePhotoInformation={setHomePhotoInformation} \n                  setPageRoute={setPageRoute} \n                  setPhotoInformation={setPhotoInformation} \n                />\n              </VerticalScroll>\n            )\n          case 'PhotoFeatured':\n            return <PhotoFeatured \n              user={user} \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPageRoute={setPageRoute} \n              setPhotoInformation={setPhotoInformation} \n              photoInformation={photoInformation} \n            />\n          case 'Profile':\n            return <Profile \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPhotoInformation={setPhotoInformation} \n              user={user} \n              setPageRoute={setPageRoute} \n            />;\n          case 'Login':\n            return <Login setUser={setUser} user={user} />\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}