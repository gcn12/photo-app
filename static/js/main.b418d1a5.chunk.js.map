{"version":3,"sources":["Login/Login.styles.js","Firebase.js","Header/Header.styles.js","Header/Header.js","VeritcalScroll/VeritcalScroll.styles.js","VeritcalScroll/VerticalScroll.js","Functions.js","HorizontalGallery/HorizontalGallery.styles.js","HorizontalGallery/HorizontalGallery.js","Dropdown/Dropdown.styles.js","Dropdown/Dropdown.js","AddContent/AddContent.styles.js","FeaturedPost/FeaturedPost.styles.js","FeaturedPost/FeaturedPost.js","Autocomplete/Autocomplete.js","AddContent/AddContent.js","GetPhotosHomepage/GetPhotosHomepage.styles.js","GetPhotosHomepage/GetPhotosHomepage.js","UserPosts/UserPosts.styles.js","UserPosts/UserPosts.js","Collections/DropdownDelete.styles.js","Collections/DropdownDelete.js","Collections/Collections.styles.js","Collections/Collections.js","Login/Signout.js","Settings/Settings.styles.js","Settings/Settings.js","Profile/Profile.styles.js","Profile/Profile.js","Login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","styled","input","SubmitButton","button","Text","div","Container","Container2","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","UL","ul","LI","li","Header","props","getPhotoInfo","continent","photosArray","collection","where","get","then","photos","docs","forEach","photo","push","data","console","log","setHomePhotoInformation","className","onClick","user","setPageRoute","Scroll","scrollHeight","maxHeight","VerticalScroll","children","incrementViewCount","docID","increment","FieldValue","doc","update","views","Title","TextContainer","SeeMore","OverflowX","Image","img","DisplayPhoto","setCollectionsList","getFeaturedPhotoInfo","info","id","url","reference","ref","alt","src","HorizontalGallery","title","place","placeName","map","index","image","photoInformation","getPost","getCountries","setPhotoInformation","Collection","Warning","CreateNewButton","CreateNewInput","CreateNewSubmit","DropdownItem","updateCollectionPreview","updateTimestampBool","updateObject","preview","delete","Date","now","updateRef","orderBy","limit","imageArray","set","merge","add","remove","arrayCopy","collectionsList","length","bool","style","cursor","addRef","country","city","timestamp","Dropdown","useState","isCreateCollection","setIsCreateCollection","isCollectionExists","setIsCollectionExists","setCollectionsBoolArray","collectionsBoolArray","autoComplete","placeholder","collectionName","document","getElementById","value","includes","name","addToCollection","NewItemButton","RemoveLastElement","FormContainer","TextInput","DescriptionInput","textarea","SelectInput","select","InfoContainer","BodyContainer","Author","Description","BodyImage","FeaturedPost","showDropdown","setShowDropdown","countryPhotos","setCountryPhotos","cityPhotos","setCityPhotos","getCities","snapshot","cityArray","countriesArray","window","scrollTo","top","useEffect","onclick","e","target","matches","collectionsArray","collections","mapArray","getCollectionsList","author","moment","format","content","item","images","Autocomplete","autocomplete","onPlaceChanged","getPlace","onChange","google","maps","places","types","addListener","AddContent","setTitle","setAuthor","isAddImage","setIsAddImage","isAdditionalElements","setIsAdditionalElements","checkAdditionalElement","getElementsByClassName","type","htmlFor","defaultValue","parent","removeChild","lastChild","createElement","appendChild","setAttribute","photoUrlArray","mainPhoto","photoFiles","i","file","files","metadata","contentType","storage","child","put","getDownloadURL","downloadURL","mainImage","splitLocation","split","trim","category","descriptionArray","String","docRef","submit","catch","error","PhotoTextContainer","PhotoTitle","PhotoLocation","width","PhotoContainer","SortSelect","homePhotoInformation","photoInfo","GetPhotos","startAfter","setStartAfter","lazy","startAt","intersectionObserver","IntersectionObserver","entries","intersectionRatio","startObserve","observe","options","selectedIndex","photoArray","sort","breakpointCols","columnClassName","Photo","PostsContainer","PostContainer","PostTitle","DisplayPosts","post","UserPosts","posts","setPosts","postsArray","DropdownDelete","collectionInfo","splice","setCollectionInfo","Ellipsis","height","NoImage","ImagesContainer","ImageTitleContainer","isDeleteMenu","setIsDeleteMenu","items","dimensionsMap","large","small","1","2","3","4","Collections","valueArray","collectionObject","signout","auth","signOut","Settings","HeaderContainer","Profile","profilePage","setProfilePage","textDecoration","Login","email","setEmail","password","setPassword","signInWithEmailAndPassword","setUser","uid","App","pageRoute","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b418d1a5.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: white;\n        color: black;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    color: white;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const UL = styled.ul`\n    width: 90%;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    color: whitesmoke;\n    display: flex;\n    justify-content: space-between;\n    font-size: 25px;\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n`\n\n\n// .test {\n//     display: flex;\n//     justify-content: center;\n//   }\n  \n// ul {\n//     width: 90%;\n//     padding: 0;\n//     margin: 0;\n//     list-style-type: none;\n//     color: whitesmoke;\n//     display: flex;\n//     justify-content: space-between;\n//     font-size: 25px;\n//   }","import React from 'react'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { db } from '../Firebase'\nimport {\n    Container,\n    UL,\n    LI,\n} from './Header.styles'\n\nconst Header = (props) => {\n\n    const getPhotoInfo = (continent) => {\n        const photosArray = []\n        db.collection('posts').where('continent', '==', continent)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            console.log(photosArray)\n            props.setHomePhotoInformation(photosArray)\n        })\n    }\n\n    return(\n        <Container className='test'>\n            <UL>\n                <LI onClick={()=> getPhotoInfo('North America')}>NORTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('Europe')}>EUROPE</LI>\n                <LI onClick={()=> getPhotoInfo('Oceania')}>OCEANIA</LI>\n                <LI onClick={()=> getPhotoInfo('Asia')}>ASIA</LI>\n                <LI onClick={()=> getPhotoInfo('Africa')}>AFRICA</LI>\n            </UL>\n            {props.user ? \n            <SubmitButton onClick={()=>props.setPageRoute('Upload')}>Upload</SubmitButton>\n            :\n            null\n            }\n            {props.user ? \n            <SubmitButton onClick={()=>props.setPageRoute('Profile')}>Profile</SubmitButton>\n            :\n            <SubmitButton onClick={()=>props.setPageRoute('Login')}>Log in</SubmitButton>\n            } \n        </Container>\n    )\n}\n\nexport default Header\n\n\n\n\n\n\n\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }","import styled from 'styled-components'\n\nexport const Scroll = styled.div`\n    -webkit-overflow-scrolling: touch;\n    height: ${props => props.scrollHeight};\n    max-height: ${props => props.maxHeight};\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { Scroll } from './VeritcalScroll.styles'\n\nconst VerticalScroll = (props) => {\n    return(\n        <Scroll scrollHeight={props.scrollHeight}>\n            {props.children}\n        </Scroll>\n    )\n}\n\nexport default VerticalScroll","import { db } from \"./Firebase\"\nimport firebase from 'firebase'\n\n\nexport const incrementViewCount = (docID) => {\n    const increment = firebase.firestore.FieldValue.increment(1)\n    db.collection('preview-posts').doc(docID)\n    .update({\n        views: increment\n    })\n    .then(()=>null)\n}","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px\n`\n\nexport const TextContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const SeeMore = styled.div`\n    color: white;\n    cursor: pointer;\n`\n\nexport const OverflowX = styled.div`\n    overflow-x: scroll;\n    display: flex;\n    -webkit-overflow-scrolling: touch;\n`\n\nexport const Image = styled.img`\n    height: 300px;\n    width: auto;\n    padding-right: 10px;\n    cursor: pointer;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport { \n    Title,\n    OverflowX, \n    Image,\n    SeeMore,\n    TextContainer,\n} from './HorizontalGallery.styles'\n \nconst DisplayPhoto = (props) => {\n\n    const selectPhoto = () => {\n        // props.getPost(props.info.id)\n        props.setCollectionsList([])\n        props.getFeaturedPhotoInfo(props.info.id)\n        db.collection('preview-posts').where('image', '==', props.url)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    return(\n        <div>\n            <Image onClick={selectPhoto} className='grid-item' alt='' src={props.url}></Image>\n        </div>\n    )\n}\n\nconst HorizontalGallery = (props) => {\n\n    const seeMore = () => {\n        const photosArray = []\n        db.collection('posts').where(props.place, '==', props.placeName)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            props.setHomePhotoInformation(photosArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    return(\n        <div>\n            {props.photos ? \n            <div>\n            <TextContainer>\n                <Title>{props.title}</Title>\n                <SeeMore onClick={seeMore}>See more</SeeMore>\n            </TextContainer>\n            <OverflowX>\n                {props.photos.map((info, index) => {\n                    const duplicateCheck = info.image !== props.photoInformation.image\n                    return(\n                        duplicateCheck ? \n                        <DisplayPhoto \n                            setCollectionsList={props.setCollectionsList}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            getPost={props.getPost} \n                            getCountries={props.getCountries} \n                            setPhotoInformation={props.setPhotoInformation} \n                            setHomePhotoInformation={props.setHomePhotoInformation} \n                            key={index} \n                            info={info} \n                            url={info.image}\n                        /> \n                        :\n                        null\n                    )\n                })}\n            </OverflowX>\n            </div>\n        :\n        null\n        }\n        </div>\n    )\n}\n\nexport default HorizontalGallery","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 250px;\n    background-color: black;\n    position: absolute;\n`\n\nexport const Collection = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 18px;\n    height: 30px;\n    &:hover {\n        background-color: gray;\n    }\n`\n\nexport const Warning = styled.div`\n    color: red;\n`\n\nexport const CreateNewButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 200px;\n    font-size: 15px;\n    transition: background-color 350ms;\n    cursor: pointer;\n`\n\nexport const CreateNewInput = styled.input`\n    display:inline-block;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    color: white;\n    background-color: black;\n    height: 30px;\n    font-size: 17px;\n`\n\nexport const CreateNewSubmit = styled.button`\n    height: 35px;\n`","import React, { useState } from 'react'\nimport VerticalScroll from '../VeritcalScroll/VerticalScroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport { \n    Container,\n    Collection, \n    Warning,\n    CreateNewButton,\n    CreateNewInput,\n    CreateNewSubmit,\n} from './Dropdown.styles'\n\nconst DropdownItem = (props) => {\n\n    const addToCollection = () => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        if(!props.bool) {\n            addRef.where('image', '==', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .get()\n            .then(data=> {\n                if(data.docs.length === 0) {\n                    addRef.add({\n                        id: props.photoInformation.id,\n                        image: props.photoInformation.image,\n                        country: props.photoInformation.country,\n                        city: props.photoInformation.city,\n                        title: props.photoInformation.title,\n                        collection: props.collection,\n                        timestamp: Date.now()\n                    }).then(()=> {\n                        updateCollectionPreview(true)\n                    })\n                }\n            })\n        }\n    }\n\n    const updateCollectionPreview = (updateTimestampBool) => {\n        const updateObject = {\n            preview: firebase.firestore.FieldValue.delete()\n        }\n        if (updateTimestampBool) {\n            updateObject['timestamp'] = Date.now()\n        }\n        const updateRef = db.collection('users').doc(props.user)\n        updateRef.collection('collection-names')\n        .doc(props.collection)\n        .update(updateObject)\n        .then(()=>{\n            updateRef.collection('collections')\n            // .where('image', '!=', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .orderBy('timestamp', 'desc') \n            .limit(4)\n            .get()\n            .then(data=> {\n                const imageArray = []\n                data.docs.forEach(image=> {\n                    imageArray.push(image.data().image)\n                })\n                \n                updateRef.collection('collection-names')\n                .doc(props.collection)\n                .set({\n                    preview: imageArray\n                }, {merge: true})\n                if (updateTimestampBool) {\n                    add()\n                }else{\n                    remove()\n                }\n            })\n        })\n    }\n\n    const removeFromCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('image', '==', props.photoInformation.image)\n        .where('collection', '==', props.collection)\n        .get()\n        .then(data => {\n            data.docs[0].ref.delete()\n            .then(()=> {\n                updateCollectionPreview(false)\n            })\n        })\n    }\n\n    const add = () => {\n        // addToCollection()\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = true\n        props.setCollectionsList([...arrayCopy])\n\n    }\n\n    const remove = () => {\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = false\n        props.setCollectionsList([...arrayCopy])\n    }\n\n    return(\n        <Collection className='dropdown' onClick={null}>\n            <div className='dropdown'>{props.collection}</div>\n            {props.collectionsList.length > 0 ?\n                (props.bool ?\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={removeFromCollection}>Remove</div>\n                :\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={addToCollection}>Add</div> )\n            :\n            null\n        }\n        </Collection>\n    )\n}\n\nconst Dropdown = (props) => {\n\n    const [isCreateCollection, setIsCreateCollection] = useState(false)\n    const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n    const addToCollection = (name) => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        addRef.where('image', '==', props.photoInformation.image)\n        .where('collection', '==', name)\n        .get()\n        .then(data=> {\n            if(data.docs.length === 0) {\n                addRef.add({\n                    ...props.photoInformation,\n                    collection: name,\n                    timestamp: Date.now()\n                })\n            }\n        })\n    }\n\n    const createCollection = () => {\n        const collectionName = document.getElementById('collection-name').value\n        if(!props.collectionsList.includes(collectionName) && collectionName.length>0){\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .doc(collectionName)\n            .set({\n                name: collectionName,\n                timestamp: Date.now(),\n                preview: [props.photoInformation.image]\n            },{merge: true})\n            .then(()=>{\n                addToCollection(collectionName)\n                props.setCollectionsList([[collectionName, true], ...props.collectionsList])\n                setIsCollectionExists(false)\n                document.getElementById('collection-name').value=''\n            })\n        }else{\n            setIsCollectionExists(true)\n        }\n    }\n\n    return(\n        <Container>\n            <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n            {props.collectionsList?.map((collection, index) => {\n                return(\n                    <DropdownItem \n                        setCollectionsList={props.setCollectionsList}\n                        collectionsList={props.collectionsList}\n                        setCollectionsBoolArray={props.setCollectionsBoolArray} \n                        collectionsBoolArray={props.collectionsBoolArray} \n                        index={index} \n                        className='dropdown' \n                        user={props.user} \n                        photoInformation={props.photoInformation} \n                        collection={collection[0]} \n                        key={index}\n                        bool={collection[1]}\n                    />\n                )\n            })}\n            </VerticalScroll>\n            {isCreateCollection ? \n            <div>\n                <CreateNewInput autoComplete='off' placeholder='collection name' id='collection-name' className='dropdown'></CreateNewInput>\n                <CreateNewSubmit onClick={createCollection} className='dropdown'>Enter</CreateNewSubmit>\n            </div>\n            :\n            <CreateNewButton onClick={()=>setIsCreateCollection(true)} className='dropdown'>Create new collection</CreateNewButton>\n        }\n        {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n        </Container>\n    )\n}\n\nexport default Dropdown","import styled from 'styled-components'\n\nexport const SubmitButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const NewItemButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 60vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const RemoveLastElement = styled.button`\n    color: white;\n    background-color: #ff6257;\n    border: none;\n    width: 60vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        /* background-color: #212121; */\n    }\n`\n\nexport const Container = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n`\n\nexport const FormContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const PreviewImage = styled.img`\n    height: 500px;\n    width: auto;\n    position: relative;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* justify-content: center; */\n    align-items: center;\n`\n\nexport const InfoContainer = styled.div`\n    width: 80%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const BodyContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 40px;\n`\n\nexport const Image = styled.img`\n    width: 90vw;\n`\n\nexport const Author = styled.div`\n    color: white;\n`\n\nexport const Description = styled.div`\n    color: white;\n    padding: 0 20%;\n    font-size: 20px;\n    white-space: pre-wrap;\n    text-align: justify;\n    text-justify: inter-word;\n`\n\nexport const BodyImage = styled.img`\n    width: 70vw;\n`","import React, { useEffect, useState } from 'react'\nimport HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\nimport Dropdown from '../Dropdown/Dropdown'\nimport { db } from '../Firebase'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport moment from 'moment'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    // Container2,\n    // Container3,\n    BodyImage,\n} from './FeaturedPost.styles'\n\nconst FeaturedPost = (props) => {\n\n    const [collectionsList, setCollectionsList] = useState([])\n    const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n    const [showDropdown, setShowDropdown] = useState(null)\n    const [countryPhotos, setCountryPhotos] = useState([])\n    const [cityPhotos, setCityPhotos] = useState([])\n\n    \n    const getCities = () => {\n        const { city, continent, country } = props.photoInformation\n        const ref = db.collection('preview-posts')\n        .where('continent', '==', continent)\n        .where('country', '==', country)\n\n        ref.where('city', '==', city)\n        .get().then(snapshot=>{\n            const cityArray = []\n            snapshot.forEach(city=>{\n                cityArray.push(city.data())\n            })\n            setCityPhotos(cityArray)\n        })\n\n        ref.get().then(snapshot=>{\n            const countriesArray = []\n            snapshot.docs.forEach(doc=> {\n                countriesArray.push(doc.data())\n            }) \n            setCountryPhotos(countriesArray)\n        })\n        window.scrollTo({top: 0})\n    }\n\n    const getPost = (docID) => {\n        db.collection('posts')\n        .doc(docID)\n        .get()\n        .then(data=> {\n            getCities(data.data())\n        })\n    }\n    \n    // eslint-disable-next-line\n    useEffect(()=>getCities(props.photoInformation.id), [])\n\n\n    const getCollectionsList = () => {\n        const collectionsArray = []\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .orderBy('timestamp', 'desc')\n        .get()\n        .then(collections => {\n            if(collections.docs.length>0) {\n                collections.docs.forEach((collection, index)=> {\n                    const mapArray = []\n                    mapArray.push(collection.data().name)\n                    db.collection('users')\n                    .doc(props.user)\n                    .collection('collections')\n                    .where('collection', '==', collection.data().name)\n                    .where('id', '==', props.photoInformation.id)\n                    .get()\n                    .then(data=> {\n                        if(data) {\n                            if(data.docs.length > 0){\n                                mapArray.push(true)\n                            }else{\n                                mapArray.push(false)\n                            }\n                        }\n                        collectionsArray.push(mapArray)\n                        if (index+1 === collections.docs.length) {\n                            setCollectionsList(collectionsArray)\n                            setShowDropdown(!showDropdown)\n                        }\n                    })\n                })\n            }else{\n                setShowDropdown(!showDropdown)\n            }\n        }) \n    }\n\n    const showDropdownAndGetList = () => {\n        if(collectionsList?.length === 0) {\n            getCollectionsList()\n        }else{\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.dropdown')) {\n            setShowDropdown(false)\n        }\n    }\n\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <Container>\n                <Title>{props.photoInformation?.title}</Title>\n                <Image alt='display' src={props?.photoInformation?.image}></Image>\n                <InfoContainer>\n                    {props?.user ? \n                    <div>\n                        <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n                            <div className='dropdown'>Add to collection</div>\n                        </SubmitButton>\n                        {showDropdown ? \n                        <Dropdown\n                            photoInformation={props.photoInformation}\n                            setCollectionsBoolArray={setCollectionsBoolArray}\n                            collectionsBoolArray={collectionsBoolArray} \n                            className='dropdown' \n                            user={props.user} \n                            collectionsList={collectionsList}\n                            setCollectionsList={setCollectionsList}\n                        /> \n                        : \n                        null}  \n                    </div>\n                    :\n                    null}\n                    <Author>{props.photoInformation?.author}</Author>\n                    <Author>{moment(props.photoInformation?.timestamp).format('MMMM Do YYYY')}</Author>\n                </InfoContainer>\n            </Container>\n                {props.photoInformation?.content.map((item, index) => {\n                    return(\n                        <BodyContainer key={index}>\n                            <Description>{item}</Description>\n                            <BodyImage src={props.photoInformation.images[index]}></BodyImage>\n                        </BodyContainer>\n                    )\n                })}\n            \n\n\n\n\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                getCountries={getCities} \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute}  \n                placeName={props?.city} \n                place={'city'} \n                title={props.photoInformation?.city} \n                photoInformation={props.photoInformation} \n                photos={cityPhotos} \n                setPhotoInformation={props.setPhotoInformation}  \n            />\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute} \n                placeName={props.photoInformation?.country} \n                place={'country'} \n                title={props.photoInformation?.country} \n                setPhotoInformation={props.setPhotoInformation} \n                photos={countryPhotos} \n                photoInformation={props.photoInformation} \n            />\n        </div>\n    )\n}\n\nexport default FeaturedPost\n\n\n// return(\n//     <div>\n//         <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n//         <Container2>\n//             <Container>\n//                 <Title>{props.photoInformation?.title}</Title>\n//                 <Container2>\n//                     <Container3>\n//                             <Image alt='display' src={props?.photoInformation?.image}></Image>\n//                             {props?.user ? \n//                             <div>\n//                                 <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n//                                     <div className='dropdown'>Add to collection</div>\n//                                 </SubmitButton>\n//                                 {showDropdown ? \n//                                 <Dropdown\n//                                     photoInformation={props.photoInformation}\n//                                     setCollectionsBoolArray={setCollectionsBoolArray}\n//                                     collectionsBoolArray={collectionsBoolArray} \n//                                     className='dropdown' \n//                                     user={props.user} \n//                                     collectionsList={collectionsList}\n//                                     setCollectionsList={setCollectionsList}\n//                                 /> \n//                                 : \n//                                 null}  \n//                             </div>\n//                             :\n//                             null}\n//                     </Container3>\n//                 </Container2>\n//                 <Author>{props.photoInformation?.author}</Author>\n//                 <Author>{moment(props.photoInformation?.timestamp).format('MMMM Do YYYY')}</Author>\n//                 {props.photoInformation?.content.map((item, index) => {\n//                     return(\n//                         <Container3 key={index}>\n//                             <Description>{item}</Description>\n//                             <BodyImage src={props.photoInformation.images[index]}></BodyImage>\n//                         </Container3>\n//                     )\n//                 })}\n//             </Container>\n//         </Container2>\n//         <HorizontalGallery \n//             setCollectionsList={setCollectionsList}\n//             getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n//             getPost={getPost}\n//             getCountries={getCities} \n//             setHomePhotoInformation={props.setHomePhotoInformation} \n//             setPageRoute={props.setPageRoute}  \n//             placeName={props?.city} \n//             place={'city'} \n//             title={props.photoInformation?.city} \n//             photoInformation={props.photoInformation} \n//             photos={cityPhotos} \n//             setPhotoInformation={props.setPhotoInformation}  \n//         />\n//         <HorizontalGallery \n//             setCollectionsList={setCollectionsList}\n//             getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n//             getPost={getPost}\n//             setHomePhotoInformation={props.setHomePhotoInformation} \n//             setPageRoute={props.setPageRoute} \n//             placeName={props.photoInformation?.country} \n//             place={'country'} \n//             title={props.photoInformation?.country} \n//             setPhotoInformation={props.setPhotoInformation} \n//             photos={countryPhotos} \n//             photoInformation={props.photoInformation} \n//         />\n//     </div>\n// )","import React from 'react'\nimport '../App.css'\n/* global google */\n\nconst Autocomplete = (props) => {\n\n    let autocomplete\n    const initAutocomplete = () => {\n        autocomplete = new google.maps.places.Autocomplete(\n            document.getElementById('autocomplete'),\n            {\n                types: ['(cities)'],\n                // componentRestrictions: {'country': ['au']},\n                // fields: ['place_id', 'geometry', 'name']\n            }\n        )\n        autocomplete.addListener('place_changed', onPlaceChanged)\n        console.log('autocomplete')\n    }\n\n    const onPlaceChanged = () => {\n        const place = autocomplete.getPlace()\n        if (!place?.name) {\n            document.getElementById('autocomplete').placeholder = 'Enter a place'\n        } else {\n            console.log('autocomplete')\n        }\n    }\n\n    return(\n        <div>\n            <input onChange={initAutocomplete} id='autocomplete'></input>\n        </div>\n    )\n}\n\nexport default Autocomplete","import React, { useState } from 'react'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport Autocomplete from '../Autocomplete/Autocomplete'\nimport {\n    SubmitButton,\n    Container,\n    FormContainer,\n    TextInput,\n    SelectInput,\n    // PreviewImage,\n    DescriptionInput,\n    NewItemButton,\n    RemoveLastElement,\n} from './AddContent.styles'\n\nconst AddContent = (props) => {\n\n    // const [isImage, setIsImage] = useState(false)\n    // const [description, setDescription] = useState(null)\n    const [title, setTitle] = useState(null)\n    const [author, setAuthor] = useState(null)\n    const [isAddImage, setIsAddImage] = useState(false)\n    const [isAdditionalElements, setIsAdditionalElements] = useState(false)\n\n    const submit = (images, mainImage) => {\n        const location = document.getElementById('autocomplete').value\n        const splitLocation = location.split(',')\n        const country = splitLocation[splitLocation.length-1].trim()\n        const city = splitLocation[0]\n        const category = document.getElementById('category').value\n        const timestamp = Date.now()\n        const descriptionArray = []\n        const content = document.getElementsByClassName('content-paragraph')\n        for (let i=0; i<content.length; i++) {\n            descriptionArray.push(String(content[i].value))\n        }\n\n        db.collection('continents-countries').doc('map').collection(country)\n        .where(country, 'in', ['North America', 'South America', 'Asia', 'Europe', 'Oceania', 'Africa'])\n        .get()\n        .then(data => {\n            const continent = data.docs[0].data()[country]\n            db.collection('posts').add({\n                content: descriptionArray,\n                images,\n                title,\n                timestamp,\n                image: mainImage,\n                category,\n                city,\n                country,\n                continent,\n                author,\n                views: 0,\n            }).then(docRef => {\n                db.collection('users').doc(props.user)\n                .collection('posts').doc(docRef.id).set({\n                    reference: `posts/${docRef.id}`,\n                    timestamp,\n                    id: docRef.id,\n                    title,\n                    image: mainImage,\n                    views: 0,\n                    city,\n                    country,\n                    continent,\n                }, {merge: true})\n                .then(()=>{\n                    db.collection('posts').doc(docRef.id).set({\n                        id: docRef.id,\n                    }, {merge: true}) \n                })\n                .then(()=> {\n                    db.collection('preview-posts').add({\n                        reference: `/posts/${docRef.id}`,\n                        timestamp,\n                        id: docRef.id,\n                        title,\n                        image: mainImage,\n                        views: 0,\n                        category,\n                        city,\n                        country,\n                        continent,\n                    })\n                    .then(()=>console.log('uploaded'))\n                })              \n            })\n        })\n    }\n\n    const fileUpload = () => {\n        const photoUrlArray = []\n        let mainPhoto = []\n        const photoFiles = document.getElementsByClassName('photo-input')\n        if(photoFiles.length>0) {\n            for (let i = 0; i<photoFiles.length; i++) {\n                const file = photoFiles[i].files[0]\n                const metadata = {\n                    contentType: file.type\n                }\n                firebase.storage().ref()\n                .child(file.name)\n                .put(file, metadata)\n                .then(function(snapshot) {\n                    snapshot.ref.getDownloadURL()\n                    .then(downloadURL => {\n                        if(i===0) {\n                            mainPhoto.push(downloadURL)\n                        }else{\n                            photoUrlArray.push(downloadURL)\n                        }\n                        if(i === photoFiles.length -1) {\n                            submit(photoUrlArray, mainPhoto)\n                        }\n                    })\n                    .catch(error => console.log(error))\n                });\n            }\n        }\n    }\n\n    const newParagraph = () => {\n        const input = document.createElement('textarea')\n        input.className='add-content-description-input content-paragraph additional-item'\n        const parent = document.getElementById('content-form')\n        parent.appendChild(input)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n\n    const newImage = () => {\n        const image = document.createElement('input')\n        image.type='file'\n        image.className='photo-input additional-item'\n        image.setAttribute('multiple', '')\n        image.setAttribute('accept', 'image/jpeg, image/png, image/jpg, image/tif')\n        const parent = document.getElementById('content-form')\n        parent.appendChild(image)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n    \n    const removeLastElement = () => {\n        const parent = document.getElementById('content-form')\n        parent.removeChild(parent.lastChild)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n\n    const checkAdditionalElement = () => {\n        const additionalElements = document.getElementsByClassName('additional-item')\n        if(additionalElements.length > 0) {\n            setIsAdditionalElements(true)\n        }else{\n            setIsAdditionalElements(false)\n        }\n    }\n\n    return(\n        <div>\n        <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n        <Container>\n            <FormContainer >\n                <div id='content-form'>\n                <label>Main photo</label>\n                <br></br>\n                <input type='file' className='photo-input'></input>\n                <br></br>\n                <label>Title</label>\n                <TextInput onChange={e=>setTitle(e.target.value)}></TextInput>\n                <label>Your name</label>\n                <TextInput onChange={e=>setAuthor(e.target.value)}></TextInput>\n                <label htmlFor='category'>Category</label>\n                <SelectInput name='category' id='category'>\n                    <option value='' defaultValue>Select category</option>\n                    <option value='restaurant'>Restaurant</option>\n                    <option value='entertainment'>Entertainment</option>\n                    <option value='adventure'>Adventure</option>\n                    <option value='sightseeing'>Sightseeing</option>\n                    <option value='shopping'>Shopping</option>\n                    <option value='museum'>Museum</option>\n                </SelectInput>\n                <label>Select City</label>\n                <Autocomplete />\n                <label>First paragraph</label>\n                <DescriptionInput className='content-paragraph'></DescriptionInput>\n                </div>\n                {isAdditionalElements ? \n                <RemoveLastElement type=\"button\" onClick={removeLastElement}>Remove last element</RemoveLastElement>\n                :\n                null\n                }\n                {isAddImage ? \n                <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n                : \n                <NewItemButton type=\"button\" onClick={newImage}>Add image</NewItemButton>\n                }\n                <br></br>\n                <SubmitButton type=\"button\" onClick={fileUpload}>Submit</SubmitButton>\n            </FormContainer> \n        </Container>\n        </div>\n    )\n\n    // return(\n    //     <div>\n    //         <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n    //         <Container>\n    //             <div>\n    //                 <FormContainer id='content-form'>\n    //                     <label>Main photo</label>\n    //                     <input type='file' className='photo-input'></input>\n    //                     <label>Title</label>\n    //                     <TextInput onChange={e=>setTitle(e.target.value)}></TextInput>\n    //                     <label>Your name</label>\n    //                     <TextInput onChange={e=>setAuthor(e.target.value)}></TextInput>\n    //                     <label htmlFor='category'>Category</label>\n    //                     <SelectInput name='category' id='category'>\n    //                         <option value='' defaultValue>Select category</option>\n    //                         <option value='restaurant'>Restaurant</option>\n    //                         <option value='entertainment'>Entertainment</option>\n    //                         <option value='adventure'>Adventure</option>\n    //                         <option value='sightseeing'>Sightseeing</option>\n    //                         <option value='shopping'>Shopping</option>\n    //                         <option value='museum'>Museum</option>\n    //                     </SelectInput>\n    //                     <label>Select City</label>\n    //                     <Autocomplete />\n    //                     <label>First paragraph</label>\n    //                     <DescriptionInput className='content-paragraph'></DescriptionInput>\n    //                     {isAdditionalElements ? \n    //                     <RemoveLastElement type=\"button\" onClick={removeLastElement}>Remove last element</RemoveLastElement>\n    //                     :\n    //                     null\n    //                     }\n    //                     {isAddImage ? \n    //                     <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n    //                     : \n    //                     <NewItemButton type=\"button\" onClick={newImage}>Add image</NewItemButton>\n    //                     }\n    //                     <br></br>\n    //                     <br></br>\n    //                 </FormContainer>\n    //                 <SubmitButton type=\"button\" onClick={fileUpload}>Submit</SubmitButton>\n    //             </div>\n    //         </Container>\n    //     </div>\n    // )\n}\n\nexport default AddContent\n\n// return(\n//     <div>\n//         <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n//         <Container>\n//             <div>\n//                 <FormContainer id='content-form'>\n//                     <label>Main photo</label>\n//                     <input type='file' className='photo-input'></input>\n//                     <label>Title</label>\n//                     <TextInput onChange={e=>setTitle(e.target.value)}></TextInput>\n//                     <label>Your name</label>\n//                     <TextInput onChange={e=>setAuthor(e.target.value)}></TextInput>\n//                     <label htmlFor='category'>Category</label>\n//                     <SelectInput name='category' id='category'>\n//                         <option value='' defaultValue>Select category</option>\n//                         <option value='restaurant'>Restaurant</option>\n//                         <option value='entertainment'>Entertainment</option>\n//                         <option value='adventure'>Adventure</option>\n//                         <option value='sightseeing'>Sightseeing</option>\n//                         <option value='shopping'>Shopping</option>\n//                         <option value='museum'>Museum</option>\n//                     </SelectInput>\n//                     <label>Select City</label>\n//                     <Autocomplete />\n//                     <label>First paragraph</label>\n//                     <DescriptionInput className='content-paragraph'></DescriptionInput>\n//                     {isAdditionalElements ? \n//                     <RemoveLastElement type=\"button\" onClick={removeLastElement}>Remove last element</RemoveLastElement>\n//                     :\n//                     null\n//                     }\n//                     {isAddImage ? \n//                     <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n//                     : \n//                     <NewItemButton type=\"button\" onClick={newImage}>Add image</NewItemButton>\n//                     }\n//                     <br></br>\n//                     <br></br>\n//                 </FormContainer>\n//                 <SubmitButton type=\"button\" onClick={fileUpload}>Submit</SubmitButton>\n//             </div>\n//         </Container>\n//     </div>\n// )\n\n// <input onChange={displayImage} type='file' className='photo-input'></input>\n\n// {isImage ? \n//     <PreviewImage alt='preview' id='previewImage'></PreviewImage>\n//     :\n//     null\n// }\n\n\n// const displayImage = () => {\n    //     const file = document.getElementById('input').files[0]\n    //     setIsImage(true)\n    //     const viewFile = new FileReader()\n    //     viewFile.onload = (e) => {\n    //         const image = document.getElementById('previewImage')\n    //         image.src = e.target.result\n    //         document.body.appendChild(image)\n    //     }\n    //     viewFile.readAsDataURL(file)\n    // }","import styled from 'styled-components'\n\nexport const PhotoTextContainer = styled.div`\n    position: relative;\n`\n\nexport const PhotoTitle = styled.div`\n    position: absolute;\n    top: 43%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 350ms;\n    font-size: 30px;\n`\n\nexport const PhotoLocation = styled.div`\n    position: absolute;\n    top: 57%;\n    left: 50%;\n    margin-left: -5px;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 350ms;\n    font-size: 20px;\n    white-space: nowrap;\n`\n\nexport const Image = styled.img`\n    margin-bottom: 15px;\n    filter: brightness(1);\n    transition: 800ms ease;\n    transition-delay: 350ms;\n\n    width: ${props => props.width};\n\n    @media(max-width: 520px) {\n        width: 40vw;\n    }\n\n    @media(max-width: 400px) {\n        width: 90vw;\n    }\n\n    animation: fadeIn ease 3s;\n    -webkit-animation: fadeIn ease 3s;\n    -moz-animation: fadeIn ease 3s;\n    -o-animation: fadeIn ease 3s;\n    -ms-animation: fadeIn ease 3s;\n    \n    @keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-o-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n`\n\nexport const PhotoContainer = styled.div`\n\n    cursor: pointer;\n\n    &:hover ${PhotoTitle}{\n        opacity: 1;\n    }\n\n    &:hover ${PhotoLocation}{\n        opacity: 1;\n    }\n\n    &:hover ${Image} {\n        filter: brightness(.3)\n    }\n`\n\nexport const Container = styled.div`\n    margin: 0 15px;\n    margin-left: 35px;\n`\n\nexport const SortSelect = styled.select`\n    height: 40px;\n    width: 150px;\n    color: white;\n    background-color: black;\n    border: none;\n    border-radius: 5%;\n    margin-bottom: 10px;\n    font-size: 15px;\n`","import React, { useEffect, useState } from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport '../App.css'\nimport { \n    Image, \n    Container, \n    PhotoContainer,\n    PhotoTitle,\n    PhotoTextContainer,\n    PhotoLocation,\n    SortSelect,\n} from './GetPhotosHomepage.styles'\nimport Masonry from 'react-masonry-css'\n// import macy from 'macy'\n\nconst DisplayPhoto = (props) => {\n\n    useEffect(()=> { \n        // props.grid()\n        // eslint-disable-next-line\n    }, [props.homePhotoInformation])\n\n    const click = () => {\n        // props.setPageRoute('PhotoFeatured')\n        props.setPhotoInformation(props.photoInfo)\n        props.getFeaturedPhotoInfo(props.photoInfo.id)\n        db.collection('preview-posts').where('image', '==', props.photoInfo.image)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    let width = '30vw'\n \n    return(\n        <PhotoContainer onClick={click}>\n            <PhotoTextContainer>\n                <Image width={width} className='grid-item masonry' alt='' src={props.photoInfo.image}></Image>\n                <PhotoTitle>{props.photoInfo.title}</PhotoTitle>                    \n                <PhotoLocation>{`${props.photoInfo.city}, ${props.photoInfo.country}`}</PhotoLocation>\n            </PhotoTextContainer>\n        </PhotoContainer>\n    )\n}\n\nconst GetPhotos = (props) => {\n\n    const { setHomePhotoInformation, homePhotoInformation} = props\n    const [startAfter, setStartAfter] = useState(null)\n\n    const sort = () => {\n        const e = document.getElementById('sort-photos')\n        const value = e.options[e.selectedIndex].value\n        if(value !== 'Sort by:') {\n            db.collection('preview-posts').orderBy(value, 'desc')\n            .limit(10)\n            .get()\n            .then(data=> {\n                const photoArray = []\n                data.docs.forEach(item=> {\n                    photoArray.push(item.data())\n                })\n                setHomePhotoInformation([...photoArray])\n            })\n        }\n    }\n\n    const lazy = () => {\n        db.collection('preview-posts')\n        .startAt(startAfter)\n        .limit(2)\n        .get()\n        .then(snapshot => {\n            setStartAfter(snapshot.docs[snapshot.docs.length-1])\n            const photosArray = []\n            snapshot.docs.forEach(doc => {\n                photosArray.push(doc.data())\n            })\n            setHomePhotoInformation([...homePhotoInformation, ...photosArray])\n            console.log('lazy')\n        })\n    }\n\n    useEffect(()=>{\n        window.scrollTo({top: 0})\n        if(!homePhotoInformation){\n            db.collection('preview-posts')\n            .limit(4)\n            .get()\n            .then(snapshot => {\n                setStartAfter(snapshot.docs[snapshot.docs.length-1])\n                const photosArray = []\n                snapshot.docs.forEach(doc => {\n                    photosArray.push(doc.data())\n                })\n                setHomePhotoInformation(photosArray)\n                console.log('running')\n            })\n        }\n    }, [setHomePhotoInformation, homePhotoInformation])\n\n    // const grid = () => {\n    //     var elem = document.getElementById('grid');\n    //     macy ({\n    //         container: elem,\n    //         columns: 2,\n    //         trueOrder: true,\n    //         breakAt: {\n    //             1500: 3,\n    //             520: 2,\n    //             400: 1\n    //         },\n    //     })\n    // }\n\n    var intersectionObserver = new IntersectionObserver(function(entries) {\n        if (entries[0].intersectionRatio <= 0) return;\n        console.log('Loaded new items');\n        lazy()\n    });\n\n    const startObserve = () => {\n    intersectionObserver.observe(document.getElementById('lazy'));\n    }\n    \n    return(\n        // <Container onLoad={startObserve}>\n        <Container>\n            <button onClick={lazy}>Lazy</button>\n            <SortSelect id='sort-photos' onChange={()=>sort()}>\n                <option defaultValue value='timestamp'>Newest</option>\n                <option value='views'>Most popular</option>\n            </SortSelect>\n            <div id=\"grid\" className='masonry-container'>\n            <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n\n                {props.homePhotoInformation ? props.homePhotoInformation.map((photo, index)=> {\n                    return(\n                        <DisplayPhoto \n                            startObserve={startObserve}\n                            index={index}\n                            length={props.homePhotoInformation.length}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPageRoute={props.setPageRoute} \n                            setPhotoInformation={props.setPhotoInformation} \n                            key={index} \n                            // grid={grid} \n                            photoInfo={photo} \n                            homePhotoInformation={props.homePhotoInformation}\n                        />\n                    )\n                })\n                :\n                null}\n            </Masonry>\n            </div>\n        </Container>\n    )\n}\n\nexport default GetPhotos","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px;\n`\n\nexport const Photo = styled.img`\n    object-fit: cover;\n    height: 180px;\n    width: 180px;\n    border-radius: 50%;\n`\n\nexport const PostsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\n\nexport const PostContainer = styled.div`\n    margin: 20px;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const PostTitle = styled.div`\n    color: white;\n    font-size: 20px;\n    justify-self: center;\n`","import React, {\n    useEffect,\n    useState,\n} from 'react'\nimport { db } from '../Firebase'\nimport {\n    Photo,\n    PostsContainer,\n    PostContainer, \n    PostTitle,\n} from './UserPosts.styles'\n\nconst DisplayPosts = (props) => {\n\n    const selectPhoto = () => {\n        props.getFeaturedPhotoInfo(props.post.id)\n    }\n\n    return(\n        <PostContainer onClick={selectPhoto}>\n            <Photo src={props.post.image} alt='display'></Photo>\n            <PostTitle>{props.post.title}</PostTitle>\n        </PostContainer>\n    )\n}\n\nconst UserPosts = (props) => {\n\n    const [posts, setPosts] = useState([])\n    \n    useEffect(()=>  {\n        const getPosts = (user) => {\n            if (props.user) {\n                db.collection('users').doc(user)\n                .collection('posts')\n                .get()\n                .then(posts => {\n                    const postsArray = []\n                    posts.docs.forEach(post => {\n                        postsArray.push(post.data())\n                    })\n                    setPosts(postsArray)\n                })\n            }\n            console.log('running')\n        }\n        getPosts(props.user)\n    }, [props.user])\n\n    return(\n        <div>\n            <div>\n            <PostsContainer>\n                {posts?.map((post, index)=> {\n                    return(\n                        <DisplayPosts \n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPhotoInformation={props.setPhotoInformation} \n                            setPageRoute={props.setPageRoute} \n                            key={index} \n                            post={post}\n                        />\n                        )\n                    })}\n            </PostsContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPosts","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 100px;\n    height: 40px;\n    position: absolute;\n    background-color: white;\n    font-size: 20px;\n    transform: translate(-94%, 0%);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-color: black;\n    border: 1px black solid;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container\n} from './DropdownDelete.styles'\n\nconst DropdownDelete = (props) => {\n\n    const deleteCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .where('name', '==', props.collectionName)\n        .get()\n        .then(data=> {\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            console.log('collection deleted')\n        })\n        const collectionInfo = props.collectionInfo\n        collectionInfo.splice(props.index, 1)\n        props.setCollectionInfo([...collectionInfo])\n    }\n\n    return(\n        <Container onClick={deleteCollection}>\n            Delete\n        </Container>\n    )\n}\n\nexport default DropdownDelete","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const Ellipsis = styled.div`\n    cursor: pointer;\n`\n\nexport const Image = styled.img`\n    height: ${props => props.height};\n    width: ${props => props.width};\n    object-fit: cover;\n    float: left;\n`\n\nexport const NoImage = styled.div`\n    height: 268px;\n    width: 270px;\n    object-fit: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid gray;\n`\n\nexport const ImagesContainer = styled.div`\n    height: 270px;\n    width: 270px;\n    overflow: hidden;\n    cursor: pointer;\n    \n    /* display: flex; */\n    /* flex-wrap: wrap; */\n    /* border-radius: 50%; */\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin: 0 5%;\n`\n\nexport const ImageTitleContainer = styled.div`\n    margin: 0 20px 20px 20px;\n`","import React, { useState, useEffect } from 'react'\nimport { db } from '../Firebase'\nimport DropdownDelete from './DropdownDelete'\nimport { \n    Title\n} from '../UserPosts/UserPosts.styles'\nimport { \n    Image,\n    ImagesContainer,\n    Container,\n    NoImage,\n    Header,\n    Ellipsis,\n    ImageTitleContainer,\n} from './Collections.styles'\n\nconst Collection = (props) => {\n\n    const getPhotos = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('collection', '==', props.collection[0])\n        .get()\n        .then(data=> {\n            const imageArray = []\n            data.docs.forEach(doc=> {\n                imageArray.push(doc.data())\n            })\n            props.setHomePhotoInformation(imageArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.delete-collection')) {\n            setIsDeleteMenu(false)\n        }\n    } \n\n    let items = props.collection[1].length\n    if(props.collection[1][0] !== null) {\n        items = props.collection[1].length\n    }else{\n        items = 0\n    }\n    \n    const { collection } = props\n    \n    return(\n        <ImageTitleContainer>\n            <Header>\n                <Title>{props.collection[0]}</Title>\n                <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n                    <div className='delete-collection'>&#8942;</div>\n                    {isDeleteMenu ? \n                    <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n                    :\n                    null\n                    }\n                </Ellipsis>\n            </Header>\n            <ImagesContainer onClick={getPhotos}>\n                {items > 0 ? \n                <div>\n                    <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n                </div>\n                :\n                <NoImage>Collection is empty</NoImage>\n                }\n            </ImagesContainer>\n        </ImageTitleContainer>\n    )\n}\n\nconst Collections = (props) => {\n\n    const [collectionInfo, setCollectionInfo] = useState(null)\n\n    const getCollections = () => {\n        if(props.user) {    \n            const collectionsArray = []\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .orderBy('timestamp', 'desc')\n            .get()\n            .then(collections=> {\n                collections.docs.forEach(collection => {\n                    const valueArray = []\n                    const collectionObject = collection.data()\n                    valueArray.push(collectionObject.name)\n                    if(collectionObject?.preview?.length>0) {\n                        valueArray.push(collectionObject.preview)\n                    }else{\n                        valueArray.push([null])\n                    }\n                    collectionsArray.push(valueArray)\n                })\n                setCollectionInfo(collectionsArray)\n            })\n        }\n    }\n\n    useEffect(getCollections, [props.user])\n\n    return(\n        <Container>\n            {collectionInfo?.map((collection, index)=> {\n                return(\n                    <Collection \n                        collectionInfo={collectionInfo}\n                        setCollectionInfo={setCollectionInfo}\n                        index={index}\n                        user={props.user} \n                        setHomePhotoInformation={props.setHomePhotoInformation} \n                        setPageRoute={props.setPageRoute} \n                        collection={collection} \n                        key={index}\n                    />\n                )\n            })}\n        </Container>\n    )\n}\n\nconst large = 270\nconst small = 135\n\nconst dimensionsMap = {\n    1: {\n        height: {\n            1: large,\n        },\n        width: {\n            1: large\n        }\n    },\n    2: {\n        height: {\n            1: small,\n            2: small,\n        },\n        width: {\n            1: large,\n            2: large\n        }\n    },\n    3: {\n        height: {\n            1: small,\n            2: small,\n            3: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: large\n        }\n    },\n    4: {\n        height: {\n            1: small,\n            2: small,\n            3: small,\n            4: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: small,\n            4: small,\n        }\n    },\n}\n\nexport default Collections","import firebase from 'firebase'\n\nexport const signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`","import React from 'react'\nimport { signout } from '../Login/Signout'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { Container } from './Settings.styles'\n\nconst Settings = () => {\n    return(\n        <Container>\n            <SubmitButton onClick={signout}>Signout</SubmitButton>\n        </Container>\n    )\n}\n\nexport default Settings","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    /* justify-content: center;\n    display: flex; */\n`\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 0;\n`\n\nexport const Container = styled.div`\n    margin: 0 10%;\n`","import React, { useState } from 'react'\nimport UserPosts from '../UserPosts/UserPosts'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport Collections from '../Collections/Collections'\nimport Settings from '../Settings/Settings'\nimport { LI } from '../Header/Header.styles'\nimport { \n    UL, \n    HeaderContainer,\n    Container,\n} from './Profile.styles'\n\nconst Profile = (props) => {\n    const [profilePage, setProfilePage] = useState('Collections')\n    return(\n        <Container>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <HeaderContainer>\n                <UL>\n                    <LI style={{textDecoration: profilePage==='Collections' ? 'underline' : null}} onClick={()=>setProfilePage('Collections')}>Collections</LI>\n                    <LI style={{textDecoration: profilePage==='Posts' ? 'underline' : null}} onClick={()=>setProfilePage('Posts')}>Posts</LI>\n                    <LI style={{textDecoration: profilePage==='Settings' ? 'underline' : null}} onClick={()=>setProfilePage('Settings')}>Settings</LI>\n                </UL>\n            </HeaderContainer>\n            {(()=> {\n                switch (profilePage) {\n                    case 'Posts': \n                        return(\n                            <UserPosts getFeaturedPhotoInfo={props.getFeaturedPhotoInfo} setPhotoInformation={props.setPhotoInformation} setPageRoute={props.setPageRoute} user={props.user} />\n                        )\n                    case 'Collections':\n                        return(\n                            <Collections setHomePhotoInformation={props.setHomePhotoInformation} setPageRoute={props.setPageRoute} user={props.user}/>\n                        )\n                    case 'Settings':\n                        return <Settings />\n                    default:\n                        return null\n                }\n\n            })()}\n        </Container>\n    )\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                <SubmitButton onClick={signout}>Signout</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import React, { \n  useState, \n  useEffect,\n} from 'react'\nimport Header from './Header/Header'\nimport VerticalScroll from './VeritcalScroll/VerticalScroll'\nimport FeaturedPost from './FeaturedPost/FeaturedPost'\nimport AddContent from './AddContent/AddContent'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Profile from './Profile/Profile'\nimport Login from './Login/Login'\n// import QueryTest from './QueryTest'\n// import Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\nimport { db } from './Firebase'\n// import { firebaseApp } from './Firebase'\n\nconst App = () => {\n  const [user, setUser] = useState()\n  const [homePhotoInformation, setHomePhotoInformation] = useState(null)\n  const [photoInformation, setPhotoInformation] = useState(null)\n  const [pageRoute, setPageRoute] = useState('GetPhotos')\n\n  const getFeaturedPhotoInfo = (docID) => {\n    db.collection('posts').doc(docID)\n    .get()\n    .then(data=> {\n      setPhotoInformation(data.data())\n      setPageRoute('FeaturedPost')\n      window.scrollTo({top: 0})\n    })\n  }\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.uid)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      {/* <QueryTest \n        getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n        homePhotoInformation={homePhotoInformation} \n        setHomePhotoInformation={setHomePhotoInformation} \n        setPageRoute={setPageRoute} \n        setPhotoInformation={setPhotoInformation} \n      /> */}\n      {pageRoute==='GetPhotos' ? \n      <Header setHomePhotoInformation={setHomePhotoInformation} setPageRoute={setPageRoute} user={user}/>\n      :\n      null\n      }\n\n      {/* <Signup /> */}\n\n      {(() => {\n        switch (pageRoute) {\n          case 'Upload':\n            return(\n              <AddContent \n              user={user} \n              setPageRoute={setPageRoute} \n              /> \n            )\n          case 'GetPhotos':\n            return (\n              <VerticalScroll scrollHeight='93vh'>\n                <GetPhotos \n                  getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n                  homePhotoInformation={homePhotoInformation} \n                  setHomePhotoInformation={setHomePhotoInformation} \n                  setPageRoute={setPageRoute} \n                  setPhotoInformation={setPhotoInformation} \n                />\n              </VerticalScroll>\n            )\n          case 'FeaturedPost':\n            return <FeaturedPost \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              user={user} \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPageRoute={setPageRoute} \n              setPhotoInformation={setPhotoInformation} \n              photoInformation={photoInformation} \n            />\n          case 'Profile':\n            return <Profile \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setHomePhotoInformation={setHomePhotoInformation} \n              setPhotoInformation={setPhotoInformation} \n              user={user} \n              setPageRoute={setPageRoute} \n            />;\n          case 'Login':\n            return <Login setUser={setUser} user={user} />\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}