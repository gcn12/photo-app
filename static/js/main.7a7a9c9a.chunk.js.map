{"version":3,"sources":["UploadPhoto/UploadPhoto.js","Firebase.js","AddContent/AddContent.styles.js","AddContent/AddContent.js","GetPhotosHomepage/GetPhotosHomepage.js","App.js","reportWebVitals.js","index.js"],"names":["TakePhoto","className","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","SubmitButton","styled","button","Container","div","FormContainer","form","TextInput","input","DescriptionInput","textarea","SelectInput","select","PreviewImage","img","AddContent","useState","title","setTitle","description","setDescription","country","setCountry","city","setCity","isImage","setIsImage","onChange","file","document","getElementById","files","viewFile","FileReader","onload","e","image","src","target","result","body","appendChild","readAsDataURL","type","id","alt","name","value","htmlFor","defaultValue","onClick","ref1","storage","ref","child","metadata","contentType","put","then","snapshot","getDownloadURL","downloadURL","category","continent","submitRef","collection","add","timestamp","Date","now","docRef","doc","set","console","log","submit","catch","error","GetPhotos","useEffect","loadPhotos","get","docs","forEach","createElement","data","grid","elem","Masonry","itemSelector","columnWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7a7a9c9a.chunk.js","sourcesContent":["import React from 'react'\nimport './UploadPhoto.css'\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }\n\nconst TakePhoto = () => {\n    return(\n        <div className='test'>\n            <ul>\n                <li>NORTH AMERICA</li>\n                <li>SOUTH AMERICA</li>\n                <li>EUROPE</li>\n                <li>OCEANIA</li>\n                <li>ASIA</li>\n                <li>AFRICA</li>\n            </ul>\n            {/* <button onClick={test}>Query</button>\n            <button onClick={update}>Update</button>\n            <button onClick={deleteItem}>Delete</button> */}\n        </div>\n    )\n}\n\nexport default TakePhoto","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nconst firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const SubmitButton = styled.button`\n    color: white;\n    background-color: black;\n    border: none;\n    width: 120px;\n    height: 50px;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const FormContainer = styled.form`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 70px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const PreviewImage = styled.img`\n    height: 500px;\n    width: auto;\n`","import React, { useState } from 'react'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport {\n    SubmitButton,\n    Container,\n    FormContainer,\n    TextInput,\n    SelectInput,\n    PreviewImage,\n    DescriptionInput,\n} from './AddContent.styles'\n\nconst AddContent = () => {\n\n    const [title, setTitle] = useState(null)\n    const [description, setDescription] = useState(null)\n    const [country, setCountry] = useState(null)\n    const [city, setCity] = useState(null)\n    const [isImage, setIsImage] = useState(false)\n\n    const submit = (image) => {\n        const category = document.getElementById('category').value\n        const continent = document.getElementById('continent').value\n        const submitRef = db.collection('continents')\n        // if(category && title && city && country && description) {\n            db.collection('posts').add({\n                title,\n                timestamp: Date.now(),\n                image,\n                category,\n                city,\n                description,\n                country,\n                continent,\n            }).then(docRef => {\n                submitRef.doc(continent).set({\n                    [docRef.id]: docRef.id,\n                })\n            })\n            .then(console.log('uploaded'))\n        // }\n    }\n\n    const displayImage = () => {\n        const file = document.getElementById('input').files[0]\n        setIsImage(true)\n        const viewFile = new FileReader()\n        viewFile.onload = (e) => {\n            const image = document.getElementById('previewImage')\n            image.src = e.target.result\n            document.body.appendChild(image)\n        }\n        viewFile.readAsDataURL(file)\n    }\n\n    const fileUpload = () => {\n        const file = document.getElementById('input').files[0]\n        if(file) {\n            const ref1 = firebase.storage().ref().child(file.name);\n            const metadata = {\n                contentType: file.type\n            }\n            ref1.put(file, metadata).then(function(snapshot) {\n                snapshot.ref.getDownloadURL()\n                .then(downloadURL => {\n                    submit(downloadURL)\n                })\n                .catch(error => console.log(error))\n            });\n        }\n    }\n\n    return(\n        <Container>\n            <div>\n                <input onChange={displayImage} type='file' id='input'></input>\n                {isImage ? \n                <PreviewImage alt='preview' id='previewImage'></PreviewImage>\n                :\n                null\n                }\n                <FormContainer>\n                    <label>Title</label>\n                    <TextInput name='title' onChange={e=>setTitle(e.target.value)}></TextInput>\n                    <label htmlFor='category'>Category</label>\n                    <SelectInput name='category' id='category'>\n                        <option value='' defaultValue>Select category</option>\n                        <option value='restaurant'>Restaurant</option>\n                        <option value='entertainment'>Entertainment</option>\n                        <option value='adventure'>Adventure</option>\n                        <option value='sightseeing'>Sightseeing</option>\n                        <option value='shopping'>Shopping</option>\n                        <option value='museum'>Museum</option>\n                    </SelectInput>\n                    <label>City</label>\n                    <TextInput name='city' onChange={e=>setCity(e.target.value)}></TextInput>\n                    <label>Country</label>\n                    <TextInput name='country' onChange={e=>setCountry(e.target.value)}></TextInput>\n                    <label htmlFor='continent'>Continent</label>\n                    <SelectInput name='continent' id='continent'>\n                        <option value='' defaultValue>Select continent</option>\n                        <option value='Europe'>Europe</option>\n                        <option value='North America'>North America</option>\n                        <option value='South America'>South America</option>\n                        <option value='Africa'>Africa</option>\n                        <option value='Oceania'>Oceania</option>\n                        <option value='Asia'>Asia</option>\n                    </SelectInput>\n                    <label>Description</label>\n                    <DescriptionInput name='description' onChange={e=>setDescription(e.target.value)}></DescriptionInput>\n                </FormContainer>\n                <SubmitButton onClick={fileUpload}>Submit</SubmitButton>\n            </div>\n        </Container>\n    )\n}\n\n\n\n\n\n\n\n\n// class AddContent extends Component {\n\n//     state = {\n//         title: '',\n//         city: '',\n//         country: '',\n//         description: '',\n//     }\n\n//     onChange = (e) => {\n//         const { value, name } = e.target\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n\n//     submit = (image) => {\n//         const { title, city, country, description } = this.state\n//         const category = document.getElementById('category').value\n//         // if(category && title && city && country && description) {\n//             db.collection('posts').add({\n//                 title,\n//                 category,\n//                 city,\n//                 country,\n//                 description,\n//                 timestamp: Date.now(),\n//                 image,\n//             }).then(console.log('uploaded'))\n//         // }\n//     }\n\n//     fileUpload = () => {\n//         const file = document.getElementById('input').files[0]\n//         const submit = this.submit\n//         if(file) {\n//             const ref1 = firebase.storage().ref().child(file.name);\n//             const metadata = {\n//                 contentType: file.type\n//             }\n//             ref1.put(file, metadata).then(function(snapshot) {\n//                 snapshot.ref.getDownloadURL()\n//                 .then(downloadURL => {\n//                     submit(downloadURL)\n//                 })\n//                 .catch(error => console.log(error))\n//             });\n//         }\n//     }\n\n//     render() {\n//         return(\n//             <div>\n//                 <input type='file' id='input'></input>\n//                 <form>\n//                     <label>Title</label>\n//                     <input name='title' onChange={this.onChange}></input>\n//                     <label htmlFor='category'>Category</label>\n//                     <select name='category' id='category'>\n//                         <option value='' defaultValue>Select category</option>\n//                         <option value='restaurant'>Restaurant</option>\n//                         <option value='entertainment'>Entertainment</option>\n//                         <option value='adventure'>Adventure</option>\n//                         <option value='sightseeing'>Sightseeing</option>\n//                         <option value='shopping'>Shopping</option>\n//                         <option value='museum'>Museum</option>\n//                     </select>\n//                     <label>City</label>\n//                     <input name='city' onChange={this.onChange}></input>\n//                     <label>Country</label>\n//                     <input name='country' onChange={this.onChange}></input>\n//                     <label>Description</label>\n//                     <input name='description' onChange={this.onChange}></input>\n//                 </form>\n//                 <button onClick={this.fileUpload}>Submit</button>\n//             </div>\n//         )\n//     }\n// }\n\nexport default AddContent","import React, { useEffect } from 'react'\nimport { db } from '../Firebase'\nimport '../App.css'\nimport Masonry from 'masonry-layout'\n\nconst GetPhotos = () => {\n\n    useEffect(()=>{\n        loadPhotos()\n    })\n\n    const loadPhotos = () => {\n        const photoRef = db.collection('posts')\n        photoRef.get()\n        .then(snapshot => {\n            snapshot.docs.forEach(doc => {\n                const image = document.createElement('img')\n                image.src = doc.data().image\n                image.className = 'grid-item'\n                image.onload = grid\n                document.getElementById('grid').appendChild(image)\n                console.log(doc.data().image)\n            })\n        })\n    }\n\n    // new imagesLoaded( imagesLoaded( document.querySelector('#container'), function( instance ) {\n    //     console.log('all images are loaded');\n    // }), callback )\n\n    // var statusElem = document.querySelector('.status');\n    \n\n    const grid = () => {\n        var elem = document.getElementById('grid');\n        new Masonry( elem, {\n            itemSelector: '.grid-item',\n            columnWidth: 120,\n            // gutter: 20\n        });\n    }\n\n\n    return(\n        // <div>\n        //     <button onClick={loadPhotos}>Load photos</button>\n        // </div>\n        <div>\n        <button onClick={grid}>Grid</button>\n            <div id=\"grid\"></div>\n        </div>\n    )\n}\n\nexport default GetPhotos","import React from 'react'\nimport UploadPhoto from './UploadPhoto/UploadPhoto'\nimport AddContent from './AddContent/AddContent'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\n\nconst App = () => {\n  return (\n    <div>\n      <UploadPhoto />\n      <AddContent />\n      <GetPhotos />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// const dataTest = {\n//   continents: {\n//     Asia: {\n//       cities: {\n\n//       }\n//     },\n//     Africa: {\n\n//     },\n//     NorthAmerica: {\n\n//     },\n//     SouthAmerica: {\n\n//     },\n//     Oceania: {\n\n//     },\n//     Europe: {\n\n//     }\n//   },\n//   Posts: {\n//     1: {\n//       country: 'country',\n//       city: 'city',\n//       category: 'category',\n//       timestamp: 'timestamp',\n//       author: 'author',\n//       photo: 'url'\n//     }\n//   },\n//   Users : {\n//     username: {\n//       postsCreated: ['listID', 'listID2'],\n//       lists: {\n//         listName: ['listID', 'listID2']\n//       }\n//     }\n//   }\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}