{"version":3,"sources":["UploadPhoto/UploadPhoto.js","Login/Signout.js","Login/Login.styles.js","Login/Login.js","Firebase.js","SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["TakePhoto","className","signout","firebase","auth","signOut","catch","error","console","log","TextField","styled","input","SubmitButton","button","Text","div","Container","Container2","Login","props","useState","email","setEmail","password","setPassword","user","onChange","e","target","value","type","onClick","length","signInWithEmailAndPassword","then","setUser","uid","db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Signup","createUserWithEmailAndPassword","collection","set","username","err","App","useEffect","onAuthStateChanged","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe8e8b3.chunk.js","sourcesContent":["import React from 'react'\nimport './UploadPhoto.css'\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }\n\nconst TakePhoto = () => {\n    return(\n        <div className='test'>\n            <ul>\n                <li>NORTH AMERICA</li>\n                <li>SOUTH AMERICA</li>\n                <li>EUROPE</li>\n                <li>OCEANIA</li>\n                <li>ASIA</li>\n                <li>AFRICA</li>\n            </ul>\n            {/* <button onClick={test}>Query</button>\n            <button onClick={update}>Update</button>\n            <button onClick={deleteItem}>Delete</button> */}\n        </div>\n    )\n}\n\nexport default TakePhoto","import firebase from 'firebase'\n\nconst signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: white;\n        color: black;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    color: white;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                <SubmitButton onClick={signout}>Signout</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nconst firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport { db } from '../Firebase'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from '../Login/Login.styles'\n\nconst Signup = () => {\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length>0 && password?.length>0) {\n            firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(user=> {\n                console.log(user.user.uid)\n                db.collection('users').set({\n                    username: user.user.uid\n                })\n            })\n            .catch(err=>console.log(err))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e=> setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Signup</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Signup","import React, { useState, useEffect } from 'react'\nimport UploadPhoto from './UploadPhoto/UploadPhoto'\n// import AddContent from './AddContent/AddContent'\n// import GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Login from './Login/Login'\nimport Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\n\nconst App = () => {\n\n  const [user, setUser] = useState()\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.id)\n        console.log('signed in')\n      }\n    })\n  })\n\n  return (\n    <div>\n      <UploadPhoto />\n      <Login setUser={setUser} user={user} />\n      <Signup />\n      {/* <AddContent /> */}\n      {/* <GetPhotos /> */}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// const dataTest = {\n//   continents: {\n//     Asia: {\n//       cities: {\n\n//       }\n//     },\n//     Africa: {\n\n//     },\n//     NorthAmerica: {\n\n//     },\n//     SouthAmerica: {\n\n//     },\n//     Oceania: {\n\n//     },\n//     Europe: {\n\n//     }\n//   },\n//   Posts: {\n//     1: {\n//       country: 'country',\n//       city: 'city',\n//       category: 'category',\n//       timestamp: 'timestamp',\n//       author: 'author',\n//       photo: 'url'\n//     }\n//   },\n//   Users : {\n//     username: {\n//       postsCreated: ['listID', 'listID2'],\n//       lists: {\n//         listName: ['listID', 'listID2']\n//       }\n//     }\n//   }\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}