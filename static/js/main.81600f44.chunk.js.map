{"version":3,"sources":["TakePhoto/TakePhoto.js","App.js","reportWebVitals.js","index.js"],"names":["constraints","video","facingMode","useFrontCamera","document","querySelector","initializeCamera","a","navigator","mediaDevices","getUserMedia","then","stream","srcObject","photo","context","getElementById","getContext","addEventListener","drawImage","changeCamera","TakePhoto","onClick","id","autoPlay","width","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wOAGMA,G,MAAc,CAChBC,MAAO,CAWLC,WAAY,iBAmBdC,GAAiB,EACfF,EAAQG,SAASC,cAAc,U,SAEtBC,I,2EAAf,sBAAAC,EAAA,sDAEIP,EAAYC,MAAMC,WAAaC,EAAiB,OAAS,cAEzDK,UAAUC,aAAaC,aAAaV,GAAaW,MAAK,SAASC,GAE3DX,EAAMY,UAAYD,KAN1B,4C,sBAUA,IAAME,EAAQ,WACV,IACIC,EADSX,SAASY,eAAe,UAChBC,WAAW,MAC5BhB,EAAQG,SAASY,eAAe,SAGpCZ,SAASY,eAAe,QAAQE,iBAAiB,SAAS,WACtDH,EAAQI,UAAUlB,EAAO,EAAG,EAAG,IAAK,SAItCmB,EAAe,WACjBjB,GAAkBA,EAClBG,KAgBWe,EAbG,WACd,OACI,gCAEA,wBAAQC,QAAShB,EAAjB,0BACA,wBAAQgB,QAASR,EAAOS,GAAG,OAA3B,wBACA,wBAAQD,QAASF,EAAjB,2BACA,uBAAOG,GAAG,QAAQC,UAAQ,IAC1B,wBAAQD,GAAG,SAASE,MAAM,MAAMC,OAAO,YC3DhCC,EATH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASY,eAAe,SAM1BY,M","file":"static/js/main.81600f44.chunk.js","sourcesContent":["import React from 'react'\nimport './TakePhoto.css'\n\nconst constraints = {\n    video: {\n    //   width: {\n    //     // min: 1280,\n    //     ideal: 1920,\n    //     max: 2560,\n    //   },\n    //   height: {\n    //     // min: 720,\n    //     ideal: 1080,\n    //     max: 1440,\n    //   },\n      facingMode: 'environment',\n    },\n};\n\n\nconst check = () => {\n    var video = document.getElementById('video');\n    // if (\"mediaDevices\" in navigator && \"getUserMedia\" in navigator.mediaDevices) {\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {\n            //video.src = window.URL.createObjectURL(stream);\n            video.srcObject = stream;\n            video.play();\n        });\n    }else{\n        alert(\"Could not access camera\")\n    }\n}\n\nlet useFrontCamera = true;\nconst video = document.querySelector(\"#video\");\n\nasync function initializeCamera() {\n    // stopVideoStream();\n    constraints.video.facingMode = useFrontCamera ? \"user\" : \"environment\";\n\n    navigator.mediaDevices.getUserMedia(constraints).then(function(stream){\n\n        video.srcObject = stream;\n    })\n}\n\nconst photo = () => {\n    var canvas = document.getElementById('canvas');\n    var context = canvas.getContext('2d');\n    var video = document.getElementById('video');\n\n    // Trigger photo take\n    document.getElementById(\"snap\").addEventListener(\"click\", function() {\n        context.drawImage(video, 0, 0, 640, 480);\n    });\n}\n\nconst changeCamera = () => {\n    useFrontCamera = !useFrontCamera\n    initializeCamera()\n}\n\nconst TakePhoto = () => {\n    return(\n        <div>\n        {/* <button onClick={check}>Start Stream</button> */}\n        <button onClick={initializeCamera}>Start Stream</button>\n        <button onClick={photo} id=\"snap\">Take photo</button>\n        <button onClick={changeCamera}>Change Camera</button>\n        <video id=\"video\" autoPlay></video>\n        <canvas id=\"canvas\" width=\"640\" height=\"480\"></canvas>\n        </div>\n    )\n}\n\nexport default TakePhoto","import React from 'react'\nimport TakePhoto from './TakePhoto/TakePhoto'\n\nconst App = () => {\n  return (\n    <div>\n      <TakePhoto />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}