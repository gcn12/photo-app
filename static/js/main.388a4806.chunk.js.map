{"version":3,"sources":["Firebase.js","Header/Subheader.styles.js","Header/Subheader.js","Header/SubheaderDropdown.styles.js","Header/SubheaderDropdown.js","Header/Header.styles.js","Header/Header.js","VeritcalScroll/VeritcalScroll.styles.js","VeritcalScroll/VerticalScroll.js","Functions.js","HorizontalGallery/HorizontalGallery.styles.js","HorizontalGallery/HorizontalGallery.js","Dropdown/Dropdown.styles.js","Dropdown/Dropdown.js","AddContent/AddContent.styles.js","FeaturedPost/FeaturedPost.styles.js","FeaturedPost/FeaturedPost.js","GetPhotosHomepage/GetPhotosHomepage.styles.js","GetPhotosHomepage/GetPhotosHomepage.js","UserPosts/UserPosts.styles.js","UserPosts/UserPosts.js","Collections/DropdownDelete.styles.js","Collections/DropdownDelete.js","Collections/Collections.styles.js","Collections/Collections.js","Login/Signout.js","Login/Login.styles.js","Settings/Settings.styles.js","Settings/Settings.js","Profile/Profile.styles.js","Profile/Profile.js","Login/Login.js","PublicProfile/PublicProfile.styles.js","PublicProfile/PublicProfile.js","AddContent/TitlePhoto.js","Autocomplete/Autocomplete.js","AddContent/CategoryLocation.js","AddContent/Preview.styles.js","AddContent/Preview.js","AddContent/Body.js","AddContent/Scroll.styles.js","AddContent/Scroll.js","AddContent/SelectFont.styles.js","AddContent/SelectFont.js","AddContent/UploadProgress.styles.js","AddContent/UploadProgress.js","AddContent/AddContent.js","SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Container","styled","div","UL","ul","ULMobile","LI","props","underline","Subheader","selected","onClick","sort","setDropdownTransition","setVisibility","motion","visibility","CenterList","li","Cancel","variants","initial","y","x","opacity","transitionStart","transitionEnd","transition","type","stiffness","SubheaderDropdown","closeDropdown","setTimeout","sortPosts","value","animate","dropdownTransition","Border","Navigation","cursor","Header","useState","setSelected","collection","orderBy","limit","get","then","data","photoArray","docs","forEach","item","push","setHomePhotoInformation","className","continent","photosArray","where","photos","photo","console","log","getPhotoInfo","user","setPageRoute","style","marginBottom","Scroll","scrollHeight","maxHeight","VerticalScroll","children","incrementViewCount","docID","increment","FieldValue","doc","update","views","Title","TextContainer","SeeMore","OverflowX","Image","img","DisplayPhoto","setCollectionsList","getFeaturedPhotoInfo","info","id","url","reference","ref","alt","src","HorizontalGallery","title","place","placeName","map","index","image","photoInformation","getPost","getCountries","setPhotoInformation","Collection","Warning","CreateNewButton","button","CreateNewInput","input","CreateNewSubmit","CollectionName","DropdownItem","updateCollectionPreview","updateTimestampBool","updateObject","preview","delete","Date","now","updateRef","imageArray","set","merge","add","remove","arrayCopy","collectionsList","length","bool","addRef","country","city","timestamp","Dropdown","isCreateCollection","setIsCreateCollection","isCollectionExists","setIsCollectionExists","setCollectionsBoolArray","collectionsBoolArray","autoComplete","placeholder","collectionName","document","getElementById","includes","name","addToCollection","ButtonContainer","NextButton","proceed","width","CategoryLocationContainer","FileUpload","label","PreviewImage","SubmitButton","NewItemButton","long","RemoveLastElement","TextInput","DescriptionInput","textarea","SelectInput","select","Label","BodyButtonContainer","InfoContainer","BodyContainer","margin","font","MainImage","height","Author","Description","BodyImage","BodyImageContainer","FeaturedPost","showDropdown","setShowDropdown","countryPhotos","setCountryPhotos","cityPhotos","setCityPhotos","isImageHorizontal","setIsImageHorizontal","getCities","snapshot","cityArray","countriesArray","window","scrollTo","top","useEffect","getVH","getImageSize","onload","vh","innerHeight","documentElement","setProperty","onclick","e","target","matches","collectionsArray","collections","mapArray","getCollectionsList","getUserProfile","username","author","moment","format","content","images","i","photoBodyMap","PhotoTextContainer","PhotoTitle","PhotoLocation","PhotoContainer","LazyButtonContainer","photoInfo","GetPhotos","homePhotoInformation","startAfter","setStartAfter","lazy","startAt","marginTop","breakpointCols","default","700","columnClassName","Photo","PostsContainer","PostContainer","PostTitle","DisplayPosts","post","UserPosts","posts","setPosts","postsArray","DropdownDelete","collectionInfo","splice","setCollectionInfo","Ellipsis","NoImage","ImagesContainer","ImageTitleContainer","isDeleteMenu","setIsDeleteMenu","items","dimensionsMap","large","small","1","2","3","4","Collections","valueArray","collectionObject","signout","auth","signOut","catch","error","TextField","Text","Container2","Settings","HeaderContainer","Profile","profilePage","setProfilePage","borderBottom","Login","email","setEmail","password","setPassword","onChange","signInWithEmailAndPassword","setUser","uid","ProfileImage","PublicProfile","userData","userPosts","display","justifyContent","profileImage","bio","TitlePhoto","isImage","setIsImage","checkProceed","files","setTitlePhotoProceed","animationMap","titlePhoto","titlePhotoProps","hidden","setTitlePhotoProps","file","viewFile","FileReader","heightWidth","result","setMainImage","readAsDataURL","htmlFor","Autocomplete","autocomplete","onPlaceChanged","getPlace","google","maps","places","types","addListener","CategoryLocation","setCategoryLocationProceed","categoryLocation","defaultValue","PreviewContainer","PreviewContainer2","BodyImagePreview","imageSizeRatio","Preview","previewProps","mainImage","bodyContent","bodyImages","Body","isAddImage","setIsAddImage","isAdditionalElements","setIsAdditionalElements","isTooManyImages","setIsTooManyImages","checkAdditionalElement","getElementsByClassName","body","bodyProps","setBodyProceed","numberInputs","parent","removeChild","lastChild","imageSizeRatioCopy","setImageSizeRatio","createElement","appendChild","setAttribute","uploadButtonLabel","innerHTML","imageDiv","onchange","inputID","inputDiv","sizeMapArray","Array","fill","setBody","fileReader","displayImage","percentageArray","reader","this","ratioTotal","reduce","sum","val","getImageMap","scrollIntoView","ScrollContainer","Paragraph","FontOption","option","FontSelect","SelectFont","selectFont","selectFontProps","paragraph","selectedFont","setFont","UploadingTitle","ProgressContainer","UploadProgress","radius","circumference","Math","PI","strokeDashoffset","uploadProgress","uploadCount","uploadProgressColor","strokeWidth","strokeDasharray","stroke","r","cx","cy","color","shiftUp","transitionBack","delay","uploadStatus","AddContent","categoryLocationProps","setCategoryLocationProps","setPreviewProps","uploadStatusProps","setUploadStatusProps","setSelectFontProps","switchValue","setSwitchValue","setBodyContent","setBodyImages","setUploadCount","setUploadProgress","setUploadProgressColor","setParagraph","titlePhotoProceed","categoryLocationProceed","bodyProceed","fontProceed","setFontProceed","fileUpload","imageSizeArray","photoIndexes","fileArray","photoUrlArraySorted","photoFiles","j","urlArray","indexNum","upload","metadata","contentType","storage","child","put","getDownloadURL","downloadURL","previousUploadProgress","imagesEmptyArrays","unsortedImages","imageMap","splitLocation","split","trim","category","descriptionArray","String","imagesEmptyArraysCopy","imageMapCopy","urlObject","docRef","submit","transitionSwitchNext","getParagraphSample","paragraphs","getBodyContent","count","imagesArray","subArray","getBodyImages","Signup","setUsername","setName","createUserWithEmailAndPassword","err","App","pageRoute","setUserData","setUserPosts","dataArray","postArray","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.388a4806.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    margin: 0 30px;\n`\n\nexport const UL = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    \n    @media (max-width: 670px) {\n        display: none;\n        visibility: hidden;\n        /* list-style-type: none; */\n        /* flex-direction: column; */\n        /* display: block; */\n    }\n    /* justify-content: space-evenly; */\n`\n\nexport const ULMobile = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    \n    @media (min-width: 670px) {\n        display: none;\n        visibility: hidden;\n        /* list-style-type: none; */\n        /* flex-direction: column; */\n        /* display: block; */\n    }\n    /* justify-content: space-evenly; */\n`\n\nexport const LI = styled.ul`\n    font-size: 18px;\n    padding: 0;\n    margin: 0 25px 0 0px;\n    /* text-decoration: ${props=> props.underline ? 'underline' : null}; */\n    border-bottom: ${props=> props.underline ? '1px solid black' : null};\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n\n    &:hover {\n        color: #4a4a4a;\n    }\n`","import React from 'react'\nimport {\n    Container,\n    UL,\n    LI,\n    ULMobile,\n} from './Subheader.styles'\n\n\nconst Subheader = (props) => {\n\n    const openDropdown = () => {\n        props.setDropdownTransition('transitionStart')\n        props.setVisibility(true)\n    }\n\n    return(\n        <div>\n            <Container>\n                <UL>\n                    <LI underline={props.selected === 'assorted' ? true : false}>Assorted</LI>\n                    <LI onClick={()=>props.sort('views')} underline={props.selected === 'views' ? true : false}>Popular</LI>\n                    <LI onClick={()=>props.sort('timestamp')} underline={props.selected === 'timestamp' ? true : false}>Newest</LI>\n                    <LI>Highest rated</LI>\n                </UL>\n            </Container>\n            <Container>\n                <ULMobile>\n                    <LI onClick={openDropdown}>Sort &#x25BC;</LI>\n                </ULMobile>\n            </Container>\n        </div>\n    )\n}\n\nexport default Subheader","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const Container = styled(motion.div)`\n    visibility: ${props=>props.visibility ? 'null' :'hidden'};\n    display: ${props=>props.visibility ? 'null' :'none'};\n    background-color: white;\n    height: 100vh;\n    width: 100vw;\n    position: absolute;\n    z-index: 1;\n    opacity: .93;\n    /* display: flex;\n    justify-content: center;\n    align-items: center; */\n`\n\nexport const CenterList = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const LI = styled.li`\n    padding: 0;\n    font-size: 30px;\n    margin: 0 0 15px 0px;\n    /* text-decoration: ${props=> props.underline ? 'underline' : null}; */\n    border-bottom: ${props=> props.underline ? '1px solid black' : null};\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n    \n\n    &:hover {\n        /* border-bottom: 1px solid black; */\n        color: #4a4a4a;\n    }\n`\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    \n    @media (min-width: 670px) {\n        display: none;\n        visibility: hidden;\n        /* list-style-type: none; */\n        /* flex-direction: column; */\n        /* display: block; */\n    }\n    /* justify-content: space-evenly; */\n`\n\nexport const Cancel = styled.div`\n    position: absolute;\n    right: 0;\n    font-size: 50px;\n    cursor: pointer;\n`","import React from 'react'\nimport {\n    Container,\n    CenterList,\n    Cancel,\n    UL,\n    LI,\n} from './SubheaderDropdown.styles'\n\nconst variants = {\n    initial: {\n        y: -200,\n        x: 0,\n        opacity: 0,\n    },\n    transitionStart: {\n        y: 0,\n        opacity: 1,\n    },\n    transitionEnd: {\n        y: -200,\n        opacity: 0,\n    },\n    transition: {\n        y: {\n            type: 'spring',\n            stiffness: 20,\n        },\n    }\n}\n\n\nconst SubheaderDropdown = (props) => {\n\n    const closeDropdown = () => {\n        props.setDropdownTransition('transitionEnd')\n        setTimeout(()=> props.setVisibility(false), 300)\n        \n    }\n\n    const sortPosts = (value) => {\n        props.sort(value)\n        closeDropdown()\n    }\n\n    const { selected } = props\n\n    return(\n        <Container visibility={props.visibility} transition='transition' variants={variants} initial='initial' animate={props.dropdownTransition}>\n            <div>\n                <Cancel onClick={closeDropdown}>&times;</Cancel>\n            </div>\n            <CenterList>\n                <UL>\n                    <LI underline={selected === 'assorted' ? true : false}>ASSORTED</LI>\n                    <LI onClick={()=>sortPosts('views')} underline={selected === 'views' ? true : false}>POPULAR</LI>\n                    <LI onClick={()=>sortPosts('timestamp')} underline={selected === 'timestamp' ? true : false}>NEWEST</LI>\n                    <LI underline={selected === '' ? true : false}>HIGHEST RATED</LI>\n                </UL>\n            </CenterList>\n        </Container>\n    )\n}\n\nexport default SubheaderDropdown","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0px 30px 0;\n    padding: 10px 0 0 0;\n`\n\nexport const UL = styled.ul`\n    width: 90%;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n    justify-content: space-between;\n    font-size: 25px;\n    &:hover{\n        color: #4a4a4a\n    }\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n`\n\nexport const Border = styled.div`\n    /* position: fixed; */\n    background-color: #f5f5f5;\n    border-bottom: 1px solid #c9c9c9;\n`\n\nexport const Navigation = styled.div`\n    white-space: nowrap;\n    cursor: ${props=>props.cursor};\n    font-size: 22px;\n    margin: 0 5px;\n    &:hover{\n        color: #4a4a4a\n    }\n`\n\n\n// .test {\n//     display: flex;\n//     justify-content: center;\n//   }\n  \n// ul {\n//     width: 90%;\n//     padding: 0;\n//     margin: 0;\n//     list-style-type: none;\n//     color: whitesmoke;\n//     display: flex;\n//     justify-content: space-between;\n//     font-size: 25px;\n//   }","import React, { useState } from 'react'\nimport { db } from '../Firebase'\nimport Subheader from './Subheader'\nimport SubheaderDropdown from './SubheaderDropdown'\nimport {\n    Container,\n    UL,\n    LI,\n    Border,\n    Navigation,\n} from './Header.styles'\n\nconst Header = (props) => {\n\n    const[dropdownTransition, setDropdownTransition] = useState('initial')\n    const[visibility, setVisibility] = useState(false)\n    const [selected, setSelected] = useState('assorted')\n\n    const getPhotoInfo = (continent) => {\n        const photosArray = []\n        db.collection('posts').where('continent', '==', continent)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            console.log(photosArray)\n            props.setHomePhotoInformation(photosArray)\n        })\n    }\n\n    const sort = (value) => {\n        setSelected(value)\n        db.collection('preview-posts').orderBy(value, 'desc')\n        .limit(10)\n        .get()\n        .then(data=> {\n            const photoArray = []\n            data.docs.forEach(item=> {\n                photoArray.push(item.data())\n            })\n            props.setHomePhotoInformation([...photoArray])\n        })\n    }\n\n    return(\n        <Border>\n            <SubheaderDropdown sort={sort} setSelected={setSelected} selected={selected} setHomePhotoInformation={props.setHomePhotoInformation} setVisibility={setVisibility} visibility={visibility} dropdownTransition={dropdownTransition} setDropdownTransition={setDropdownTransition}/>\n            <Container className='test'>\n                <UL>\n                    <LI onClick={()=> getPhotoInfo('North America')}>Discover</LI>\n                    {/* <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI> */}\n                </UL>\n                {props.user ? \n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Upload')}>Upload</Navigation>\n                :\n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Signup')}>Signup</Navigation>\n                }\n                <Navigation>|</Navigation>\n                {props.user ? \n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Profile')}>Profile</Navigation>\n                :\n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Login')}>Log in</Navigation>\n                } \n            </Container>\n            <Subheader sort={sort} setSelected={setSelected} selected={selected} setVisibility={setVisibility} setDropdownTransition={setDropdownTransition} setHomePhotoInformation={props.setHomePhotoInformation}/>\n            <div style={{marginBottom: '10px'}}></div>\n        </Border>\n    )\n}\n\nexport default Header\n\n\n\n\n// import React from 'react'\n// import { SubmitButton } from '../Login/Login.styles'\n// import { db } from '../Firebase'\n// import Subheader from './Subheader'\n// import {\n//     Container,\n//     UL,\n//     LI,\n//     Border,\n// } from './Header.styles'\n\n// const Header = (props) => {\n\n//     const getPhotoInfo = (continent) => {\n//         const photosArray = []\n//         db.collection('posts').where('continent', '==', continent)\n//         .get()\n//         .then(photos => {\n//             photos.docs.forEach(photo=> {\n//                 photosArray.push(photo.data())\n//             })\n//             console.log(photosArray)\n//             props.setHomePhotoInformation(photosArray)\n//         })\n//     }\n\n//     return(\n//         <Border>\n//             <Container className='test'>\n//                 <UL>\n//                     <LI onClick={()=> getPhotoInfo('North America')}>NORTH AMERICA</LI>\n//                     <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Europe')}>EUROPE</LI>\n//                     <LI onClick={()=> getPhotoInfo('Oceania')}>OCEANIA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Asia')}>ASIA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Africa')}>AFRICA</LI>\n//                 </UL>\n//                 {props.user ? \n//                 <SubmitButton onClick={()=>props.setPageRoute('Upload')}>Upload</SubmitButton>\n//                 :\n//                 null\n//                 }\n//                 {props.user ? \n//                 <SubmitButton onClick={()=>props.setPageRoute('Profile')}>Profile</SubmitButton>\n//                 :\n//                 <SubmitButton onClick={()=>props.setPageRoute('Login')}>Log in</SubmitButton>\n//                 } \n//             </Container>\n//             <Subheader />\n//         </Border>\n//     )\n// }\n\n// export default Header\n\n\n\n\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }","import styled from 'styled-components'\n\nexport const Scroll = styled.div`\n    -webkit-overflow-scrolling: touch;\n    height: ${props => props.scrollHeight};\n    max-height: ${props => props.maxHeight};\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { Scroll } from './VeritcalScroll.styles'\n\nconst VerticalScroll = (props) => {\n    return(\n        <Scroll scrollHeight={props.scrollHeight}>\n            {props.children}\n        </Scroll>\n    )\n}\n\nexport default VerticalScroll","import { db } from \"./Firebase\"\nimport firebase from 'firebase'\n\n\nexport const incrementViewCount = (docID) => {\n    const increment = firebase.firestore.FieldValue.increment(1)\n    db.collection('preview-posts').doc(docID)\n    .update({\n        views: increment\n    })\n    .then(()=>null)\n}","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    /* color: white; */\n    font-size: 25px\n`\n\nexport const TextContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const SeeMore = styled.div`\n    /* color: white; */\n    cursor: pointer;\n`\n\nexport const OverflowX = styled.div`\n    overflow-x: scroll;\n    display: flex;\n    -webkit-overflow-scrolling: touch;\n`\n\nexport const Image = styled.img`\n    height: 300px;\n    width: auto;\n    padding-right: 10px;\n    cursor: pointer;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport { \n    Title,\n    OverflowX, \n    Image,\n    SeeMore,\n    TextContainer,\n} from './HorizontalGallery.styles'\n \nconst DisplayPhoto = (props) => {\n\n    const selectPhoto = () => {\n        // props.getPost(props.info.id)\n        props.setCollectionsList([])\n        props.getFeaturedPhotoInfo(props.info.id)\n        db.collection('preview-posts').where('image', '==', props.url)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    return(\n        <div>\n            <Image onClick={selectPhoto} className='grid-item' alt='' src={props.url}></Image>\n        </div>\n    )\n}\n\nconst HorizontalGallery = (props) => {\n\n    const seeMore = () => {\n        const photosArray = []\n        db.collection('posts').where(props.place, '==', props.placeName)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            props.setHomePhotoInformation(photosArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    return(\n        <div>\n            {props.photos ? \n            <div>\n            <TextContainer>\n                <Title>{props.title}</Title>\n                <SeeMore onClick={seeMore}>See more</SeeMore>\n            </TextContainer>\n            <OverflowX>\n                {props.photos.map((info, index) => {\n                    const duplicateCheck = info.image !== props.photoInformation.image\n                    return(\n                        duplicateCheck ? \n                        <DisplayPhoto \n                            setCollectionsList={props.setCollectionsList}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            getPost={props.getPost} \n                            getCountries={props.getCountries} \n                            setPhotoInformation={props.setPhotoInformation} \n                            setHomePhotoInformation={props.setHomePhotoInformation} \n                            key={index} \n                            info={info} \n                            url={info.image}\n                        /> \n                        :\n                        null\n                    )\n                })}\n            </OverflowX>\n            </div>\n        :\n        null\n        }\n        </div>\n    )\n}\n\nexport default HorizontalGallery","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 250px;\n    background-color: #242424;\n    position: absolute;\n    border-radius: 5%;\n`\n\nexport const Collection = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 18px;\n    height: 30px;\n    &:hover {\n        background-color: gray;\n    }\n`\n\nexport const Warning = styled.div`\n    color: red;\n`\n\nexport const CreateNewButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 200px;\n    font-size: 15px;\n    transition: background-color 350ms;\n    cursor: pointer;\n`\n\nexport const CreateNewInput = styled.input`\n    display:inline-block;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    color: white;\n    background-color: black;\n    height: 30px;\n    font-size: 17px;\n`\n\nexport const CreateNewSubmit = styled.button`\n    height: 35px;\n`\n\nexport const CollectionName = styled.div`\n    font-size: 20px;\n    color: white;\n`","import React, { useState } from 'react'\nimport VerticalScroll from '../VeritcalScroll/VerticalScroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport { \n    Container,\n    Collection, \n    Warning,\n    CreateNewButton,\n    CreateNewInput,\n    CreateNewSubmit,\n    CollectionName,\n} from './Dropdown.styles'\n\nconst DropdownItem = (props) => {\n\n    const addToCollection = () => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        if(!props.bool) {\n            addRef.where('image', '==', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .get()\n            .then(data=> {\n                if(data.docs.length === 0) {\n                    addRef.add({\n                        id: props.photoInformation.id,\n                        image: props.photoInformation.image,\n                        country: props.photoInformation.country,\n                        city: props.photoInformation.city,\n                        title: props.photoInformation.title,\n                        collection: props.collection,\n                        timestamp: Date.now()\n                    }).then(()=> {\n                        updateCollectionPreview(true)\n                    })\n                }\n            })\n        }\n    }\n\n    const updateCollectionPreview = (updateTimestampBool) => {\n        const updateObject = {\n            preview: firebase.firestore.FieldValue.delete()\n        }\n        if (updateTimestampBool) {\n            updateObject['timestamp'] = Date.now()\n        }\n        const updateRef = db.collection('users').doc(props.user)\n        updateRef.collection('collection-names')\n        .doc(props.collection)\n        .update(updateObject)\n        .then(()=>{\n            updateRef.collection('collections')\n            // .where('image', '!=', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .orderBy('timestamp', 'desc') \n            .limit(4)\n            .get()\n            .then(data=> {\n                const imageArray = []\n                data.docs.forEach(image=> {\n                    imageArray.push(image.data().image)\n                })\n                \n                updateRef.collection('collection-names')\n                .doc(props.collection)\n                .set({\n                    preview: imageArray\n                }, {merge: true})\n                if (updateTimestampBool) {\n                    add()\n                }else{\n                    remove()\n                }\n            })\n        })\n    }\n\n    const removeFromCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('image', '==', props.photoInformation.image)\n        .where('collection', '==', props.collection)\n        .get()\n        .then(data => {\n            data.docs[0].ref.delete()\n            .then(()=> {\n                updateCollectionPreview(false)\n            })\n        })\n    }\n\n    const add = () => {\n        // addToCollection()\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = true\n        props.setCollectionsList([...arrayCopy])\n\n    }\n\n    const remove = () => {\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = false\n        props.setCollectionsList([...arrayCopy])\n    }\n\n    return(\n        <Collection className='dropdown' onClick={null}>\n            <CollectionName className='dropdown'>{props.collection}</CollectionName>\n            {props.collectionsList.length > 0 ?\n                (props.bool ?\n                <CollectionName style={{cursor: 'pointer'}} className='dropdown' onClick={removeFromCollection}>Remove</CollectionName>\n                :\n                <CollectionName style={{cursor: 'pointer'}} className='dropdown' onClick={addToCollection}>Add</CollectionName> )\n            :\n            null\n        }\n        </Collection>\n    )\n}\n\nconst Dropdown = (props) => {\n\n    const [isCreateCollection, setIsCreateCollection] = useState(false)\n    const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n    const addToCollection = (name) => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        addRef.where('image', '==', props.photoInformation.image)\n        .where('collection', '==', name)\n        .get()\n        .then(data=> {\n            if(data.docs.length === 0) {\n                addRef.add({\n                    ...props.photoInformation,\n                    collection: name,\n                    timestamp: Date.now()\n                })\n            }\n        })\n    }\n\n    const createCollection = () => {\n        const collectionName = document.getElementById('collection-name').value\n        if(!props.collectionsList.includes(collectionName) && collectionName.length>0){\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .doc(collectionName)\n            .set({\n                name: collectionName,\n                timestamp: Date.now(),\n                preview: [props.photoInformation.image]\n            },{merge: true})\n            .then(()=>{\n                addToCollection(collectionName)\n                props.setCollectionsList([[collectionName, true], ...props.collectionsList])\n                setIsCollectionExists(false)\n                document.getElementById('collection-name').value=''\n            })\n        }else{\n            setIsCollectionExists(true)\n        }\n    } \n\n    return(\n        <Container>\n            <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n            {props.collectionsList?.map((collection, index) => {\n                return(\n                    <DropdownItem \n                        setCollectionsList={props.setCollectionsList}\n                        collectionsList={props.collectionsList}\n                        setCollectionsBoolArray={props.setCollectionsBoolArray} \n                        collectionsBoolArray={props.collectionsBoolArray} \n                        index={index} \n                        className='dropdown' \n                        user={props.user} \n                        photoInformation={props.photoInformation} \n                        collection={collection[0]} \n                        key={index}\n                        bool={collection[1]}\n                    />\n                )\n            })}\n            </VerticalScroll>\n            {isCreateCollection ? \n            <div>\n                <CreateNewInput autoComplete='off' placeholder='collection name' id='collection-name' className='dropdown'></CreateNewInput>\n                <CreateNewSubmit onClick={createCollection} className='dropdown'>Enter</CreateNewSubmit>\n            </div>\n            :\n            <CreateNewButton onClick={()=>setIsCreateCollection(true)} className='dropdown'>Create new collection</CreateNewButton>\n        }\n        {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n        </Container>\n    )\n}\n\nexport default Dropdown","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ButtonContainer = styled.div`\n    background-color: #dedede;\n    border-top: 1px solid #b3b3b3;\n    position: fixed;\n    padding: 15px;\n    bottom: 0px;\n    width: 100%;\n    /* position:absolute; */\n    /* bottom:30px; */\n    /* width:100%; */\n    display: flex;\n    justify-content: space-evenly;\n`\n\nexport const NextButton = styled.button`\n    /* position: absolute; */\n    /* right: 150px; */\n    justify-content: flex-end;\n    cursor: ${props=> props.proceed ? 'pointer' : 'default'};\n    color: white;\n    /* background-color: #141414; */\n    background-color: ${props=> props.proceed ? '#141414' : '#6e6e6e'};\n    border: none;\n    width: ${props => props.width};\n    /* width: 120px; */\n    height: 50px;\n    /* cursor: pointer; */\n    transition: background-color 400ms;\n\n    /* &:hover {\n        background-color: #212121;\n    } */\n`\n\nexport const Container = styled(motion.div)`\n    /* height: 110vh; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    /* left: 20%;\n    top: 40%;\n    position: absolute;  */\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const CategoryLocationContainer = styled(motion.div)`\n    /* height: 110vh; */\n    /* position: relative;  */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    /* top: 3%;\n    left: 20%;\n    position: absolute; */\n    /* display: flex; */\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const FileUpload = styled.label`\n    margin: 10px 0 0 0;\n    border: 1px solid black;\n    padding: 5px;\n    color: black;\n    cursor: pointer;\n    font-size: 20px;\n`\n\nexport const PreviewContainer = styled.div`\n\n`\n\nexport const PreviewImage = styled.img`\n    /* height: 450px; */\n    height: 52vh;\n    width: auto;\n`\n\nexport const SubmitButton = styled.button`\n    cursor: pointer;\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const NewItemButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: ${props=> props.long ? '60vw ': '40vw'};\n    /* width: 40vw; */\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const RemoveLastElement = styled.button`\n    color: white;\n    background-color: #ff6257;\n    border: none;\n    width: 20vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n    margin: 20px 0;\n\n    &:hover {\n        /* background-color: #212121; */\n    }\n`\n\nexport const FormContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n    margin-bottom: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const Label = styled.label`\n    font-size: 30px;\n    color: #242424;\n`\n\nexport const BodyButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 60px;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const InfoContainer = styled.div`\n    /* width: 80%; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const BodyContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: ${props=> props.margin}\n`\n\nexport const Title = styled.div`\n    /* color: #242424; */\n    font-size: 40px;\n    font-family: ${props=> props.font};\n`\n\nexport const MainImage = styled.img`\n    /* height: 90vh; */\n    height: ${props=> props.height};\n    width: ${props=> props.width};\n    max-height: 90vh;\n    max-width: 90vw;\n`\n\nexport const Author = styled.div`\n    /* color: #242424; */\n    cursor: pointer;\n    font-family: ${props=> props.font};\n`\n\nexport const Date = styled.div`\n    /* color: #242424; */\n    font-family: ${props=> props.font};\n`\n\nexport const Description = styled.div`\n    font-family: ${props=> props.font};\n    /* color: white; */\n    width: 65vw;\n    margin: 20px 0;\n    font-size: 20px;\n    white-space: pre-wrap;\n    text-align: justify;\n    text-justify: inter-word;\n`\n\nexport const BodyImage = styled.img`\n    width: ${props=> `${props.width}%`};\n    /* width: calc(var(--vh, 1vh) * ${props=> `${props.width}`}); */\n    height: auto;\n    margin: 0 .5%;\n`\n\nexport const BodyImageContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React, { useEffect, useState } from 'react'\nimport HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\nimport Dropdown from '../Dropdown/Dropdown'\nimport { db } from '../Firebase'\n// import FeaturedPostGallery from '../FeaturedPostGallery/FeaturedPostGallery'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport moment from 'moment'\nimport {\n    Title,\n    Description,\n    MainImage,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    Date,\n    // Container2,\n    // Container3,\n    BodyImage,\n} from './FeaturedPost.styles'\n\nconst FeaturedPost = (props) => {\n\n    const [collectionsList, setCollectionsList] = useState([])\n    const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n    const [showDropdown, setShowDropdown] = useState(null)\n    const [countryPhotos, setCountryPhotos] = useState([])\n    const [cityPhotos, setCityPhotos] = useState([])\n    const [isImageHorizontal, setIsImageHorizontal] = useState(true)\n\n    \n    const getCities = () => {\n        const { city, continent, country } = props.photoInformation\n        const ref = db.collection('preview-posts')\n        .where('continent', '==', continent)\n        .where('country', '==', country)\n\n        ref.where('city', '==', city)\n        .get().then(snapshot=>{\n            const cityArray = []\n            snapshot.forEach(city=>{\n                cityArray.push(city.data())\n            })\n            setCityPhotos(cityArray)\n        })\n\n        ref.get().then(snapshot=>{\n            const countriesArray = []\n            snapshot.docs.forEach(doc=> {\n                countriesArray.push(doc.data())\n            }) \n            setCountryPhotos(countriesArray)\n        })\n        window.scrollTo({top: 0})\n    }\n\n    const getPost = (docID) => {\n        db.collection('posts')\n        .doc(docID)\n        .get()\n        .then(data=> {\n            getCities(data.data())\n        })\n    }\n    \n    // eslint-disable-next-line\n    useEffect(()=>getCities(props.photoInformation.id), [])\n    // eslint-disable-next-line\n    useEffect(()=>getVH(), [])\n    // eslint-disable-next-line\n    useEffect(()=>getImageSize(), [])\n\n\n    const getImageSize = () => {\n        var img = new Image();\n        img.onload = function () { \n            if (img.height / img.width > 1) {\n                setIsImageHorizontal(false)\n            }\n            // alert(\"height: \" + img.height + \" width:\" + img.width); \n        };\n        img.src = props.photoInformation.image;\n    }\n    \n\n    const getVH = () => {\n        let vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n\n    const getCollectionsList = () => {\n        const collectionsArray = []\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .orderBy('timestamp', 'desc')\n        .get()\n        .then(collections => {\n            if(collections.docs.length>0) {\n                collections.docs.forEach((collection, index)=> {\n                    const mapArray = []\n                    mapArray.push(collection.data().name)\n                    db.collection('users')\n                    .doc(props.user)\n                    .collection('collections')\n                    .where('collection', '==', collection.data().name)\n                    .where('id', '==', props.photoInformation.id)\n                    .get()\n                    .then(data=> {\n                        if(data) {\n                            if(data.docs.length > 0){\n                                mapArray.push(true)\n                            }else{\n                                mapArray.push(false)\n                            }\n                        }\n                        collectionsArray.push(mapArray)\n                        if (index+1 === collections.docs.length) {\n                            setCollectionsList(collectionsArray)\n                            setShowDropdown(!showDropdown)\n                        }\n                    })\n                })\n            }else{\n                setShowDropdown(!showDropdown)\n            }\n        }) \n    }\n\n    const showDropdownAndGetList = () => {\n        if(collectionsList?.length === 0) {\n            getCollectionsList()\n        }else{\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.dropdown')) {\n            setShowDropdown(false)\n        }\n    }\n\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <Container>\n                <Title font={props.photoInformation.font}>{props.photoInformation?.title}</Title>\n                <div>\n                <MainImage width={isImageHorizontal ? '80vw' : 'auto'} height={isImageHorizontal ? 'auto' : '80vh'} id='test' alt='display' src={props?.photoInformation?.image}></MainImage>\n                <InfoContainer>\n                    {props?.user ? \n                    <div>\n                        <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n                            <div className='dropdown'>Add to collection</div>\n                        </SubmitButton>\n                        {showDropdown ? \n                        <Dropdown\n                            photoInformation={props.photoInformation}\n                            setCollectionsBoolArray={setCollectionsBoolArray}\n                            collectionsBoolArray={collectionsBoolArray} \n                            className='dropdown' \n                            user={props.user} \n                            collectionsList={collectionsList}\n                            setCollectionsList={setCollectionsList}\n                        /> \n                        : \n                        null}  \n                    </div>\n                    :\n                    null}\n                    <Author onClick={()=>props.getUserProfile(props.photoInformation.username)} font={props.photoInformation.font}>{props.photoInformation?.author}</Author>\n                    <Date font={props.photoInformation.font}>{moment(props.photoInformation?.timestamp).format('MMMM Do YYYY')}</Date>\n                </InfoContainer>\n                </div>\n            </Container>\n                {props.photoInformation?.content.map((item, index) => {\n                    return(\n                        <BodyContainer key={index}>\n                            <Description font={props.photoInformation.font}>{item}</Description>\n                            <BodyImageContainer>\n                            {props?.photoInformation?.images[index]?.map((image, i)=> {\n                                return(\n                                    <BodyImage width={65 * props.photoInformation.photoBodyMap[index][i]} src={image} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            \n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                getCountries={getCities} \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute}  \n                placeName={props?.city} \n                place={'city'} \n                title={props.photoInformation?.city} \n                photoInformation={props.photoInformation} \n                photos={cityPhotos} \n                setPhotoInformation={props.setPhotoInformation}  \n            />\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute} \n                placeName={props.photoInformation?.country} \n                place={'country'} \n                title={props.photoInformation?.country} \n                setPhotoInformation={props.setPhotoInformation} \n                photos={countryPhotos} \n                photoInformation={props.photoInformation} \n            />\n        </div>\n    )\n}\n\nexport default FeaturedPost","import styled from 'styled-components'\n\nexport const PhotoTextContainer = styled.div`\n    position: relative;\n`\n\nexport const PhotoTitle = styled.div`\n    color: white;\n    position: absolute;\n    top: 43%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 250ms;\n    font-size: 30px;\n    white-space: nowrap;\n`\n\nexport const PhotoLocation = styled.div`\n    position: absolute;\n    top: 57%;\n    left: 50%;\n    margin-left: -5px;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 250ms;\n    font-size: 20px;\n    white-space: nowrap;\n    color: white;\n`\n\nexport const Image = styled.img`\n    margin-bottom: 15px;\n    filter: brightness(1);\n    transition: 800ms ease;\n    transition-delay: 250ms;\n\n    width: ${props => props.width};\n\n    @media(max-width: 700px) {\n        width: 40vw;\n    }\n\n    animation: fadeIn ease 3s;\n    -webkit-animation: fadeIn ease 3s;\n    -moz-animation: fadeIn ease 3s;\n    -o-animation: fadeIn ease 3s;\n    -ms-animation: fadeIn ease 3s;\n    \n    @keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {opacity:0;} \n        100% {opacity:1;}\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-o-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n`\n\nexport const PhotoContainer = styled.div`\n\n    cursor: pointer;\n\n    &:hover ${PhotoTitle}{\n        opacity: 1;\n    }\n\n    &:hover ${PhotoLocation}{\n        opacity: 1;\n    }\n\n    &:hover ${Image} {\n        filter: brightness(.3)\n    }\n`\n\nexport const LazyButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const Container = styled.div`\n    margin: 0 15px;\n    margin-left: 40px;\n\n    @media (max-width: 670px) {\n        margin: 0;\n        margin-left: 0px;\n    }\n`\n\nexport const SortSelect = styled.select`\n    height: 40px;\n    width: 150px;\n    color: white;\n    background-color: black;\n    border: none;\n    border-radius: 5%;\n    margin-bottom: 10px;\n    font-size: 15px;\n`","import React, { useEffect, useState } from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\n// import { useInView } from 'react-intersection-observer'\nimport '../App.css'\nimport { \n    Image, \n    Container, \n    PhotoContainer,\n    PhotoTitle,\n    PhotoTextContainer,\n    PhotoLocation,\n    LazyButtonContainer,\n} from './GetPhotosHomepage.styles'\nimport Masonry from 'react-masonry-css'\nimport { SubmitButton, } from '../AddContent/AddContent.styles'\n\nconst DisplayPhoto = (props) => {\n\n    const click = () => {\n        // props.setPageRoute('PhotoFeatured')\n        props.setPhotoInformation(props.photoInfo)\n        props.getFeaturedPhotoInfo(props.photoInfo.id, props.photoInfo.username)\n        db.collection('preview-posts').where('image', '==', props.photoInfo.image)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    let width = '30vw'\n \n    return(\n        <PhotoContainer onClick={click}>\n            <PhotoTextContainer>\n                <Image width={width} className='grid-item masonry' alt='' src={props.photoInfo.image}></Image>\n                <PhotoTitle>{props.photoInfo.title}</PhotoTitle>                    \n                <PhotoLocation>{`${props.photoInfo.city}, ${props.photoInfo.country}`}</PhotoLocation>\n            </PhotoTextContainer>\n        </PhotoContainer>\n    )\n}\n\nconst GetPhotos = (props) => {\n\n    const { setHomePhotoInformation, homePhotoInformation} = props\n    const [startAfter, setStartAfter] = useState(null)\n\n    const lazy = () => {\n        db.collection('preview-posts')\n        .startAt(startAfter)\n        .limit(15)\n        .get()\n        .then(snapshot => {\n            setStartAfter(snapshot.docs[snapshot.docs.length-1])\n            const photosArray = []\n            snapshot.docs.forEach(doc => {\n                photosArray.push(doc.data())\n            })\n            setHomePhotoInformation([...homePhotoInformation, ...photosArray])\n            console.log('lazy')\n        })\n    }\n\n    useEffect(()=>{\n        window.scrollTo({top: 0})\n        if(!homePhotoInformation){\n            db.collection('preview-posts')\n            .limit(17)\n            .get()\n            .then(snapshot => {\n                setStartAfter(snapshot.docs[snapshot.docs.length-1])\n                const photosArray = []\n                snapshot.docs.forEach(doc => {\n                    photosArray.push(doc.data())\n                })\n                setHomePhotoInformation(photosArray)\n                console.log('running')\n            })\n        }\n    }, [setHomePhotoInformation, homePhotoInformation])\n    \n    return(\n        // <Container onLoad={startObserve}>\n        <Container>\n            <div style={{marginTop: '15px'}}></div>\n            <div id=\"grid\" className='masonry-container'>\n            <Masonry\n            breakpointCols={{default: 3, 700: 2}}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n\n                {props.homePhotoInformation ? props.homePhotoInformation.map((photo, index)=> {\n                    return(\n                        <DisplayPhoto \n                            lazy={lazy}\n                            index={index}\n                            length={props.homePhotoInformation.length}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPageRoute={props.setPageRoute} \n                            setPhotoInformation={props.setPhotoInformation} \n                            key={index} \n                            // grid={grid} \n                            photoInfo={photo} \n                            homePhotoInformation={props.homePhotoInformation}\n                        />\n                    )\n                })\n                :\n                null}\n            </Masonry>\n            <LazyButtonContainer>\n                <SubmitButton onClick={lazy}>Load more</SubmitButton>\n            </LazyButtonContainer>\n            </div>\n        </Container>\n    )\n}\n\nexport default GetPhotos","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    /* color: white; */\n    font-size: 25px;\n`\n\nexport const Photo = styled.img`\n    object-fit: cover;\n    height: 180px;\n    width: 180px;\n    border-radius: 50%;\n`\n\nexport const PostsContainer = styled.div`\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between; */\n    /* margin: 0 5%; */\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: 20px;\n    align-items: stretch;\n    justify-items: center;\n`\n\nexport const PostContainer = styled.div`\n    margin: 20px;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const PostTitle = styled.div`\n    /* color: white; */\n    font-size: 20px;\n    justify-self: center;\n`","import React, {\n    useEffect,\n    useState,\n} from 'react'\nimport { db } from '../Firebase'\nimport {\n    Photo,\n    PostsContainer,\n    PostContainer, \n    PostTitle,\n} from './UserPosts.styles'\n \nexport const DisplayPosts = (props) => {\n\n    const selectPhoto = () => {\n        props.getFeaturedPhotoInfo(props.post.id)\n    }\n\n    return(\n        <PostContainer onClick={selectPhoto}>\n            <Photo src={props.post.image} alt='display'></Photo>\n            <PostTitle>{props.post.title}</PostTitle>\n        </PostContainer>\n    )\n}\n\nconst UserPosts = (props) => {\n\n    const [posts, setPosts] = useState([])\n    \n    useEffect(()=>  {\n        const getPosts = (user) => {\n            if (props.user) {\n                db.collection('users').doc(user)\n                .collection('posts')\n                .get()\n                .then(posts => {\n                    const postsArray = []\n                    posts.docs.forEach(post => {\n                        postsArray.push(post.data())\n                    })\n                    setPosts(postsArray)\n                })\n            }\n            console.log('running')\n        }\n        getPosts(props.user)\n    }, [props.user])\n\n    return(\n        <div>\n            <div>\n            <PostsContainer>\n                {posts?.map((post, index)=> {\n                    return(\n                        <DisplayPosts \n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPhotoInformation={props.setPhotoInformation} \n                            setPageRoute={props.setPageRoute} \n                            key={index} \n                            post={post}\n                        />\n                        )\n                    })}\n            </PostsContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPosts","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 100px;\n    height: 40px;\n    position: absolute;\n    background-color: white;\n    font-size: 20px;\n    transform: translate(-93%, 0%);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-color: black;\n    border: 1px black solid;\n\n    &:hover {\n        background-color: #525252;\n        color: white;\n    }\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container\n} from './DropdownDelete.styles'\n\nconst DropdownDelete = (props) => {\n\n    const deleteCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .where('name', '==', props.collectionName)\n        .get()\n        .then(data=> {\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            console.log('collection deleted')\n        })\n        const collectionInfo = props.collectionInfo\n        collectionInfo.splice(props.index, 1)\n        props.setCollectionInfo([...collectionInfo])\n    }\n\n    return(\n        <Container onClick={deleteCollection}>\n            Delete\n        </Container>\n    )\n}\n\nexport default DropdownDelete","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const Ellipsis = styled.div`\n    cursor: pointer;\n`\n\nexport const Image = styled.img`\n    height: ${props => props.height};\n    width: ${props => props.width};\n    object-fit: cover;\n    float: left;\n`\n\nexport const NoImage = styled.div`\n    height: 268px;\n    width: 268px;\n    object-fit: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid gray;\n`\n \nexport const ImagesContainer = styled.div`\n    height: 270px;\n    width: 270px;\n    overflow: hidden;\n    cursor: pointer;\n`\n\nexport const Container = styled.div`\n    /* display: flex; */\n    /* flex-wrap: wrap; */\n    /* justify-content: space-between; */\n    margin: 0 2%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n    grid-gap: 20px;\n    align-items: stretch;\n    justify-items: center;\n`\n\nexport const ImageTitleContainer = styled.div`\n    /* margin: 0 20px 20px 20px; */\n    /* display: inline-block; */\n    /* max-width: 100%; */\n`\n\n\n\n\n\n\n\n// import styled from 'styled-components'\n\n// export const Header = styled.div`\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: flex-end;\n// `\n\n// export const Ellipsis = styled.div`\n//     cursor: pointer;\n// `\n\n// export const Image = styled.img`\n//     height: ${props => props.height};\n//     width: ${props => props.width};\n//     object-fit: cover;\n//     float: left;\n// `\n\n// export const NoImage = styled.div`\n//     height: 268px;\n//     width: 268px;\n//     object-fit: cover;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     border: 1px solid gray;\n// `\n \n// export const ImagesContainer = styled.div`\n//     height: 270px;\n//     width: 270px;\n//     overflow: hidden;\n//     cursor: pointer;\n    \n//     /* display: flex; */\n//     /* flex-wrap: wrap; */\n//     /* border-radius: 50%; */\n// `\n\n// export const Container = styled.div`\n//     display: flex;\n//     flex-wrap: wrap;\n//     justify-content: space-between;\n//     margin: 0 5%;\n// `\n\n// export const ImageTitleContainer = styled.div`\n//     margin: 0 20px 20px 20px;\n// `","import React, { useState, useEffect } from 'react'\nimport { db } from '../Firebase'\nimport DropdownDelete from './DropdownDelete'\nimport { \n    Title\n} from '../UserPosts/UserPosts.styles'\nimport { \n    Image,\n    ImagesContainer,\n    Container,\n    NoImage,\n    Header,\n    Ellipsis,\n    ImageTitleContainer,\n} from './Collections.styles'\n\nconst Collection = (props) => {\n\n    const getPhotos = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('collection', '==', props.collection[0])\n        .get()\n        .then(data=> {\n            const imageArray = []\n            data.docs.forEach(doc=> {\n                imageArray.push(doc.data())\n            })\n            props.setHomePhotoInformation(imageArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.delete-collection')) {\n            setIsDeleteMenu(false)\n        }\n    } \n\n    let items = props.collection[1].length\n    if(props.collection[1][0] !== null) {\n        items = props.collection[1].length\n    }else{\n        items = 0\n    }\n    \n    const { collection } = props\n    \n    return(\n        <ImageTitleContainer>\n            <Header>\n                <Title>{props.collection[0]}</Title>\n                <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n                    <div className='delete-collection'>&#8942;</div>\n                    {isDeleteMenu ? \n                    <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n                    :\n                    null\n                    }\n                </Ellipsis>\n            </Header>\n            <ImagesContainer onClick={getPhotos}>\n                {items > 0 ? \n                <div>\n                    <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n                </div>\n                :\n                <NoImage>Collection is empty</NoImage>\n                }\n            </ImagesContainer>\n        </ImageTitleContainer>\n    )\n}\n\nconst Collections = (props) => {\n\n    const [collectionInfo, setCollectionInfo] = useState(null)\n\n    const getCollections = () => {\n        if(props.user) {    \n            const collectionsArray = []\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .orderBy('timestamp', 'desc')\n            .get()\n            .then(collections=> {\n                collections.docs.forEach(collection => {\n                    const valueArray = []\n                    const collectionObject = collection.data()\n                    valueArray.push(collectionObject.name)\n                    if(collectionObject?.preview?.length>0) {\n                        valueArray.push(collectionObject.preview)\n                    }else{\n                        valueArray.push([null])\n                    }\n                    collectionsArray.push(valueArray)\n                })\n                setCollectionInfo(collectionsArray)\n            })\n        }\n    }\n\n    useEffect(getCollections, [props.user])\n \n    return(\n        <Container>\n            {collectionInfo?.map((collection, index)=> {\n                return(\n                    <Collection \n                        collectionInfo={collectionInfo}\n                        setCollectionInfo={setCollectionInfo}\n                        index={index}\n                        user={props.user} \n                        setHomePhotoInformation={props.setHomePhotoInformation} \n                        setPageRoute={props.setPageRoute} \n                        collection={collection} \n                        key={index}\n                    />\n                )\n            })}\n        </Container>\n    )\n}\n\nconst large = 270\nconst small = 135\n\nconst dimensionsMap = {\n    1: {\n        height: {\n            1: large,\n        },\n        width: {\n            1: large\n        }\n    },\n    2: {\n        height: {\n            1: small,\n            2: small,\n        },\n        width: {\n            1: large,\n            2: large\n        }\n    },\n    3: {\n        height: {\n            1: small,\n            2: small,\n            3: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: large\n        }\n    },\n    4: {\n        height: {\n            1: small,\n            2: small,\n            3: small,\n            4: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: small,\n            4: small,\n        }\n    },\n}\n\nexport default Collections\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react'\n// import { db } from '../Firebase'\n// import DropdownDelete from './DropdownDelete'\n// import { \n//     Title\n// } from '../UserPosts/UserPosts.styles'\n// import { \n//     Image,\n//     ImagesContainer,\n//     Container,\n//     NoImage,\n//     Header,\n//     Ellipsis,\n//     ImageTitleContainer,\n// } from './Collections.styles'\n\n// const Collection = (props) => {\n\n//     const getPhotos = () => {\n//         db.collection('users')\n//         .doc(props.user)\n//         .collection('collections')\n//         .where('collection', '==', props.collection[0])\n//         .get()\n//         .then(data=> {\n//             const imageArray = []\n//             data.docs.forEach(doc=> {\n//                 imageArray.push(doc.data())\n//             })\n//             props.setHomePhotoInformation(imageArray)\n//             props.setPageRoute('GetPhotos')\n//         })\n//     }\n\n//     const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n//     window.onclick = (e) => {\n//         if (!e.target.matches('.delete-collection')) {\n//             setIsDeleteMenu(false)\n//         }\n//     } \n\n//     let items = props.collection[1].length\n//     if(props.collection[1][0] !== null) {\n//         items = props.collection[1].length\n//     }else{\n//         items = 0\n//     }\n    \n//     const { collection } = props\n    \n//     return(\n//         <ImageTitleContainer>\n//             <Header>\n//                 <Title>{props.collection[0]}</Title>\n//                 <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n//                     <div className='delete-collection'>&#8942;</div>\n//                     {isDeleteMenu ? \n//                     <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n//                     :\n//                     null\n//                     }\n//                 </Ellipsis>\n//             </Header>\n//             <ImagesContainer onClick={getPhotos}>\n//                 {items > 0 ? \n//                 <div>\n//                     <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n//                 </div>\n//                 :\n//                 <NoImage>Collection is empty</NoImage>\n//                 }\n//             </ImagesContainer>\n//         </ImageTitleContainer>\n//     )\n// }\n\n// const Collections = (props) => {\n\n//     const [collectionInfo, setCollectionInfo] = useState(null)\n\n//     const getCollections = () => {\n//         if(props.user) {    \n//             const collectionsArray = []\n//             db.collection('users')\n//             .doc(props.user)\n//             .collection('collection-names')\n//             .orderBy('timestamp', 'desc')\n//             .get()\n//             .then(collections=> {\n//                 collections.docs.forEach(collection => {\n//                     const valueArray = []\n//                     const collectionObject = collection.data()\n//                     valueArray.push(collectionObject.name)\n//                     if(collectionObject?.preview?.length>0) {\n//                         valueArray.push(collectionObject.preview)\n//                     }else{\n//                         valueArray.push([null])\n//                     }\n//                     collectionsArray.push(valueArray)\n//                 })\n//                 setCollectionInfo(collectionsArray)\n//             })\n//         }\n//     }\n\n//     useEffect(getCollections, [props.user])\n \n//     return(\n//         <Container>\n//             {collectionInfo?.map((collection, index)=> {\n//                 return(\n//                     <Collection \n//                         collectionInfo={collectionInfo}\n//                         setCollectionInfo={setCollectionInfo}\n//                         index={index}\n//                         user={props.user} \n//                         setHomePhotoInformation={props.setHomePhotoInformation} \n//                         setPageRoute={props.setPageRoute} \n//                         collection={collection} \n//                         key={index}\n//                     />\n//                 )\n//             })}\n//         </Container>\n//     )\n// }\n\n// const large = 270\n// const small = 135\n\n// const dimensionsMap = {\n//     1: {\n//         height: {\n//             1: large,\n//         },\n//         width: {\n//             1: large\n//         }\n//     },\n//     2: {\n//         height: {\n//             1: small,\n//             2: small,\n//         },\n//         width: {\n//             1: large,\n//             2: large\n//         }\n//     },\n//     3: {\n//         height: {\n//             1: small,\n//             2: small,\n//             3: small\n//         },\n//         width: {\n//             1: small,\n//             2: small,\n//             3: large\n//         }\n//     },\n//     4: {\n//         height: {\n//             1: small,\n//             2: small,\n//             3: small,\n//             4: small\n//         },\n//         width: {\n//             1: small,\n//             2: small,\n//             3: small,\n//             4: small,\n//         }\n//     },\n// }\n\n// export default Collections","import firebase from 'firebase'\n\nexport const signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #242424;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    /* color:#FFFFFF; */\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: #242424;\n        color: #FFFFFF;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    /* color: white; */\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`","import React from 'react'\nimport { signout } from '../Login/Signout'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { Container } from './Settings.styles'\n\nconst Settings = (props) => {\n\n    const signoutWithRoute = () => {\n        props.setPageRoute('GetPhotos')\n        signout()\n    }\n    \n    return(\n        <Container>\n            <SubmitButton onClick={signoutWithRoute}>Signout</SubmitButton>\n        </Container>\n    )\n}\n\nexport default Settings","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    /* justify-content: center;\n    display: flex; */\n`\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 0;\n    margin: 0;\n`\n\nexport const Container = styled.div`\n    margin: 0 10%;\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n\n    &:hover {\n        border-bottom: 1px solid #242424;\n    }\n`","import React, { useState } from 'react'\nimport UserPosts from '../UserPosts/UserPosts'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport Collections from '../Collections/Collections'\nimport Settings from '../Settings/Settings'\n// import { LI } from '../Header/Header.styles'\nimport { \n    UL, \n    HeaderContainer,\n    Container,\n    LI,\n} from './Profile.styles'\n\nconst Profile = (props) => {\n    const [profilePage, setProfilePage] = useState('Collections')\n    return(\n        <Container>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <HeaderContainer>\n                <UL>\n                    <LI style={{borderBottom: profilePage==='Collections' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Collections')}>Collections</LI>\n                    <LI style={{borderBottom: profilePage==='Posts' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Posts')}>Posts</LI>\n                    <LI style={{borderBottom: profilePage==='Settings' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Settings')}>Settings</LI>\n                </UL>\n            </HeaderContainer>\n            {(()=> {\n                switch (profilePage) {\n                    case 'Posts': \n                        return(\n                            <UserPosts getFeaturedPhotoInfo={props.getFeaturedPhotoInfo} setPhotoInformation={props.setPhotoInformation} setPageRoute={props.setPageRoute} user={props.user} />\n                        )\n                    case 'Collections':\n                        return(\n                            <Collections setHomePhotoInformation={props.setHomePhotoInformation} setPageRoute={props.setPageRoute} user={props.user}/>\n                        )\n                    case 'Settings':\n                        return <Settings setPageRoute={props.setPageRoute}/>\n                    default:\n                        return null\n                }\n\n            })()}\n        </Container>\n    )\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport firebase from 'firebase'\n// import signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                {/* <SubmitButton onClick={signout}>Signout</SubmitButton> */}\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import styled from 'styled-components'\n\nexport const ProfileImage = styled.img`\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    overflow: hidden;\n    box-shadow:  0 0 5px 5px  rgba(40, 40, 40, .1);\n`\n\nexport const Container = styled.div`\n    /* max-width: 30%; */\n    /* min-width: 200px; */\n    width: 300px;\n    height: 100%;\n    background-color: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: justify;\n    padding: 10px 20px;\n    border-radius: 5%;\n    box-shadow: 10px 5px 5px rgba(10, 10, 10, .2);\n`\n\nexport const PostsContainer = styled.div`\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between; */\n    /* margin: 0 5%; */\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: 20px;\n    align-items: stretch;\n    justify-items: center;\n`","import React from 'react'\nimport { DisplayPosts } from '../UserPosts/UserPosts'\nimport {\n    ProfileImage,\n    Container,\n    // PostsContainer,\n} from './PublicProfile.styles'\n\nconst PublicProfile = (props) => {\n\n    const { userData, userPosts } = props\n    return(\n        <div style={{display: 'flex',  justifyContent: 'center', }}>\n            <Container>\n                <ProfileImage alt='profile' src={userData[0]?.profileImage}></ProfileImage>\n                <div>{userData[0]?.name}</div>\n                <div>{userData[0]?.username}</div>\n                <div>{userData[0]?.bio}</div>\n            </Container>\n            {/* <PostsContainer> */}\n            {userPosts?.map((post, index)=> {\n                return(\n                    <DisplayPosts getFeaturedPhotoInfo={props.getFeaturedPhotoInfo} key={index} post={post}/>\n                )\n            })}\n            {/* </PostsContainer> */}\n        </div>\n    )\n}\n\nexport default PublicProfile","import React, { useState } from 'react'\nimport {\n    PreviewImage,\n    TextInput,\n    Container,\n    Label,\n    FileUpload,\n} from './AddContent.styles'\n\nconst TitlePhoto = (props) => {\n\n    const [isImage, setIsImage] = useState(false)\n\n    const displayImage = () => {\n        checkProceed()\n        props.setTitlePhotoProps('shiftUp')\n        const file = document.getElementById('photo-input').files[0]\n        const viewFile = new FileReader()\n        viewFile.onload = (e) => {\n            const heightWidth = new Image()\n            heightWidth.src=e.target.result\n            heightWidth.onload = function () {\n                if(heightWidth.height / heightWidth.width > 1)  {\n                    props.setIsImageHorizontal(false)\n                }\n            }\n            const image = document.getElementById('previewImage')\n            image.src = e.target.result\n            props.setMainImage(e.target.result)\n        }\n        viewFile.readAsDataURL(file)\n        setIsImage(true)\n    }\n\n    const checkProceed = () => {\n        if (document.getElementById('add-content-title').value.length > 1 && document.getElementById('photo-input').files.length===1) {\n            props.setTitlePhotoProceed(true)\n        }else{\n            props.setTitlePhotoProceed(false)\n        }\n    }\n\n    return(\n        <div>\n            <Container visibility={props.animationMap.titlePhoto[props.titlePhotoProps].opacity} initial='initial' transition='transition' variants={props.animationMap.titlePhoto} animate={props.titlePhotoProps}>\n                <Label>Create a title:</Label>\n                <TextInput onChange={checkProceed} autoComplete='off' id='add-content-title'></TextInput>\n                <Label>Upload header photo:</Label>\n                <input hidden onChange={displayImage} id='photo-input' type='file' className='photo-input'></input>\n                <FileUpload htmlFor='photo-input'>Select image</FileUpload>\n                <br></br>\n                {isImage ? \n                <PreviewImage alt='preview' id='previewImage'></PreviewImage>\n                :\n                null\n                }\n                <br></br>\n            </Container>\n        </div>\n    )\n}\n\nexport default TitlePhoto","import React from 'react'\nimport '../App.css'\n/* global google */\n\nconst Autocomplete = (props) => {\n\n    let autocomplete\n    const initAutocomplete = () => {\n        autocomplete = new google.maps.places.Autocomplete(\n            document.getElementById('autocomplete'),\n            {\n                types: ['(cities)'],\n                // componentRestrictions: {'country': ['au']},\n                // fields: ['place_id', 'geometry', 'name']\n            }\n            )\n        autocomplete.addListener('place_changed', onPlaceChanged)\n        props.checkProceed()\n        console.log('autocomplete')\n    }\n\n    const onPlaceChanged = () => {\n        const place = autocomplete.getPlace()\n        if (!place?.name) {\n            document.getElementById('autocomplete').placeholder = 'Enter a place'\n        } else {\n            console.log('autocomplete')\n        }\n    }\n\n    return(\n        <div>\n            <input autoComplete='off' onChange={initAutocomplete} id='autocomplete'></input>\n        </div>\n    )\n}\n\nexport default Autocomplete","import React from 'react'\nimport Autocomplete from '../Autocomplete/Autocomplete'\n\nimport {\n    SelectInput,\n    CategoryLocationContainer,\n    Label,\n} from './AddContent.styles'\n\nconst CategoryLocation = (props) => {\n\n    const checkProceed = () => {\n        if(document.getElementById('category').value.length > 0 && document.getElementById('autocomplete').value.length > 1) {\n            props.setCategoryLocationProceed(true)\n        }else{\n            props.setCategoryLocationProceed(false)\n        }\n    }\n\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.categoryLocation[props.categoryLocation].opacity} initial='initial' variants={props.animationMap.categoryLocation} animate={props.categoryLocation} transition='transition'>\n            <Label htmlFor='category'>Select category:</Label>\n            <SelectInput onChange={checkProceed} name='category' id='category'>\n                <option value='' defaultValue>Select category</option>\n                <option value='restaurant'>Restaurant</option>\n                <option value='entertainment'>Entertainment</option>\n                <option value='adventure'>Adventure</option>\n                <option value='sightseeing'>Sightseeing</option>\n                <option value='shopping'>Shopping</option>\n                <option value='museum'>Museum</option>\n            </SelectInput>\n            <Label>Select city:</Label>\n            <Autocomplete checkProceed={checkProceed}/>\n        </CategoryLocationContainer>\n    )\n}\n\nexport default CategoryLocation","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const Title = styled.div`\n    font-size: 40px;\n    font-family: ${props=> props.font};\n`\n\nexport const Description = styled.div`\n    /* color: white; */\n    width: 65vw;\n    margin: 20px 0;\n    font-size: 20px;\n    white-space: pre-wrap;\n    text-align: justify;\n    text-justify: inter-word;\n    font-family: ${props=> props.font};\n`\n\nexport const Author = styled.div`\n    font-family: ${props=> props.font};\n    /* color: #242424; */\n`\n\nexport const PreviewContainer = styled(motion.div)`\n    /* border: 10px solid black; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    /* position: absolute; \n    top: 2%;\n    left: 10%; */\n` \n \nexport const PreviewContainer2 = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n`\n\nexport const BodyImagePreview = styled.img`\n    /* width: 70vw; */\n    width: ${props=> `${props.width}vw`};\n    height: auto;\n    margin: 0 1%;\n    /* height: 400px; */\n    /* width: auto; */\n`","import React from 'react'\nimport moment from 'moment'\nimport {\n    PreviewContainer,\n    BodyImagePreview,\n    PreviewContainer2,\n} from './Preview.styles'\nimport { SubmitButton } from './AddContent.styles'\nimport {\n    Author,\n    Title,\n    Description,\n    MainImage,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    Date,\n    // Container2,\n    // Container3,\n} from '../FeaturedPost/FeaturedPost.styles'\n\nconst BodyImage = (props) => {\n\n    const image = () => {\n        const viewFile = new FileReader()\n        const file = props.image\n        viewFile.onload = (e) => {\n            const image = document.getElementById(`body-photo-${props.index}-${props.i}`)\n            image.src = e.target.result\n        }\n        viewFile.readAsDataURL(file)\n    }\n\n    image()\n\n    // console.log(65 * props.imageSizeRatio)\n    // console.log(props.image)\n    return(\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={65 / (props.bodyImages[props.index] ? props.bodyImages[props.index].length : 1)} ></BodyImagePreview>\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.index}`} ></BodyImagePreview>\n        <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={65 * props.imageSizeRatio} ></BodyImagePreview>\n    )\n}\n\nconst Preview = (props) => {\n    \n    return( \n        <PreviewContainer2>\n        {/* {console.log(props.imageSizeRatio)} */}\n\n            <PreviewContainer initial='initial' visibility={props.animationMap.preview[props.previewProps].opacity} transition='transition' animate={props.previewProps} variants={props.animationMap.preview}>\n                <Container>\n                    {document.getElementById('add-content-title') ? \n                    <Title font={props.font}>{document.getElementById('add-content-title').value}</Title>\n                    :\n                    null\n                    }\n                    <div> \n                    <MainImage id='test'  width={props.isImageHorizontal ? '80vw' : 'auto'} height={props.isImageHorizontal ? 'auto' : '80vh'} alt='display' src={props?.mainImage}></MainImage>\n                    <InfoContainer>\n    \n                    <SubmitButton className='dropdown'>\n                        <div className='dropdown'>Add to collection</div>\n                    </SubmitButton>\n                    <Author font={props.font}>{'Dan Richards'}</Author>\n                    <Date font={props.font}>{moment(Date.now()).format('MMMM Do YYYY')}</Date>\n                    </InfoContainer>\n                    </div>\n                </Container> \n                {props.bodyContent.map((item, index) => {\n                    // console.log(item)\n                    return(\n                        <BodyContainer margin='35px' key={index}>\n                            <Description font={props.font}>{item}</Description>\n                            <BodyImageContainer>\n                            {props?.bodyImages[index]?.map((image, i)=> {\n                                return(\n                                    <BodyImage imageSizeRatio={props.imageSizeRatio[index][i]} bodyImages={props.bodyImages} i={i} image={image} index={index} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            </PreviewContainer>\n        </PreviewContainer2>\n    )\n}\n \nexport default Preview","import React, { useState } from 'react'\n\nimport {\n    DescriptionInput,\n    NewItemButton,\n    RemoveLastElement,\n    Container,\n    Label,\n    BodyButtonContainer,\n    CategoryLocationContainer,\n} from './AddContent.styles'\n\nconst Body = (props) => {\n\n    const [isAddImage, setIsAddImage] = useState(false)\n    const [isAdditionalElements, setIsAdditionalElements] = useState(false)\n    const [isTooManyImages, setIsTooManyImages] = useState(false)\n\n    const getImageMap = (inputID, inputDiv) => {\n        const images = document.getElementById(inputID)\n        let sizeMapArray = new Array(images.files.length).fill('')\n        if(images.files.length<4) {\n            if(images.files.length>1) {\n                props.setBody('shiftUp')\n                setIsTooManyImages(false)\n                for (let i = 0; i < images.files.length; i++) {\n                    const file = images.files[i];\n                    const fileReader  = new FileReader();\n                    fileReader.onload = function(e)  {\n                        const displayImage = document.createElement(\"img\");\n                        displayImage.src = e.target.result;\n                        displayImage.className = 'upload-gallery-image'\n                        // document.body.appendChild(displayImage);\n                        document.getElementById(inputDiv).appendChild(displayImage);\n                    }\n                    fileReader.readAsDataURL(file);\n    \n                    let percentageArray = []\n                    const reader = new FileReader()\n                    reader.readAsDataURL(images.files[i]);\n                    reader.onload = (e) => {\n                        const image = document.createElement('img')\n                        image.src = e.target.result;\n                        image.onload = function () {\n                            const height = this.height;\n                            const width = this.width;\n                            sizeMapArray[i] = width/height\n                            if(sizeMapArray.length === images.files.length) {\n                                const reducer = (sum, val) => sum + val;\n                                let ratioTotal = sizeMapArray.reduce(reducer, 0);\n                                for (let image of sizeMapArray) {\n                                    percentageArray.push(image/ratioTotal)\n                                }\n                                const index = inputID[inputID.length-1]\n                                const imageSizeRatioCopy = props.imageSizeRatio \n                                imageSizeRatioCopy[index] = percentageArray\n                                props.setImageSizeRatio(imageSizeRatioCopy)\n                            }\n                        };\n                    }\n                }\n            }else{\n                const index = inputID[inputID.length-1]\n                const imageSizeRatioCopy = props.imageSizeRatio \n                imageSizeRatioCopy[index] = [1]\n                props.setImageSizeRatio(imageSizeRatioCopy)\n                const file = images.files[0];\n                const fileReader  = new FileReader();\n                fileReader.onload = function(e)  {\n                    const displayImage = document.createElement(\"img\");\n                    displayImage.src = e.target.result;\n                    displayImage.className = 'upload-gallery-image'\n                    document.getElementById(inputDiv).appendChild(displayImage);\n                }\n                fileReader.readAsDataURL(file);\n            }\n        }else{\n            setIsTooManyImages(true)\n        }\n    }\n\n    const newImage = () => {\n        const numberInputs = document.getElementsByClassName('body-photos').length\n        const image = document.createElement('input')\n        image.type='file'\n        image.className='photo-input additional-item body-photos'\n        image.setAttribute('multiple', '')\n        image.setAttribute('accept', 'image/jpeg, image/png, image/jpg, image/tif')\n        image.id = `image-input-${numberInputs}`\n        image.setAttribute('hidden', '')\n\n        const uploadButtonLabel = document.createElement('label')\n        uploadButtonLabel.htmlFor = `image-input-${numberInputs}`\n        uploadButtonLabel.className = 'upload-button-label'\n        uploadButtonLabel.innerHTML = 'Select images (max. 3)'\n        \n        const imageDiv = document.createElement('div')\n        imageDiv.id = `image-div-${numberInputs}`\n        imageDiv.className = 'image-div'\n\n        const parent = document.getElementById('content-form')\n        parent.appendChild(image)\n        parent.appendChild(imageDiv)\n        parent.appendChild(uploadButtonLabel)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        image.onchange = ()=> {\n            getImageMap(`image-input-${numberInputs}`, `image-div-${numberInputs}`)\n            // props.setBody('shiftUp')\n            const buttons = document.getElementById('body-scroll-here');\n            buttons.scrollIntoView();\n        }\n    }\n    \n    const removeLastElement = () => {\n        const numberInputs = document.getElementsByClassName('body-photos').length\n        const parent = document.getElementById('content-form')\n        parent.removeChild(parent.lastChild)\n        if(isAddImage) {\n            setIsTooManyImages(false)\n            parent.removeChild(parent.lastChild)\n            parent.removeChild(parent.lastChild)\n            const imageSizeRatioCopy = props.imageSizeRatio\n            delete imageSizeRatioCopy[numberInputs-1]\n            props.setImageSizeRatio(imageSizeRatioCopy)\n        }\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n\n    const newParagraph = () => {\n        const input = document.createElement('textarea')\n        input.className='add-content-description-input content-paragraph additional-item'\n        const parent = document.getElementById('content-form')\n        parent.appendChild(input)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        // if(document.getElementsByClassName('add-content-description-input').length > 0){\n        //     props.setBody('shiftUp')\n        // }\n     }\n\n    const checkAdditionalElement = () => {\n        const additionalElements = document.getElementsByClassName('additional-item')\n        if(additionalElements.length > 0) {\n            setIsAdditionalElements(true)\n        }else{\n            setIsAdditionalElements(false)\n        }\n    }\n\n    const checkProceed = () => {\n        if(document.getElementById('content-paragraph-original').value.length > 60) {\n            props.setBodyProceed(true)\n        }else{\n            props.setBodyProceed(false)\n        }\n    }\n\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.body[props.bodyProps].opacity} variants={props.animationMap.body} animate={props.bodyProps} transition='transition' initial={'initial'}>\n            <Container visibility={props.animationMap.body[props.bodyProps].opacity} id='content-form'>\n                <Label>Body content</Label>\n                <DescriptionInput onChange={checkProceed} className='content-paragraph' id='content-paragraph-original'></DescriptionInput>\n            </Container>\n            {isTooManyImages ? <div>Exceeded image limit of three</div> : null}\n            <BodyButtonContainer id='add-content-body-buttons'>\n                {isAdditionalElements ? \n                <RemoveLastElement type=\"button\" onClick={removeLastElement}>{`Remove last ${isAddImage ? 'image' : 'text block'}`}</RemoveLastElement>\n                :\n                null\n                }\n                {isAddImage ? \n                <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n                : \n                <NewItemButton long={!isAdditionalElements} type=\"button\" onClick={newImage}>Add image</NewItemButton>\n                }\n            </BodyButtonContainer>\n            <div id='body-scroll-here'></div>\n        </CategoryLocationContainer>\n    )\n}\n\nexport default Body","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ScrollContainer = styled(motion.div)`\n    /* position: absolute;\n    left: 20%; */\n    /* visibility: hidden; */\n    /* display: none; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    width: 100%;\n    -webkit-overflow-scrolling: touch;\n    height: calc(100vh - 80px);\n    /* height: ${props => props.scrollHeight}; */\n    /* max-height: ${props => props.maxHeight}; */\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { ScrollContainer } from './Scroll.styles'\n\nconst Scroll = (props) => {\n    return(\n        <ScrollContainer transition='transition' initial='initial' animate={props.animate} variants={props.variants} visibility={props.visibility} scrollHeight={props.scrollHeight}>\n            {props.children}\n        </ScrollContainer>\n    )\n}\n\nexport default Scroll","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const Container = styled(motion.div)`\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n`\n\nexport const Title = styled.div`\n    font-size: 40px;\n`\n\nexport const Paragraph = styled.div`\n    font-size: 22px;\n    padding: 20px 20%;\n    font-family: ${props=> props.font};\n    text-align: justify;\n`\n\nexport const FontOption = styled.option`\n    font-family: ${props=> props.font};\n    /* font-size: 20px; */\n`\n\nexport const FontSelect = styled.select`\n    font-size: 20px;\n    padding: 10px;\n`","import React from 'react'\nimport {\n    Container,\n    Paragraph,\n    FontOption,\n    Title,\n    FontSelect,\n} from './SelectFont.styles'\n\nconst SelectFont = (props) => {\n\n    const getFont = () => {\n        const selectedFont = document.getElementById('font-select').value\n        props.setFont(selectedFont)\n    }\n\n    return(\n        <Container visibility={props.animationMap.selectFont[props.selectFontProps].opacity} variants={props.animationMap.selectFont} initial='initial' animate={props.selectFontProps} transition='transition'>\n        {/* <Container visibility={props.animationMap.selectFont[props.selectFontProps].opacity}> */}\n            <Title>Select font:</Title>\n            <Paragraph font={props.font}>{props.paragraph}</Paragraph>\n            <FontSelect onChange={getFont} id='font-select'>\n                <FontOption value=\"'Castoro', serif;\" font=\"'Castoro', serif;\">Castoro</FontOption>\n                <FontOption value=\"'Roboto', sans-serif;\" font=\"'Roboto', sans-serif;\">Roboto</FontOption>\n                <FontOption value=\"'Raleway', sans-serif;\" font=\"'Raleway', sans-serif;\">Raleway</FontOption>\n                <FontOption value=\"'Zilla Slab', serif;\" font=\"'Zilla Slab', serif;\">Zilla Slab</FontOption>\n                <FontOption value=\"'Open Sans', sans-serif;\" font=\"'Open Sans', sans-serif;\">Open Sans</FontOption>\n                <FontOption value=\"'Poppins', sans-serif;\" font=\"'Poppins', sans-serif;\">Poppins</FontOption>\n                <FontOption value=\"'Antic Slab', serif;\" font=\"'Antic Slab', serif;\">Antic Slab</FontOption>\n            </FontSelect>\n        </Container>\n    )\n}\n\nexport default SelectFont","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const UploadingTitle = styled.div`\n    font-size: 30px;\n`\n\nexport const ProgressContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n`","import React from 'react'\nimport {\n    ProgressContainer,\n    UploadingTitle,\n} from './UploadProgress.styles'\n\nconst UploadProgress = (props) => {\n\n    const radius = 52\n    const stroke = 4\n    const normalizedRadius = radius - stroke * 2\n    const circumference = Math.PI * normalizedRadius * 2\n    // const strokeDashoffset = circumference - props.uploadProgress / 100 * circumference\n    const strokeDashoffset = circumference - props.uploadProgress / props.uploadCount * circumference\n\n    return(\n        <ProgressContainer visibility={props.variants[props.animate].opacity} animate={props.animate} variants={props.variants} initial='initial' transition='transition'>\n            {props.uploadProgressColor ? \n            <svg\n            className=\"progress-ring\"\n            height={radius * 2}\n            width={radius * 2}\n            >\n            <circle\n                className=\"progress-ring__circle\"\n                strokeWidth={stroke}\n                strokeDasharray = {circumference + ' ' + circumference}\n                style = {{strokeDashoffset}}\n                stroke='green'\n                fill=\"transparent\"\n                r={normalizedRadius}\n                cx={radius}\n                cy={radius}\n            />\n            </svg>\n            :\n            <svg\n                className=\"progress-ring\"\n                height={radius * 2}\n                width={radius * 2}\n                >\n                <circle\n                    className=\"progress-ring__circle\"\n                    strokeWidth={stroke}\n                    strokeDasharray = {circumference + ' ' + circumference}\n                    style = {{strokeDashoffset}}\n                    stroke='#242424'\n                    fill=\"transparent\"\n                    r={normalizedRadius}\n                    cx={radius}\n                    cy={radius}\n                />\n            </svg>\n            }\n            <UploadingTitle style={{color: props.uploadProgressColor ? 'green' : '#242424'}}>{props.uploadProgressColor ? 'Upload succeeded' : 'Uploading...'}</UploadingTitle>\n            {/* {props.uploadProgressColor ? \n            :\n            <UploadingTitle>Uploading...</UploadingTitle>\n            } */}\n        </ProgressContainer>\n    )\n}\n\nexport default UploadProgress","import TitlePhoto from './TitlePhoto'\nimport CategoryLocation from './CategoryLocation'\nimport Preview from './Preview'\nimport Body from './Body'\nimport Scroll from './Scroll'\nimport SelectFont from './SelectFont'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport UploadProgress from './UploadProgress'\nimport React, { \n    useState \n} from 'react'\nimport {\n    NextButton,\n    ButtonContainer,\n} from './AddContent.styles'\n\nconst animationMap = {\n    titlePhoto: {\n        initial: {\n            x: 0,\n            y: '25vh',\n            opacity: 1,\n        },\n        shiftUp: {\n            x: 0,\n            y: 10,\n            opacity: 1,\n        }, \n        transitionEnd: {\n            x: -100,\n            y: 10,\n            opacity: 0,\n        },\n        transitionBack: {\n            x: 0,\n            // y: 10,\n            opacity: 1,\n        }, \n        transition: {\n            opacity: {\n                delay: 1,\n            },\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    categoryLocation: {\n        initial: {\n            x: 100,\n            y: '25vh',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            y: '25vh',\n            opacity: 1,\n        },\n        transitionBack: {\n            x: 0,\n            y: '25vh',\n            opacity: 1,\n        },\n        transitionEnd: {\n            x: -100,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    body: {\n        initial: {\n            x: 100,\n            y: '25vh',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            y: '25vh',\n            opacity: 1,\n        },\n        shiftUp: {\n            x: 0,\n            y: '0',\n            opacity: 1,\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 1,\n        },\n        transitionEnd: {\n            x: -100,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    selectFont: {\n        initial: {\n            x: 100,\n            y: '10vh',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            y: '10vh',\n            opacity: 1,\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 1,\n        },\n        transitionEnd: {\n            opacity: 0,\n            x: -100\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    preview: {\n        initial: {\n            x: 100,\n            y: '10',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            y: 0,\n            opacity: 1,\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 1,\n        },\n        transitionEnd: {\n            x: -100,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    uploadStatus: {\n        initial: {\n            x: 30,\n            y: '35vh',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            y: '35vh',\n            opacity: 1,\n        },\n        // transitionBack: {\n        //     x: 0,\n        //     opacity: 0,\n        // },\n        transitionEnd: {\n            // x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    }\n}\n\n\nconst AddContent = (props) => {\n    const [mainImage, setMainImage] = useState(null)\n    const [titlePhotoProps, setTitlePhotoProps] = useState('initial')\n    const [categoryLocationProps, setCategoryLocationProps] = useState('initial')\n    const [bodyProps, setBody] = useState('initial')\n    const [previewProps, setPreviewProps] = useState('initial')\n    const [uploadStatusProps, setUploadStatusProps] = useState('initial')\n    const [selectFontProps, setSelectFontProps] = useState('initial')\n    const [switchValue, setSwitchValue] = useState(1)\n    const [bodyContent, setBodyContent] = useState([])\n    const [bodyImages, setBodyImages] = useState([])\n    const [imageSizeRatio, setImageSizeRatio] = useState({})\n    const [uploadCount, setUploadCount] = useState(5)\n    const [uploadProgress, setUploadProgress] = useState(0)\n    const [uploadProgressColor, setUploadProgressColor] = useState(false)\n    const [paragraph, setParagraph] = useState('')\n    const [isImageHorizontal, setIsImageHorizontal] = useState(true)\n    const [font, setFont] = useState('')\n    const [titlePhotoProceed, setTitlePhotoProceed] = useState(false)\n    const [categoryLocationProceed, setCategoryLocationProceed] = useState(false)\n    const [bodyProceed, setBodyProceed] = useState(false)\n    const [fontProceed, setFontProceed] = useState(true)\n\n    const submit = (imagesEmptyArrays, unsortedImages, imageMap, user, imageSizeArray) => {\n        const title = document.getElementById('add-content-title').value\n        const location = document.getElementById('autocomplete').value\n        const splitLocation = location.split(',')\n        const country = splitLocation[splitLocation.length-1].trim()\n        const city = splitLocation[0]\n        const category = document.getElementById('category').value\n        const timestamp = Date.now()\n        const descriptionArray = []\n        const content = document.getElementsByClassName('content-paragraph')\n    \n        for (let i=0; i<content.length; i++) {\n            descriptionArray.push(String(content[i].value))\n        }\n    \n        let mainImage = ''\n    \n        let imagesEmptyArraysCopy = imagesEmptyArrays\n        let imageMapCopy = imageMap\n    \n        for(let i=0; i<unsortedImages.length; i++) {\n            if(i === 0) {\n                mainImage = unsortedImages[i]\n            }else{\n                if(i<imageMapCopy.length+1) {\n                    imagesEmptyArraysCopy[imageMapCopy[i-1]].push(unsortedImages[i])\n                }\n            }\n        }\n    \n        const urlObject = {}\n        \n        for (let i=0; i<imagesEmptyArraysCopy.length; i++) {\n            urlObject[i] = imagesEmptyArraysCopy[i]\n        }\n\n        db.collection('users')\n        .doc(props.user)\n        .get()\n        .then(data=> {\n            const username = data.data()['username']\n            db.collection('continents-countries').doc('map').collection(country)\n            .where(country, 'in', ['North America', 'South America', 'Asia', 'Europe', 'Oceania', 'Africa'])\n            .get()\n            .then(data => {\n                setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                const continent = data.docs[0].data()[country]\n                db.collection('posts').add({\n                    font,\n                    photoBodyMap: imageSizeArray,\n                    content: descriptionArray,\n                    images: urlObject,\n                    title,\n                    timestamp,\n                    image: mainImage,\n                    category,\n                    city,\n                    country,\n                    continent,\n                    author: 'Dan Smith',\n                    views: 0,\n                }).then(docRef => {\n                    setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                    db.collection('users').doc(user)\n                    .collection('posts').doc(docRef.id).set({\n                        reference: `posts/${docRef.id}`,\n                        timestamp,\n                        id: docRef.id,\n                        title: title,\n                        image: mainImage,\n                        views: 0,\n                        city,\n                        country,\n                        continent,\n                    }, {merge: true})\n                    .then(()=>{ \n                        db.collection('posts').doc(docRef.id).set({\n                            id: docRef.id,\n                        }, {merge: true}) \n                    })\n                    .then(()=> {\n                        setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                        db.collection('preview-posts').add({\n                            reference: `/posts/${docRef.id}`,\n                            username,\n                            timestamp,\n                            id: docRef.id,\n                            title,\n                            image: mainImage,\n                            views: 0,\n                            category,\n                            city,\n                            country,\n                            continent,\n                        })\n                        // .then(()=>setUploadProgress(previousUploadProgress=> previousUploadProgress + 1))\n                        .then(()=>{\n                            console.log('uploaded')\n                            setTimeout(()=>setUploadProgressColor(true), 300)\n                            setTimeout(()=>props.getFeaturedPhotoInfo(docRef.id), 2000)\n                        })\n                    })              \n                })\n            })\n        })\n    \n    }\n    \n    const fileUpload = (user, imageSizeArray) => {\n        let photoIndexes = []\n        let fileArray = []\n        const photoUrlArraySorted = []\n        // const urlArray = []\n        const photoFiles = document.getElementsByClassName('photo-input')\n        for (let i = 0; i < photoFiles.length; i++) {\n            fileArray = [...fileArray, ...photoFiles[i].files]\n            if(photoFiles[i].files.length > 1) {\n                photoUrlArraySorted.push([])\n                for(let j = 0; j<photoFiles[i].files.length; j++) {\n                    photoIndexes.push(i-1)\n                }\n            }else{\n                if(i!==0) {\n                    photoIndexes.push(i-1)\n                    photoUrlArraySorted.push([])\n                }\n            }\n        }\n        const urlArray = []\n        let index = []\n        let indexNum = 0\n        const upload = () => {\n            if(indexNum<fileArray.length) {\n                const file = fileArray[indexNum]\n                const metadata = {\n                    contentType: file.type\n                }\n                firebase.storage().ref()\n                .child(file.name)\n                .put(file, metadata)\n                .then(snapshot => {\n                    snapshot.ref.getDownloadURL()\n                    .then(downloadURL => {\n                        urlArray.push(downloadURL)  \n                        indexNum++ \n                        index.push(downloadURL) \n                    }).then((downloadURL)=> {\n                        setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                        if(urlArray.length===fileArray.length) {\n                            submit(photoUrlArraySorted, [...urlArray, downloadURL], photoIndexes, user, imageSizeArray)\n                        }else{\n                            upload()\n                        }\n                    })\n                    .catch(error => console.log(error))\n                });\n            }else{\n                return\n            }\n        }\n        upload()\n    }\n\n    const getBodyContent = () => {\n        const paragraphs = document.getElementsByClassName('content-paragraph')\n        const content = []\n        for (let paragraph of paragraphs) {\n            content.push(paragraph.value)\n        }\n        setBodyContent(content)\n    }\n\n    const getParagraphSample = () => {\n        const paragraph = document.getElementById('content-paragraph-original').value\n        setParagraph(paragraph)\n    }\n\n    const getBodyImages = () => {\n        const images = document.getElementsByClassName('body-photos')\n        let count = 0\n        let imagesArray = []\n        for (let i = 0; i < images.length; i++) {\n            let subArray = []\n            for(let j = 0; j<images[i].files.length; j++) {\n                count += 1\n                subArray.push(images[i].files[j])\n            }\n            imagesArray.push(subArray)\n        }\n        setUploadCount(uploadCount => uploadCount + count)\n        setBodyImages(imagesArray)\n    }\n\n    const transitionSwitchNext = () => {\n        switch(switchValue) {\n            case 1:\n                if(titlePhotoProceed) {\n                    setTitlePhotoProps('transitionEnd')\n                    setCategoryLocationProps('transitionStart')\n                    setSwitchValue(2)\n                }\n                break\n            case 2:\n                if(categoryLocationProceed) {\n                    setCategoryLocationProps('transitionEnd')\n                    setBody('transitionStart')\n                    setSwitchValue(3)\n                }\n                break\n            case 3:\n                if(bodyProceed) {\n                    setBody('transitionEnd')\n                    setSelectFontProps('transitionStart')\n                    getParagraphSample()\n                    setSwitchValue(4)\n                }\n                break\n            case 4:\n                setSelectFontProps('transitionEnd')\n                setPreviewProps('transitionStart')\n                getBodyContent()\n                getBodyImages()\n                setSwitchValue(5)\n            break\n                case 5: \n                setPreviewProps('transitionEnd')\n                fileUpload(props.user, imageSizeRatio)\n                setUploadStatusProps('transitionStart')\n                setUploadProgress(previousUploadProgress => previousUploadProgress + 1)\n                setSwitchValue(6)\n                break\n            default: \n                return null\n        }\n    }\n\n    const transitionSwitchBack = () => {\n        switch(switchValue) {\n            case 2:\n                setTitlePhotoProps('transitionBack')\n                setCategoryLocationProps('initial')\n                setSwitchValue(1)\n                break\n            case 3: \n                setCategoryLocationProps('transitionBack')\n                setBody('initial')\n                setSwitchValue(2)\n                break\n            case 4:\n                setBody('transitionBack')\n                setSelectFontProps('initial')\n                setSwitchValue(3)\n                break\n            case 5: \n                setSelectFontProps('transitionBack')\n                setPreviewProps('initial')\n                setSwitchValue(4)\n                break\n            default: \n                return null\n        }\n    }\n\n\n\n    return(\n        <div>\n            <NextButton proceed={1} width='130px' onClick={()=>props.setPageRoute('GetPhotos')}>Back</NextButton>\n            <UploadProgress uploadProgressColor={uploadProgressColor} animate={uploadStatusProps} variants={animationMap.uploadStatus} uploadCount={uploadCount} uploadProgress={uploadProgress}/>\n            {switchValue === 6 ? \n            null\n            :\n            <div>\n\n            <Scroll scrollHeight='90vh' visibility={animationMap.preview[previewProps].opacity}>\n                <Preview font={font} isImageHorizontal={isImageHorizontal} imageSizeRatio={imageSizeRatio} bodyImages={bodyImages} bodyContent={bodyContent} mainImage={mainImage} previewProps={previewProps} animationMap={animationMap}></Preview>\n            </Scroll>\n            </div>\n            }\n            <Scroll scrollHeight='90vh' visibility={animationMap.titlePhoto[titlePhotoProps].opacity}>\n                <TitlePhoto setTitlePhotoProceed={setTitlePhotoProceed} setIsImageHorizontal={setIsImageHorizontal} setMainImage={setMainImage} animationMap={animationMap} setTitlePhotoProps={setTitlePhotoProps} titlePhotoProps={titlePhotoProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.categoryLocation[categoryLocationProps].opacity}>\n                <CategoryLocation setCategoryLocationProceed={setCategoryLocationProceed} animationMap={animationMap} categoryLocation={categoryLocationProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.body[bodyProps].opacity}>\n                <Body setBodyProceed={setBodyProceed} imageSizeRatio={imageSizeRatio} setImageSizeRatio={setImageSizeRatio} setBody={setBody} animationMap={animationMap} bodyProps={bodyProps}></Body>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.selectFont[selectFontProps].opacity}>\n                <SelectFont setFontProceed={setFontProceed} font={font} setFont={setFont} paragraph={paragraph} animationMap={animationMap} selectFontProps={selectFontProps}/>\n            </Scroll>\n            {switchValue === 6 ? \n            null\n            :\n            <ButtonContainer>\n                {switchValue === 1 ? \n                null\n                :\n                <NextButton proceed={1} width='150px' onClick={transitionSwitchBack}>Back</NextButton>\n                }\n                {(()=> {\n                    switch (switchValue) {\n                        case 1: \n                            return <NextButton proceed={titlePhotoProceed} width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Next</NextButton>\n                        case 2: \n                            return <NextButton proceed={categoryLocationProceed} width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Next</NextButton>\n                        case 3: \n                            return <NextButton proceed={bodyProceed } width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Next</NextButton>\n                        case 4: \n                            return <NextButton proceed={fontProceed} width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Preview</NextButton>\n                        case 5:\n                            return <NextButton proceed={true} width={switchValue === 1 ? '300px' :'150px'} onClick={transitionSwitchNext}>Submit</NextButton>\n                        default: \n                            return null\n                    }\n                })()}\n            </ButtonContainer>\n            }\n        </div>\n    )\n}\n\nexport default AddContent\n\n\n// const transitionSwitchNext = () => {\n//     switch(switchValue) {\n//         case 1:\n//             setTitlePhotoProps('transitionEnd')\n//             setCategoryLocationProps('transitionStart')\n//             setSwitchValue(2)\n//             break\n//         case 2:\n//             setBody('transitionStart')\n//             setCategoryLocationProps('transitionEnd')\n//             setSwitchValue(3)\n//             break\n//         case 3:\n//             getParagraphSample()\n//             setSelectFontProps('transitionStart')\n//             setBody('transitionEnd')\n//             setSwitchValue(4)\n//             break\n//         case 4:\n//             setPreviewProps('transitionStart')\n//             setSelectFontProps('transitionEnd')\n//             // setSwitchValue(4)\n//             getBodyContent()\n//             getBodyImages()\n//             setSwitchValue(5)\n//         break\n//             case 5: \n//             setPreviewProps('transitionEnd')\n//             fileUpload(props.user, imageSizeRatio)\n//             setUploadStatusProps('transitionStart')\n//             setUploadProgress(previousUploadProgress => previousUploadProgress + 1)\n//             setSwitchValue(6)\n//             break\n//         default: \n//             return null\n//     }\n// }\n\n// const transitionSwitchBack = () => {\n//     switch(switchValue) {\n//         case 2:\n//             setTitlePhotoProps('transitionBack')\n//             setCategoryLocationProps('transitionBack')\n//             setSwitchValue(1)\n//             break\n//         case 3: \n//             setCategoryLocationProps('transitionStart')\n//             setBody('transitionBack')\n//             setSwitchValue(2)\n//             break\n//         case 4:\n//             setBody('transitionStart')\n//             setSelectFontProps('transitionBack')\n//             setSwitchValue(3)\n//             break\n//         case 5: \n//             setSelectFontProps('transitionStart')\n//             setPreviewProps('transitionBack')\n//             setSwitchValue(4)\n//             break\n//         default: \n//             return null\n//     }\n// }","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport { db } from '../Firebase'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from '../Login/Login.styles'\n\nconst Signup = (props) => {\n\n    const [email, setEmail] = useState()\n    const [username, setUsername] = useState()\n    const [name, setName] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length>0 && password?.length>0) {\n            firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(user=> {\n                console.log(user.user.uid)\n                db.collection('users').doc(user.user.uid).set({\n                    id: user.user.uid,\n                    username,\n                    name,\n                    profileImage: null,\n                    bio: null,\n                }, {merge: true})\n                .then(()=> {\n                    console.log('sign up complete')\n                    props.setPageRoute('GetPhotos')\n                })\n                .catch(err=>console.log(err))\n            })\n            .catch(err=>console.log(err))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Name</Text>\n                <TextField onChange={e=> setName(e.target.value)}></TextField>\n                <Text>Email</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Username</Text>\n                <TextField onChange={e=> setUsername(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e=> setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Signup</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Signup","import React, { \n  useState, \n  useEffect,\n} from 'react'\nimport Header from './Header/Header'\nimport VerticalScroll from './VeritcalScroll/VerticalScroll'\nimport FeaturedPost from './FeaturedPost/FeaturedPost'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Profile from './Profile/Profile'\nimport Login from './Login/Login'\nimport PublicProfile from './PublicProfile/PublicProfile'\n// import TestFile from './TestFile'\nimport AddContent from './AddContent/AddContent'\nimport Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\nimport { db } from './Firebase'\n// import { firebaseApp } from './Firebase'\n\nconst App = () => {\n  const [user, setUser] = useState()\n  const [homePhotoInformation, setHomePhotoInformation] = useState(null)\n  const [photoInformation, setPhotoInformation] = useState(null)\n  const [pageRoute, setPageRoute] = useState('GetPhotos')\n  const [userData, setUserData] = useState([])\n  const [userPosts, setUserPosts] = useState([])\n\n  const getFeaturedPhotoInfo = (docID, username) => {\n    db.collection('posts').doc(docID)\n    .get()\n    .then(data=> {\n      const info = data.data()\n      info['username'] = username\n      setPhotoInformation(info)\n      setPageRoute('FeaturedPost')\n      window.scrollTo({top: 0})\n    })\n  }\n\n  const getUserProfile = (username) => {\n    setPageRoute('PublicProfile')\n    db.collection('users')\n    .where('username', '==', username)\n    .get()\n    .then(data=> {\n        let dataArray = []\n        data.forEach(item=> {\n            dataArray.push(item.data())\n        })\n        setUserData(dataArray)\n    })\n\n    db.collection('preview-posts')\n    .where('username', '==', username)\n    .get()\n    .then(data=> {\n        const postArray = []\n        data.forEach(item=> {\n          postArray.push(item.data())\n        })\n        setUserPosts(postArray)\n    })\n}\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.uid)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      {pageRoute==='GetPhotos' || pageRoute==='FeaturedPost'  ? \n      <Header setHomePhotoInformation={setHomePhotoInformation} setPageRoute={setPageRoute} user={user}/>\n      :\n      null\n      }\n\n\n      {/* <TestFile />  */}\n      \n      \n      \n\n      {(() => {\n        switch (pageRoute) {\n          case 'PublicProfile':\n            return <PublicProfile userPosts={userPosts} userData={userData} user={user} getFeaturedPhotoInfo={getFeaturedPhotoInfo}/>\n          case 'Upload':\n            return(\n              <AddContent \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setPhotoInformation={setPhotoInformation}\n              user={user} \n              setPageRoute={setPageRoute} \n              /> \n            )\n          case 'GetPhotos':\n            return (\n              <VerticalScroll scrollHeight='87vh'>\n                <GetPhotos \n                  getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n                  homePhotoInformation={homePhotoInformation} \n                  setHomePhotoInformation={setHomePhotoInformation} \n                  setPageRoute={setPageRoute} \n                  setPhotoInformation={setPhotoInformation} \n                />\n              </VerticalScroll>\n            )\n          case 'FeaturedPost':\n            return <FeaturedPost \n              getUserProfile={getUserProfile}\n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              user={user} \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPageRoute={setPageRoute} \n              setPhotoInformation={setPhotoInformation} \n              photoInformation={photoInformation} \n            />\n          case 'Profile':\n            return <Profile \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setHomePhotoInformation={setHomePhotoInformation} \n              setPhotoInformation={setPhotoInformation} \n              user={user} \n              setPageRoute={setPageRoute} \n            />;\n          case 'Login':\n            return <Login setUser={setUser} user={user} />\n          case 'Signup':\n            return <Signup setPageRoute={setPageRoute} />\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}