{"version":3,"sources":["Login/Login.styles.js","Firebase.js","Header/Header.styles.js","Header/Header.js","VeritcalScroll/VeritcalScroll.styles.js","VeritcalScroll/VerticalScroll.js","Functions.js","HorizontalGallery/HorizontalGallery.styles.js","HorizontalGallery/HorizontalGallery.js","Dropdown/Dropdown.styles.js","Dropdown/Dropdown.js","AddContent/AddContent.styles.js","FeaturedPost/FeaturedPost.styles.js","FeaturedPost/FeaturedPost.js","GetPhotosHomepage/GetPhotosHomepage.styles.js","GetPhotosHomepage/GetPhotosHomepage.js","UserPosts/UserPosts.styles.js","UserPosts/UserPosts.js","Collections/DropdownDelete.styles.js","Collections/DropdownDelete.js","Collections/Collections.styles.js","Collections/Collections.js","Login/Signout.js","Settings/Settings.styles.js","Settings/Settings.js","Profile/Profile.styles.js","Profile/Profile.js","Login/Login.js","AddContent/AddContentAnimationTest.styles.js","AddContent/TitlePhoto.js","Autocomplete/Autocomplete.js","AddContent/CategoryLocation.js","AddContent/Preview.styles.js","AddContent/Preview.js","AddContent/Body.js","AddContent/Scroll.styles.js","AddContent/Scroll.js","AddContent/Submit.js","AddContent/AddContent.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","styled","input","SubmitButton","button","Text","div","Container","Container2","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","UL","ul","LI","li","Header","props","getPhotoInfo","continent","photosArray","collection","where","get","then","photos","docs","forEach","photo","push","data","console","log","setHomePhotoInformation","className","onClick","user","setPageRoute","Scroll","scrollHeight","maxHeight","VerticalScroll","children","incrementViewCount","docID","increment","FieldValue","doc","update","views","Title","TextContainer","SeeMore","OverflowX","Image","img","DisplayPhoto","setCollectionsList","getFeaturedPhotoInfo","info","id","url","reference","ref","alt","src","HorizontalGallery","title","place","placeName","map","index","image","photoInformation","getPost","getCountries","setPhotoInformation","Collection","Warning","CreateNewButton","CreateNewInput","CreateNewSubmit","DropdownItem","updateCollectionPreview","updateTimestampBool","updateObject","preview","delete","Date","now","updateRef","orderBy","limit","imageArray","set","merge","add","remove","arrayCopy","collectionsList","length","bool","style","cursor","addRef","country","city","timestamp","Dropdown","useState","isCreateCollection","setIsCreateCollection","isCollectionExists","setIsCollectionExists","setCollectionsBoolArray","collectionsBoolArray","autoComplete","placeholder","collectionName","document","getElementById","value","includes","name","addToCollection","textarea","select","InfoContainer","BodyContainer","Author","Description","BodyImage","width","BodyImageContainer","FeaturedPost","showDropdown","setShowDropdown","countryPhotos","setCountryPhotos","cityPhotos","setCityPhotos","getCities","snapshot","cityArray","countriesArray","window","scrollTo","top","useEffect","getVH","vh","innerHeight","documentElement","setProperty","onclick","e","target","matches","collectionsArray","collections","mapArray","getCollectionsList","author","moment","format","content","item","images","i","photoBodyMap","PhotoTextContainer","PhotoTitle","PhotoLocation","PhotoContainer","SortSelect","homePhotoInformation","photoInfo","GetPhotos","startAfter","setStartAfter","startAt","onChange","options","selectedIndex","photoArray","sort","defaultValue","breakpointCols","columnClassName","Photo","PostsContainer","PostContainer","PostTitle","DisplayPosts","post","UserPosts","posts","setPosts","postsArray","DropdownDelete","collectionInfo","splice","setCollectionInfo","Ellipsis","height","NoImage","ImagesContainer","ImageTitleContainer","isDeleteMenu","setIsDeleteMenu","items","dimensionsMap","large","small","1","2","3","4","Collections","valueArray","collectionObject","signout","auth","signOut","catch","error","Settings","HeaderContainer","Profile","profilePage","setProfilePage","textDecoration","Login","email","setEmail","password","setPassword","type","signInWithEmailAndPassword","setUser","uid","ButtonContainer","NextButton","motion","visibility","CategoryLocationContainer","FileUpload","PreviewImage","NewItemButton","long","RemoveLastElement","TextInput","DescriptionInput","SelectInput","Label","label","BodyButtonContainer","TitlePhoto","isImage","setIsImage","animationMap","titlePhoto","transition","opacity","initial","variants","animate","paddingBottom","setTitlePhotoProps","file","files","viewFile","FileReader","onload","result","setMainImage","readAsDataURL","Autocomplete","autocomplete","onPlaceChanged","getPlace","google","maps","places","types","addListener","CategoryLocation","categoryLocation","htmlFor","PreviewContainer","PreviewContainer2","BodyImagePreview","imageSizeRatio","Preview","previewProps","mainImage","bodyContent","bodyImages","Body","isAddImage","setIsAddImage","isAdditionalElements","setIsAdditionalElements","checkAdditionalElement","getElementsByClassName","body","bodyProps","parent","removeChild","lastChild","createElement","appendChild","setBody","numberInputs","setAttribute","onchange","inputID","sizeMapArray","Array","fill","percentageArray","reader","this","ratioTotal","reduce","sum","val","imageSizeRatioCopy","setImageSizeRatio","getImageMap","ScrollContainer","fileUpload","imageSizeArray","photoIndexes","fileArray","photoUrlArraySorted","photoFiles","j","urlArray","indexNum","upload","metadata","contentType","storage","child","put","getDownloadURL","downloadURL","imagesEmptyArrays","unsortedImages","imageMap","splitLocation","split","trim","category","descriptionArray","String","imagesEmptyArraysCopy","imageMapCopy","urlObject","docRef","submit","y","transitionStart","transitionEnd","x","transitionBack","duration","stiffness","shiftUp","AddContent","titlePhotoProps","categoryLocationProps","setCategoryLocationProps","setPreviewProps","switchValue","setSwitchValue","setBodyContent","setBodyImages","paragraphs","paragraph","getBodyContent","imagesArray","subArray","getBodyImages","App","pageRoute","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1302edd3.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: white;\n        color: black;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    color: white;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const UL = styled.ul`\n    width: 90%;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    color: whitesmoke;\n    display: flex;\n    justify-content: space-between;\n    font-size: 25px;\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n`\n\n\n// .test {\n//     display: flex;\n//     justify-content: center;\n//   }\n  \n// ul {\n//     width: 90%;\n//     padding: 0;\n//     margin: 0;\n//     list-style-type: none;\n//     color: whitesmoke;\n//     display: flex;\n//     justify-content: space-between;\n//     font-size: 25px;\n//   }","import React from 'react'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { db } from '../Firebase'\nimport {\n    Container,\n    UL,\n    LI,\n} from './Header.styles'\n\nconst Header = (props) => {\n\n    const getPhotoInfo = (continent) => {\n        const photosArray = []\n        db.collection('posts').where('continent', '==', continent)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            console.log(photosArray)\n            props.setHomePhotoInformation(photosArray)\n        })\n    }\n\n    return(\n        <Container className='test'>\n            <UL>\n                <LI onClick={()=> getPhotoInfo('North America')}>NORTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI>\n                <LI onClick={()=> getPhotoInfo('Europe')}>EUROPE</LI>\n                <LI onClick={()=> getPhotoInfo('Oceania')}>OCEANIA</LI>\n                <LI onClick={()=> getPhotoInfo('Asia')}>ASIA</LI>\n                <LI onClick={()=> getPhotoInfo('Africa')}>AFRICA</LI>\n            </UL>\n            {props.user ? \n            <SubmitButton onClick={()=>props.setPageRoute('Upload')}>Upload</SubmitButton>\n            :\n            null\n            }\n            {props.user ? \n            <SubmitButton onClick={()=>props.setPageRoute('Profile')}>Profile</SubmitButton>\n            :\n            <SubmitButton onClick={()=>props.setPageRoute('Login')}>Log in</SubmitButton>\n            } \n        </Container>\n    )\n}\n\nexport default Header\n\n\n\n\n\n\n\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }","import styled from 'styled-components'\n\nexport const Scroll = styled.div`\n    -webkit-overflow-scrolling: touch;\n    height: ${props => props.scrollHeight};\n    max-height: ${props => props.maxHeight};\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { Scroll } from './VeritcalScroll.styles'\n\nconst VerticalScroll = (props) => {\n    return(\n        <Scroll scrollHeight={props.scrollHeight}>\n            {props.children}\n        </Scroll>\n    )\n}\n\nexport default VerticalScroll","import { db } from \"./Firebase\"\nimport firebase from 'firebase'\n\n\nexport const incrementViewCount = (docID) => {\n    const increment = firebase.firestore.FieldValue.increment(1)\n    db.collection('preview-posts').doc(docID)\n    .update({\n        views: increment\n    })\n    .then(()=>null)\n}","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px\n`\n\nexport const TextContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const SeeMore = styled.div`\n    color: white;\n    cursor: pointer;\n`\n\nexport const OverflowX = styled.div`\n    overflow-x: scroll;\n    display: flex;\n    -webkit-overflow-scrolling: touch;\n`\n\nexport const Image = styled.img`\n    height: 300px;\n    width: auto;\n    padding-right: 10px;\n    cursor: pointer;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport { \n    Title,\n    OverflowX, \n    Image,\n    SeeMore,\n    TextContainer,\n} from './HorizontalGallery.styles'\n \nconst DisplayPhoto = (props) => {\n\n    const selectPhoto = () => {\n        // props.getPost(props.info.id)\n        props.setCollectionsList([])\n        props.getFeaturedPhotoInfo(props.info.id)\n        db.collection('preview-posts').where('image', '==', props.url)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    return(\n        <div>\n            <Image onClick={selectPhoto} className='grid-item' alt='' src={props.url}></Image>\n        </div>\n    )\n}\n\nconst HorizontalGallery = (props) => {\n\n    const seeMore = () => {\n        const photosArray = []\n        db.collection('posts').where(props.place, '==', props.placeName)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            props.setHomePhotoInformation(photosArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    return(\n        <div>\n            {props.photos ? \n            <div>\n            <TextContainer>\n                <Title>{props.title}</Title>\n                <SeeMore onClick={seeMore}>See more</SeeMore>\n            </TextContainer>\n            <OverflowX>\n                {props.photos.map((info, index) => {\n                    const duplicateCheck = info.image !== props.photoInformation.image\n                    return(\n                        duplicateCheck ? \n                        <DisplayPhoto \n                            setCollectionsList={props.setCollectionsList}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            getPost={props.getPost} \n                            getCountries={props.getCountries} \n                            setPhotoInformation={props.setPhotoInformation} \n                            setHomePhotoInformation={props.setHomePhotoInformation} \n                            key={index} \n                            info={info} \n                            url={info.image}\n                        /> \n                        :\n                        null\n                    )\n                })}\n            </OverflowX>\n            </div>\n        :\n        null\n        }\n        </div>\n    )\n}\n\nexport default HorizontalGallery","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 250px;\n    background-color: black;\n    position: absolute;\n`\n\nexport const Collection = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 18px;\n    height: 30px;\n    &:hover {\n        background-color: gray;\n    }\n`\n\nexport const Warning = styled.div`\n    color: red;\n`\n\nexport const CreateNewButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 200px;\n    font-size: 15px;\n    transition: background-color 350ms;\n    cursor: pointer;\n`\n\nexport const CreateNewInput = styled.input`\n    display:inline-block;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    color: white;\n    background-color: black;\n    height: 30px;\n    font-size: 17px;\n`\n\nexport const CreateNewSubmit = styled.button`\n    height: 35px;\n`","import React, { useState } from 'react'\nimport VerticalScroll from '../VeritcalScroll/VerticalScroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport { \n    Container,\n    Collection, \n    Warning,\n    CreateNewButton,\n    CreateNewInput,\n    CreateNewSubmit,\n} from './Dropdown.styles'\n\nconst DropdownItem = (props) => {\n\n    const addToCollection = () => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        if(!props.bool) {\n            addRef.where('image', '==', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .get()\n            .then(data=> {\n                if(data.docs.length === 0) {\n                    addRef.add({\n                        id: props.photoInformation.id,\n                        image: props.photoInformation.image,\n                        country: props.photoInformation.country,\n                        city: props.photoInformation.city,\n                        title: props.photoInformation.title,\n                        collection: props.collection,\n                        timestamp: Date.now()\n                    }).then(()=> {\n                        updateCollectionPreview(true)\n                    })\n                }\n            })\n        }\n    }\n\n    const updateCollectionPreview = (updateTimestampBool) => {\n        const updateObject = {\n            preview: firebase.firestore.FieldValue.delete()\n        }\n        if (updateTimestampBool) {\n            updateObject['timestamp'] = Date.now()\n        }\n        const updateRef = db.collection('users').doc(props.user)\n        updateRef.collection('collection-names')\n        .doc(props.collection)\n        .update(updateObject)\n        .then(()=>{\n            updateRef.collection('collections')\n            // .where('image', '!=', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .orderBy('timestamp', 'desc') \n            .limit(4)\n            .get()\n            .then(data=> {\n                const imageArray = []\n                data.docs.forEach(image=> {\n                    imageArray.push(image.data().image)\n                })\n                \n                updateRef.collection('collection-names')\n                .doc(props.collection)\n                .set({\n                    preview: imageArray\n                }, {merge: true})\n                if (updateTimestampBool) {\n                    add()\n                }else{\n                    remove()\n                }\n            })\n        })\n    }\n\n    const removeFromCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('image', '==', props.photoInformation.image)\n        .where('collection', '==', props.collection)\n        .get()\n        .then(data => {\n            data.docs[0].ref.delete()\n            .then(()=> {\n                updateCollectionPreview(false)\n            })\n        })\n    }\n\n    const add = () => {\n        // addToCollection()\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = true\n        props.setCollectionsList([...arrayCopy])\n\n    }\n\n    const remove = () => {\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = false\n        props.setCollectionsList([...arrayCopy])\n    }\n\n    return(\n        <Collection className='dropdown' onClick={null}>\n            <div className='dropdown'>{props.collection}</div>\n            {props.collectionsList.length > 0 ?\n                (props.bool ?\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={removeFromCollection}>Remove</div>\n                :\n                <div style={{cursor: 'pointer'}} className='dropdown' onClick={addToCollection}>Add</div> )\n            :\n            null\n        }\n        </Collection>\n    )\n}\n\nconst Dropdown = (props) => {\n\n    const [isCreateCollection, setIsCreateCollection] = useState(false)\n    const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n    const addToCollection = (name) => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        addRef.where('image', '==', props.photoInformation.image)\n        .where('collection', '==', name)\n        .get()\n        .then(data=> {\n            if(data.docs.length === 0) {\n                addRef.add({\n                    ...props.photoInformation,\n                    collection: name,\n                    timestamp: Date.now()\n                })\n            }\n        })\n    }\n\n    const createCollection = () => {\n        const collectionName = document.getElementById('collection-name').value\n        if(!props.collectionsList.includes(collectionName) && collectionName.length>0){\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .doc(collectionName)\n            .set({\n                name: collectionName,\n                timestamp: Date.now(),\n                preview: [props.photoInformation.image]\n            },{merge: true})\n            .then(()=>{\n                addToCollection(collectionName)\n                props.setCollectionsList([[collectionName, true], ...props.collectionsList])\n                setIsCollectionExists(false)\n                document.getElementById('collection-name').value=''\n            })\n        }else{\n            setIsCollectionExists(true)\n        }\n    }\n\n    return(\n        <Container>\n            <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n            {props.collectionsList?.map((collection, index) => {\n                return(\n                    <DropdownItem \n                        setCollectionsList={props.setCollectionsList}\n                        collectionsList={props.collectionsList}\n                        setCollectionsBoolArray={props.setCollectionsBoolArray} \n                        collectionsBoolArray={props.collectionsBoolArray} \n                        index={index} \n                        className='dropdown' \n                        user={props.user} \n                        photoInformation={props.photoInformation} \n                        collection={collection[0]} \n                        key={index}\n                        bool={collection[1]}\n                    />\n                )\n            })}\n            </VerticalScroll>\n            {isCreateCollection ? \n            <div>\n                <CreateNewInput autoComplete='off' placeholder='collection name' id='collection-name' className='dropdown'></CreateNewInput>\n                <CreateNewSubmit onClick={createCollection} className='dropdown'>Enter</CreateNewSubmit>\n            </div>\n            :\n            <CreateNewButton onClick={()=>setIsCreateCollection(true)} className='dropdown'>Create new collection</CreateNewButton>\n        }\n        {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n        </Container>\n    )\n}\n\nexport default Dropdown","import styled from 'styled-components'\n\nexport const SubmitButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const NewItemButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 60vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const RemoveLastElement = styled.button`\n    color: white;\n    background-color: #ff6257;\n    border: none;\n    width: 60vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        /* background-color: #212121; */\n    }\n`\n\nexport const Container = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n`\n\nexport const FormContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const PreviewImage = styled.img`\n    height: 500px;\n    width: auto;\n    position: relative;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const InfoContainer = styled.div`\n    width: 80%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const BodyContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 40px;\n`\n\nexport const Image = styled.img`\n    height: 90vh;\n`\n\nexport const Author = styled.div`\n    color: white;\n`\n\nexport const Description = styled.div`\n    color: white;\n    width: 65vw;\n    margin: 20px 0;\n    font-size: 20px;\n    white-space: pre-wrap;\n    text-align: justify;\n    text-justify: inter-word;\n`\n\nexport const BodyImage = styled.img`\n    width: ${props=> `${props.width}vw`};\n    width: calc(var(--vh, 1vh) * ${props=> `${props.width}`});\n    height: auto;\n`\n\nexport const BodyImageContainer = styled.div`\n    display: flex;\n`","import React, { useEffect, useState } from 'react'\nimport HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\nimport Dropdown from '../Dropdown/Dropdown'\nimport { db } from '../Firebase'\n// import FeaturedPostGallery from '../FeaturedPostGallery/FeaturedPostGallery'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport moment from 'moment'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    // Container2,\n    // Container3,\n    BodyImage,\n} from './FeaturedPost.styles'\n\nconst FeaturedPost = (props) => {\n\n    const [collectionsList, setCollectionsList] = useState([])\n    const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n    const [showDropdown, setShowDropdown] = useState(null)\n    const [countryPhotos, setCountryPhotos] = useState([])\n    const [cityPhotos, setCityPhotos] = useState([])\n\n    \n    const getCities = () => {\n        const { city, continent, country } = props.photoInformation\n        const ref = db.collection('preview-posts')\n        .where('continent', '==', continent)\n        .where('country', '==', country)\n\n        ref.where('city', '==', city)\n        .get().then(snapshot=>{\n            const cityArray = []\n            snapshot.forEach(city=>{\n                cityArray.push(city.data())\n            })\n            setCityPhotos(cityArray)\n        })\n\n        ref.get().then(snapshot=>{\n            const countriesArray = []\n            snapshot.docs.forEach(doc=> {\n                countriesArray.push(doc.data())\n            }) \n            setCountryPhotos(countriesArray)\n        })\n        window.scrollTo({top: 0})\n    }\n\n    const getPost = (docID) => {\n        db.collection('posts')\n        .doc(docID)\n        .get()\n        .then(data=> {\n            getCities(data.data())\n        })\n    }\n    \n    // eslint-disable-next-line\n    useEffect(()=>getCities(props.photoInformation.id), [])\n    // eslint-disable-next-line\n    useEffect(()=>getVH(), [])\n    \n\n    const getVH = () => {\n        let vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n\n    const getCollectionsList = () => {\n        const collectionsArray = []\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .orderBy('timestamp', 'desc')\n        .get()\n        .then(collections => {\n            if(collections.docs.length>0) {\n                collections.docs.forEach((collection, index)=> {\n                    const mapArray = []\n                    mapArray.push(collection.data().name)\n                    db.collection('users')\n                    .doc(props.user)\n                    .collection('collections')\n                    .where('collection', '==', collection.data().name)\n                    .where('id', '==', props.photoInformation.id)\n                    .get()\n                    .then(data=> {\n                        if(data) {\n                            if(data.docs.length > 0){\n                                mapArray.push(true)\n                            }else{\n                                mapArray.push(false)\n                            }\n                        }\n                        collectionsArray.push(mapArray)\n                        if (index+1 === collections.docs.length) {\n                            setCollectionsList(collectionsArray)\n                            setShowDropdown(!showDropdown)\n                        }\n                    })\n                })\n            }else{\n                setShowDropdown(!showDropdown)\n            }\n        }) \n    }\n\n    const showDropdownAndGetList = () => {\n        if(collectionsList?.length === 0) {\n            getCollectionsList()\n        }else{\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.dropdown')) {\n            setShowDropdown(false)\n        }\n    }\n\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <Container>\n                <Title>{props.photoInformation?.title}</Title>\n                <Image id='test' alt='display' src={props?.photoInformation?.image}></Image>\n                <InfoContainer>\n                    {props?.user ? \n                    <div>\n                        <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n                            <div className='dropdown'>Add to collection</div>\n                        </SubmitButton>\n                        {showDropdown ? \n                        <Dropdown\n                            photoInformation={props.photoInformation}\n                            setCollectionsBoolArray={setCollectionsBoolArray}\n                            collectionsBoolArray={collectionsBoolArray} \n                            className='dropdown' \n                            user={props.user} \n                            collectionsList={collectionsList}\n                            setCollectionsList={setCollectionsList}\n                        /> \n                        : \n                        null}  \n                    </div>\n                    :\n                    null}\n                    <Author>{props.photoInformation?.author}</Author>\n                    <Author>{moment(props.photoInformation?.timestamp).format('MMMM Do YYYY')}</Author>\n                </InfoContainer>\n            </Container>\n                {props.photoInformation?.content.map((item, index) => {\n                    // console.log(props.photoInformation.images[index])\n                    return(\n                        <BodyContainer key={index}>\n                            {/* <FeaturedPostGallery images={props.photoInformation.images[index]}></FeaturedPostGallery> */}\n                            <Description>{item}</Description>\n                            <BodyImageContainer>\n                            {props.photoInformation.images[index].map((image, i)=> {\n                                console.log(props.photoInformation.photoBodyMap[index][i])\n                                return(\n                                    <BodyImage width={65 * props.photoInformation.photoBodyMap[index][i]} src={image} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            \n\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                getCountries={getCities} \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute}  \n                placeName={props?.city} \n                place={'city'} \n                title={props.photoInformation?.city} \n                photoInformation={props.photoInformation} \n                photos={cityPhotos} \n                setPhotoInformation={props.setPhotoInformation}  \n            />\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute} \n                placeName={props.photoInformation?.country} \n                place={'country'} \n                title={props.photoInformation?.country} \n                setPhotoInformation={props.setPhotoInformation} \n                photos={countryPhotos} \n                photoInformation={props.photoInformation} \n            />\n        </div>\n    )\n}\n\nexport default FeaturedPost","import styled from 'styled-components'\n\nexport const PhotoTextContainer = styled.div`\n    position: relative;\n`\n\nexport const PhotoTitle = styled.div`\n    position: absolute;\n    top: 43%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 350ms;\n    font-size: 30px;\n`\n\nexport const PhotoLocation = styled.div`\n    position: absolute;\n    top: 57%;\n    left: 50%;\n    margin-left: -5px;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 350ms;\n    font-size: 20px;\n    white-space: nowrap;\n`\n\nexport const Image = styled.img`\n    margin-bottom: 15px;\n    filter: brightness(1);\n    transition: 800ms ease;\n    transition-delay: 350ms;\n\n    width: ${props => props.width};\n\n    @media(max-width: 520px) {\n        width: 40vw;\n    }\n\n    @media(max-width: 400px) {\n        width: 90vw;\n    }\n\n    animation: fadeIn ease 3s;\n    -webkit-animation: fadeIn ease 3s;\n    -moz-animation: fadeIn ease 3s;\n    -o-animation: fadeIn ease 3s;\n    -ms-animation: fadeIn ease 3s;\n    \n    @keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-o-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n`\n\nexport const PhotoContainer = styled.div`\n\n    cursor: pointer;\n\n    &:hover ${PhotoTitle}{\n        opacity: 1;\n    }\n\n    &:hover ${PhotoLocation}{\n        opacity: 1;\n    }\n\n    &:hover ${Image} {\n        filter: brightness(.3)\n    }\n`\n\nexport const Container = styled.div`\n    margin: 0 15px;\n    margin-left: 35px;\n`\n\nexport const SortSelect = styled.select`\n    height: 40px;\n    width: 150px;\n    color: white;\n    background-color: black;\n    border: none;\n    border-radius: 5%;\n    margin-bottom: 10px;\n    font-size: 15px;\n`","import React, { useEffect, useState } from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport '../App.css'\nimport { \n    Image, \n    Container, \n    PhotoContainer,\n    PhotoTitle,\n    PhotoTextContainer,\n    PhotoLocation,\n    SortSelect,\n} from './GetPhotosHomepage.styles'\nimport Masonry from 'react-masonry-css'\n// import macy from 'macy'\n\nconst DisplayPhoto = (props) => {\n\n    useEffect(()=> { \n        // props.grid()\n        // eslint-disable-next-line\n    }, [props.homePhotoInformation])\n\n    const click = () => {\n        // props.setPageRoute('PhotoFeatured')\n        props.setPhotoInformation(props.photoInfo)\n        props.getFeaturedPhotoInfo(props.photoInfo.id)\n        db.collection('preview-posts').where('image', '==', props.photoInfo.image)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    let width = '30vw'\n \n    return(\n        <PhotoContainer onClick={click}>\n            <PhotoTextContainer>\n                <Image width={width} className='grid-item masonry' alt='' src={props.photoInfo.image}></Image>\n                <PhotoTitle>{props.photoInfo.title}</PhotoTitle>                    \n                <PhotoLocation>{`${props.photoInfo.city}, ${props.photoInfo.country}`}</PhotoLocation>\n            </PhotoTextContainer>\n        </PhotoContainer>\n    )\n}\n\nconst GetPhotos = (props) => {\n\n    const { setHomePhotoInformation, homePhotoInformation} = props\n    const [startAfter, setStartAfter] = useState(null)\n\n    const sort = () => {\n        const e = document.getElementById('sort-photos')\n        const value = e.options[e.selectedIndex].value\n        if(value !== 'Sort by:') {\n            db.collection('preview-posts').orderBy(value, 'desc')\n            .limit(10)\n            .get()\n            .then(data=> {\n                const photoArray = []\n                data.docs.forEach(item=> {\n                    photoArray.push(item.data())\n                })\n                setHomePhotoInformation([...photoArray])\n            })\n        }\n    }\n\n    const lazy = () => {\n        db.collection('preview-posts')\n        .startAt(startAfter)\n        .limit(2)\n        .get()\n        .then(snapshot => {\n            setStartAfter(snapshot.docs[snapshot.docs.length-1])\n            const photosArray = []\n            snapshot.docs.forEach(doc => {\n                photosArray.push(doc.data())\n            })\n            setHomePhotoInformation([...homePhotoInformation, ...photosArray])\n            console.log('lazy')\n        })\n    }\n\n    useEffect(()=>{\n        window.scrollTo({top: 0})\n        if(!homePhotoInformation){\n            db.collection('preview-posts')\n            .limit(4)\n            .get()\n            .then(snapshot => {\n                setStartAfter(snapshot.docs[snapshot.docs.length-1])\n                const photosArray = []\n                snapshot.docs.forEach(doc => {\n                    photosArray.push(doc.data())\n                })\n                setHomePhotoInformation(photosArray)\n                console.log('running')\n            })\n        }\n    }, [setHomePhotoInformation, homePhotoInformation])\n\n    // const grid = () => {\n    //     var elem = document.getElementById('grid');\n    //     macy ({\n    //         container: elem,\n    //         columns: 2,\n    //         trueOrder: true,\n    //         breakAt: {\n    //             1500: 3,\n    //             520: 2,\n    //             400: 1\n    //         },\n    //     })\n    // }\n    \n    return(\n        // <Container onLoad={startObserve}>\n        <Container>\n            <button onClick={lazy}>Lazy</button>\n            <SortSelect id='sort-photos' onChange={()=>sort()}>\n                <option defaultValue value='timestamp'>Newest</option>\n                <option value='views'>Most popular</option>\n            </SortSelect>\n            <div id=\"grid\" className='masonry-container'>\n            <Masonry\n            breakpointCols={3}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n\n                {props.homePhotoInformation ? props.homePhotoInformation.map((photo, index)=> {\n                    return(\n                        <DisplayPhoto \n                            index={index}\n                            length={props.homePhotoInformation.length}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPageRoute={props.setPageRoute} \n                            setPhotoInformation={props.setPhotoInformation} \n                            key={index} \n                            // grid={grid} \n                            photoInfo={photo} \n                            homePhotoInformation={props.homePhotoInformation}\n                        />\n                    )\n                })\n                :\n                null}\n            </Masonry>\n            </div>\n        </Container>\n    )\n}\n\nexport default GetPhotos","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    color: white;\n    font-size: 25px;\n`\n\nexport const Photo = styled.img`\n    object-fit: cover;\n    height: 180px;\n    width: 180px;\n    border-radius: 50%;\n`\n\nexport const PostsContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n`\n\nexport const PostContainer = styled.div`\n    margin: 20px;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const PostTitle = styled.div`\n    color: white;\n    font-size: 20px;\n    justify-self: center;\n`","import React, {\n    useEffect,\n    useState,\n} from 'react'\nimport { db } from '../Firebase'\nimport {\n    Photo,\n    PostsContainer,\n    PostContainer, \n    PostTitle,\n} from './UserPosts.styles'\n\nconst DisplayPosts = (props) => {\n\n    const selectPhoto = () => {\n        props.getFeaturedPhotoInfo(props.post.id)\n    }\n\n    return(\n        <PostContainer onClick={selectPhoto}>\n            <Photo src={props.post.image} alt='display'></Photo>\n            <PostTitle>{props.post.title}</PostTitle>\n        </PostContainer>\n    )\n}\n\nconst UserPosts = (props) => {\n\n    const [posts, setPosts] = useState([])\n    \n    useEffect(()=>  {\n        const getPosts = (user) => {\n            if (props.user) {\n                db.collection('users').doc(user)\n                .collection('posts')\n                .get()\n                .then(posts => {\n                    const postsArray = []\n                    posts.docs.forEach(post => {\n                        postsArray.push(post.data())\n                    })\n                    setPosts(postsArray)\n                })\n            }\n            console.log('running')\n        }\n        getPosts(props.user)\n    }, [props.user])\n\n    return(\n        <div>\n            <div>\n            <PostsContainer>\n                {posts?.map((post, index)=> {\n                    return(\n                        <DisplayPosts \n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPhotoInformation={props.setPhotoInformation} \n                            setPageRoute={props.setPageRoute} \n                            key={index} \n                            post={post}\n                        />\n                        )\n                    })}\n            </PostsContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPosts","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 100px;\n    height: 40px;\n    position: absolute;\n    background-color: white;\n    font-size: 20px;\n    transform: translate(-93%, 0%);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-color: black;\n    border: 1px black solid;\n\n    &:hover {\n        background-color: #525252;\n        color: white;\n    }\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container\n} from './DropdownDelete.styles'\n\nconst DropdownDelete = (props) => {\n\n    const deleteCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .where('name', '==', props.collectionName)\n        .get()\n        .then(data=> {\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            console.log('collection deleted')\n        })\n        const collectionInfo = props.collectionInfo\n        collectionInfo.splice(props.index, 1)\n        props.setCollectionInfo([...collectionInfo])\n    }\n\n    return(\n        <Container onClick={deleteCollection}>\n            Delete\n        </Container>\n    )\n}\n\nexport default DropdownDelete","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const Ellipsis = styled.div`\n    cursor: pointer;\n`\n\nexport const Image = styled.img`\n    height: ${props => props.height};\n    width: ${props => props.width};\n    object-fit: cover;\n    float: left;\n`\n\nexport const NoImage = styled.div`\n    height: 268px;\n    width: 268px;\n    object-fit: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid gray;\n`\n\nexport const ImagesContainer = styled.div`\n    height: 270px;\n    width: 270px;\n    overflow: hidden;\n    cursor: pointer;\n    \n    /* display: flex; */\n    /* flex-wrap: wrap; */\n    /* border-radius: 50%; */\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin: 0 5%;\n`\n\nexport const ImageTitleContainer = styled.div`\n    margin: 0 20px 20px 20px;\n`","import React, { useState, useEffect } from 'react'\nimport { db } from '../Firebase'\nimport DropdownDelete from './DropdownDelete'\nimport { \n    Title\n} from '../UserPosts/UserPosts.styles'\nimport { \n    Image,\n    ImagesContainer,\n    Container,\n    NoImage,\n    Header,\n    Ellipsis,\n    ImageTitleContainer,\n} from './Collections.styles'\n\nconst Collection = (props) => {\n\n    const getPhotos = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('collection', '==', props.collection[0])\n        .get()\n        .then(data=> {\n            const imageArray = []\n            data.docs.forEach(doc=> {\n                imageArray.push(doc.data())\n            })\n            props.setHomePhotoInformation(imageArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.delete-collection')) {\n            setIsDeleteMenu(false)\n        }\n    } \n\n    let items = props.collection[1].length\n    if(props.collection[1][0] !== null) {\n        items = props.collection[1].length\n    }else{\n        items = 0\n    }\n    \n    const { collection } = props\n    \n    return(\n        <ImageTitleContainer>\n            <Header>\n                <Title>{props.collection[0]}</Title>\n                <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n                    <div className='delete-collection'>&#8942;</div>\n                    {isDeleteMenu ? \n                    <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n                    :\n                    null\n                    }\n                </Ellipsis>\n            </Header>\n            <ImagesContainer onClick={getPhotos}>\n                {items > 0 ? \n                <div>\n                    <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n                </div>\n                :\n                <NoImage>Collection is empty</NoImage>\n                }\n            </ImagesContainer>\n        </ImageTitleContainer>\n    )\n}\n\nconst Collections = (props) => {\n\n    const [collectionInfo, setCollectionInfo] = useState(null)\n\n    const getCollections = () => {\n        if(props.user) {    \n            const collectionsArray = []\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .orderBy('timestamp', 'desc')\n            .get()\n            .then(collections=> {\n                collections.docs.forEach(collection => {\n                    const valueArray = []\n                    const collectionObject = collection.data()\n                    valueArray.push(collectionObject.name)\n                    if(collectionObject?.preview?.length>0) {\n                        valueArray.push(collectionObject.preview)\n                    }else{\n                        valueArray.push([null])\n                    }\n                    collectionsArray.push(valueArray)\n                })\n                setCollectionInfo(collectionsArray)\n            })\n        }\n    }\n\n    useEffect(getCollections, [props.user])\n\n    return(\n        <Container>\n            {collectionInfo?.map((collection, index)=> {\n                return(\n                    <Collection \n                        collectionInfo={collectionInfo}\n                        setCollectionInfo={setCollectionInfo}\n                        index={index}\n                        user={props.user} \n                        setHomePhotoInformation={props.setHomePhotoInformation} \n                        setPageRoute={props.setPageRoute} \n                        collection={collection} \n                        key={index}\n                    />\n                )\n            })}\n        </Container>\n    )\n}\n\nconst large = 270\nconst small = 135\n\nconst dimensionsMap = {\n    1: {\n        height: {\n            1: large,\n        },\n        width: {\n            1: large\n        }\n    },\n    2: {\n        height: {\n            1: small,\n            2: small,\n        },\n        width: {\n            1: large,\n            2: large\n        }\n    },\n    3: {\n        height: {\n            1: small,\n            2: small,\n            3: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: large\n        }\n    },\n    4: {\n        height: {\n            1: small,\n            2: small,\n            3: small,\n            4: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: small,\n            4: small,\n        }\n    },\n}\n\nexport default Collections","import firebase from 'firebase'\n\nexport const signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`","import React from 'react'\nimport { signout } from '../Login/Signout'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { Container } from './Settings.styles'\n\nconst Settings = () => {\n    return(\n        <Container>\n            <SubmitButton onClick={signout}>Signout</SubmitButton>\n        </Container>\n    )\n}\n\nexport default Settings","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    /* justify-content: center;\n    display: flex; */\n`\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 0;\n`\n\nexport const Container = styled.div`\n    margin: 0 10%;\n`","import React, { useState } from 'react'\nimport UserPosts from '../UserPosts/UserPosts'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport Collections from '../Collections/Collections'\nimport Settings from '../Settings/Settings'\nimport { LI } from '../Header/Header.styles'\nimport { \n    UL, \n    HeaderContainer,\n    Container,\n} from './Profile.styles'\n\nconst Profile = (props) => {\n    const [profilePage, setProfilePage] = useState('Collections')\n    return(\n        <Container>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <HeaderContainer>\n                <UL>\n                    <LI style={{textDecoration: profilePage==='Collections' ? 'underline' : null}} onClick={()=>setProfilePage('Collections')}>Collections</LI>\n                    <LI style={{textDecoration: profilePage==='Posts' ? 'underline' : null}} onClick={()=>setProfilePage('Posts')}>Posts</LI>\n                    <LI style={{textDecoration: profilePage==='Settings' ? 'underline' : null}} onClick={()=>setProfilePage('Settings')}>Settings</LI>\n                </UL>\n            </HeaderContainer>\n            {(()=> {\n                switch (profilePage) {\n                    case 'Posts': \n                        return(\n                            <UserPosts getFeaturedPhotoInfo={props.getFeaturedPhotoInfo} setPhotoInformation={props.setPhotoInformation} setPageRoute={props.setPageRoute} user={props.user} />\n                        )\n                    case 'Collections':\n                        return(\n                            <Collections setHomePhotoInformation={props.setHomePhotoInformation} setPageRoute={props.setPageRoute} user={props.user}/>\n                        )\n                    case 'Settings':\n                        return <Settings />\n                    default:\n                        return null\n                }\n\n            })()}\n        </Container>\n    )\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                <SubmitButton onClick={signout}>Signout</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ButtonContainer = styled.div`\n    background-color: #1f1f1f;\n    border-top: 1px solid black;\n    position: fixed;\n    padding: 15px;\n    bottom: 0px;\n    width: 100%;\n    /* position:absolute; */\n    /* bottom:30px; */\n    /* width:100%; */\n    display: flex;\n    justify-content: space-evenly;\n`\n\nexport const NextButton = styled.button`\n    /* position: absolute; */\n    /* right: 150px; */\n    justify-content: flex-end;\n    cursor: pointer;\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: ${props => props.width};\n    /* width: 120px; */\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const Container = styled(motion.div)`\n    /* height: 110vh; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    /* left: 20%;\n    top: 40%;\n    position: absolute;  */\n    /* display: flex; */\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const CategoryLocationContainer = styled(motion.div)`\n    /* height: 110vh; */\n    /* position: relative;  */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    /* top: 3%;\n    left: 20%;\n    position: absolute; */\n    /* display: flex; */\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const FileUpload = styled.input`\n    margin: 20px 0;\n`\n\nexport const PreviewContainer = styled.div`\n\n`\n\nexport const PreviewImage = styled.img`\n    /* height: 450px; */\n    height: 55vh;\n    width: auto;\n`\n\nexport const SubmitButton = styled.button`\n    cursor: pointer;\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const NewItemButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: ${props=> props.long ? '60vw ': '40vw'};\n    /* width: 40vw; */\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const RemoveLastElement = styled.button`\n    color: white;\n    background-color: #ff6257;\n    border: none;\n    width: 20vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n    margin: 20px 0;\n\n    &:hover {\n        /* background-color: #212121; */\n    }\n`\n\nexport const FormContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n    margin-bottom: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const Label = styled.label`\n    font-size: 30px;\n`\n\nexport const BodyButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n`","import React, { useState } from 'react'\nimport {\n    PreviewImage,\n    TextInput,\n    Container,\n    Label,\n    FileUpload,\n} from './AddContentAnimationTest.styles'\n\nconst TitlePhoto = (props) => {\n\n    const [isImage, setIsImage] = useState(false)\n\n    const displayImage = () => {\n        props.setTitlePhotoProps('transitionStart')\n        const file = document.getElementById('photo-input').files[0]\n        const viewFile = new FileReader()\n        viewFile.onload = (e) => {\n            const image = document.getElementById('previewImage')\n            image.src = e.target.result\n            props.setMainImage(e.target.result)\n        }\n        viewFile.readAsDataURL(file)\n        setIsImage(true)\n    }\n\n    return(\n        <div>\n           \n            <Container visibility={props.animationMap.titlePhoto[props.transition].opacity} initial='initial'  transition='transition' variants={props.animationMap.titlePhoto} animate={props.transition}>\n                <Label>Create a title:</Label>\n                <TextInput autoComplete='off' id='add-content-title'></TextInput>\n                <Label>Upload header photo:</Label>\n                <FileUpload style={{paddingBottom: '20px'}} onChange={displayImage} id='photo-input' type='file' className='photo-input'></FileUpload>\n                <br></br>\n                {isImage ? \n                <PreviewImage alt='preview' id='previewImage'></PreviewImage>\n                :\n                null\n                }\n                <br></br>\n            </Container>\n        </div>\n    )\n}\n\nexport default TitlePhoto","import React from 'react'\nimport '../App.css'\n/* global google */\n\nconst Autocomplete = (props) => {\n\n    let autocomplete\n    const initAutocomplete = () => {\n        autocomplete = new google.maps.places.Autocomplete(\n            document.getElementById('autocomplete'),\n            {\n                types: ['(cities)'],\n                // componentRestrictions: {'country': ['au']},\n                // fields: ['place_id', 'geometry', 'name']\n            }\n        )\n        autocomplete.addListener('place_changed', onPlaceChanged)\n        console.log('autocomplete')\n    }\n\n    const onPlaceChanged = () => {\n        const place = autocomplete.getPlace()\n        if (!place?.name) {\n            document.getElementById('autocomplete').placeholder = 'Enter a place'\n        } else {\n            console.log('autocomplete')\n        }\n    }\n\n    return(\n        <div>\n            <input onChange={initAutocomplete} id='autocomplete'></input>\n        </div>\n    )\n}\n\nexport default Autocomplete","import React from 'react'\nimport Autocomplete from '../Autocomplete/Autocomplete'\n\nimport {\n    SelectInput,\n    CategoryLocationContainer,\n    Label,\n} from './AddContentAnimationTest.styles'\n\nconst CategoryLocation = (props) => {\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.categoryLocation[props.categoryLocation].opacity} initial='initial' variants={props.animationMap.categoryLocation} animate={props.categoryLocation} transition='transition'>\n            <Label htmlFor='category'>Select category:</Label>\n            <SelectInput name='category' id='category'>\n                <option value='' defaultValue>Select category</option>\n                <option value='restaurant'>Restaurant</option>\n                <option value='entertainment'>Entertainment</option>\n                <option value='adventure'>Adventure</option>\n                <option value='sightseeing'>Sightseeing</option>\n                <option value='shopping'>Shopping</option>\n                <option value='museum'>Museum</option>\n            </SelectInput>\n            <Label>Select city:</Label>\n            <Autocomplete />\n        </CategoryLocationContainer>\n    )\n}\n\nexport default CategoryLocation","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const PreviewContainer = styled(motion.div)`\n    /* border: 10px solid black; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    /* position: absolute; \n    top: 2%;\n    left: 10%; */\n` \n\nexport const PreviewContainer2 = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n`\n\nexport const BodyImagePreview = styled.img`\n    /* width: 70vw; */\n    width: ${props=> `${props.width}vw`};\n    height: auto;\n    /* height: 400px; */\n    /* width: auto; */\n`","import React from 'react'\nimport moment from 'moment'\nimport {\n    PreviewContainer,\n    BodyImagePreview,\n    PreviewContainer2,\n} from './Preview.styles'\nimport { SubmitButton } from '../AddContent/AddContentAnimationTest.styles'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    // Container2,\n    // Container3,\n} from '../FeaturedPost/FeaturedPost.styles'\n\nconst BodyImage = (props) => {\n\n    const image = () => {\n        const viewFile = new FileReader()\n        const file = props.image\n        viewFile.onload = (e) => {\n            const image = document.getElementById(`body-photo-${props.index}-${props.i}`)\n            image.src = e.target.result\n            // console.log(image.clientHeight)\n            // props.setMainImage(e.target.result)\n        }\n        viewFile.readAsDataURL(file)\n    }\n\n    image()\n\n    // console.log(65 * props.imageSizeRatio)\n    // console.log(props.image)\n    return(\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={65 / (props.bodyImages[props.index] ? props.bodyImages[props.index].length : 1)} ></BodyImagePreview>\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.index}`} ></BodyImagePreview>\n        <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={70 * props.imageSizeRatio} ></BodyImagePreview>\n    )\n}\n\nconst Preview = (props) => {\n    \n    return( \n        <PreviewContainer2>\n        {/* {console.log(props.imageSizeRatio)} */}\n\n            <PreviewContainer initial='initial' visibility={props.animationMap.preview[props.previewProps].opacity} transition='transition' animate={props.previewProps} variants={props.animationMap.preview}>\n                <Container>\n                    {document.getElementById('add-content-title') ? \n                    <Title>{document.getElementById('add-content-title').value}</Title>\n                    :\n                    null\n                    }\n                    <Image id='test' alt='display' src={props?.mainImage}></Image>\n                    <InfoContainer>\n    \n                    <SubmitButton className='dropdown'>\n                        <div className='dropdown'>Add to collection</div>\n                    </SubmitButton>\n                    <Author>{'Dan Richards'}</Author>\n                    <Author>{moment(Date.now()).format('MMMM Do YYYY')}</Author>\n                    </InfoContainer>\n                </Container>\n                {props.bodyContent.map((item, index) => {\n                    // console.log(item)\n                    return(\n                        <BodyContainer key={index}>\n                            <Description>{item}</Description>\n                            <BodyImageContainer>\n                            {props?.bodyImages[index]?.map((image, i)=> {\n                                return(\n                                    <BodyImage imageSizeRatio={props.imageSizeRatio[index][i]} bodyImages={props.bodyImages} i={i} image={image} index={index} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            </PreviewContainer>\n        </PreviewContainer2>\n    )\n}\n \nexport default Preview","import React, { useState } from 'react'\n\nimport {\n    DescriptionInput,\n    NewItemButton,\n    RemoveLastElement,\n    Container,\n    Label,\n    BodyButtonContainer,\n    CategoryLocationContainer,\n} from './AddContentAnimationTest.styles'\n\nconst Body = (props) => {\n\n    const [isAddImage, setIsAddImage] = useState(false)\n    const [isAdditionalElements, setIsAdditionalElements] = useState(false)\n\n    const getImageMap = (inputID) => {\n        const images = document.getElementById(inputID)\n        let sizeMapArray = new Array(images.files.length).fill('')\n        if(images.files.length>1) {\n            for (let i = 0; i < images.files.length; i++) {\n                let percentageArray = []\n                const reader = new FileReader()\n                reader.readAsDataURL(images.files[i]);\n                reader.onload = (e) => {\n                    const image = new Image();\n                    image.src = e.target.result;\n                    image.onload = function () {\n                        const height = this.height;\n                        const width = this.width;\n                        sizeMapArray[i] = width/height\n\n                        if(sizeMapArray.length === images.files.length) {\n                            const reducer = (sum, val) => sum + val;\n                            let ratioTotal = sizeMapArray.reduce(reducer, 0);\n                            for (let image of sizeMapArray) {\n                                percentageArray.push(image/ratioTotal)\n                            }\n                            const index = inputID[inputID.length-1]\n                            const imageSizeRatioCopy = props.imageSizeRatio \n                            imageSizeRatioCopy[index] = percentageArray\n                            props.setImageSizeRatio(imageSizeRatioCopy)\n                        }\n                    };\n                }\n            }\n        }else{\n            const index = inputID[inputID.length-1]\n            const imageSizeRatioCopy = props.imageSizeRatio \n            imageSizeRatioCopy[index] = [1]\n            props.setImageSizeRatio(imageSizeRatioCopy)\n        }\n    }\n\n    const newImage = () => {\n        const numberInputs = document.getElementsByClassName('body-photos').length\n        const image = document.createElement('input')\n        image.type='file'\n        image.className='photo-input additional-item body-photos'\n        image.setAttribute('multiple', '')\n        image.setAttribute('accept', 'image/jpeg, image/png, image/jpg, image/tif')\n        image.id = `image-input-${numberInputs}`\n\n        image.onchange = ()=> getImageMap(`image-input-${numberInputs}`)\n        const parent = document.getElementById('content-form')\n        parent.appendChild(image)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        // let imageSizeRatioCopy = props.imageSizeRatio\n        // imageSizeRatioCopy.push([])\n        // props.setImageSizeRatio(imageSizeRatioCopy)\n    }\n    \n    const removeLastElement = () => {\n        const parent = document.getElementById('content-form')\n        parent.removeChild(parent.lastChild)\n        if(isAddImage) {\n            // const imageSizeRatioCopy = props.imageSizeRatio\n            // imageSizeRatioCopy.pop()\n            // props.setImageSizeRatio(imageSizeRatioCopy)\n        }\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n\n    const newParagraph = () => {\n        const input = document.createElement('textarea')\n        input.className='add-content-description-input content-paragraph additional-item'\n        const parent = document.getElementById('content-form')\n        parent.appendChild(input)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        if(document.getElementsByClassName('add-content-description-input').length > 0){\n            props.setBody('shiftUp')\n        }\n     }\n\n    const checkAdditionalElement = () => {\n        const additionalElements = document.getElementsByClassName('additional-item')\n        if(additionalElements.length > 0) {\n            setIsAdditionalElements(true)\n        }else{\n            setIsAdditionalElements(false)\n        }\n    }\n\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.body[props.bodyProps].opacity} variants={props.animationMap.body} animate={props.bodyProps} transition='transition' initial={'initial'}>\n            <Container visibility={props.animationMap.body[props.bodyProps].opacity} id='content-form'>\n                <Label>Body content</Label>\n                <DescriptionInput className='content-paragraph'></DescriptionInput>\n            </Container>\n            <BodyButtonContainer>\n                {isAdditionalElements ? \n                <RemoveLastElement type=\"button\" onClick={removeLastElement}>{`Remove last ${isAddImage ? 'image' : 'text block'}`}</RemoveLastElement>\n                :\n                null\n                }\n                {isAddImage ? \n                <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n                : \n                <NewItemButton long={!isAdditionalElements} type=\"button\" onClick={newImage}>Add image</NewItemButton>\n                }\n            </BodyButtonContainer>\n        </CategoryLocationContainer>\n    )\n}\n\nexport default Body","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ScrollContainer = styled(motion.div)`\n    /* position: absolute;\n    left: 20%; */\n    /* visibility: hidden; */\n    /* display: none; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    width: 100%;\n    -webkit-overflow-scrolling: touch;\n    height: calc(100vh - 80px);\n    /* height: ${props => props.scrollHeight}; */\n    /* max-height: ${props => props.maxHeight}; */\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { ScrollContainer } from './Scroll.styles'\n\nconst Scroll = (props) => {\n    return(\n        <ScrollContainer initial='initial' animate={props.animate} variants={props.variants} visibility={props.visibility} scrollHeight={props.scrollHeight}>\n            {props.children}\n        </ScrollContainer>\n    )\n}\n\nexport default Scroll","// import React, { useState } from 'react'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\n\nconst submit = (imagesEmptyArrays, unsortedImages, imageMap, user, imageSizeArray) => {\n    const title = document.getElementById('add-content-title').value\n    const location = document.getElementById('autocomplete').value\n    const splitLocation = location.split(',')\n    const country = splitLocation[splitLocation.length-1].trim()\n    const city = splitLocation[0]\n    const category = document.getElementById('category').value\n    const timestamp = Date.now()\n    const descriptionArray = []\n    const content = document.getElementsByClassName('content-paragraph')\n\n    for (let i=0; i<content.length; i++) {\n        descriptionArray.push(String(content[i].value))\n    }\n\n    let mainImage = ''\n\n    let imagesEmptyArraysCopy = imagesEmptyArrays\n    let imageMapCopy = imageMap\n\n    for(let i=0; i<unsortedImages.length; i++) {\n        if(i === 0) {\n            mainImage = unsortedImages[i]\n        }else{\n            if(i<imageMapCopy.length+1) {\n                imagesEmptyArraysCopy[imageMapCopy[i-1]].push(unsortedImages[i])\n            }\n        }\n    }\n\n    const urlObject = {}\n    \n    for (let i=0; i<imagesEmptyArraysCopy.length; i++) {\n        urlObject[i] = imagesEmptyArraysCopy[i]\n    }\n\n    db.collection('continents-countries').doc('map').collection(country)\n    .where(country, 'in', ['North America', 'South America', 'Asia', 'Europe', 'Oceania', 'Africa'])\n    .get()\n    .then(data => {\n        const continent = data.docs[0].data()[country]\n        db.collection('posts').add({\n            photoBodyMap: imageSizeArray,\n            content: descriptionArray,\n            images: urlObject,\n            title,\n            timestamp,\n            image: mainImage,\n            category,\n            city,\n            country,\n            continent,\n            author: 'Dan Smith',\n            views: 0,\n        }).then(docRef => {\n            db.collection('users').doc(user)\n            .collection('posts').doc(docRef.id).set({\n                reference: `posts/${docRef.id}`,\n                timestamp,\n                id: docRef.id,\n                title: title,\n                image: mainImage,\n                views: 0,\n                city,\n                country,\n                continent,\n            }, {merge: true})\n            .then(()=>{\n                db.collection('posts').doc(docRef.id).set({\n                    id: docRef.id,\n                }, {merge: true}) \n            })\n            .then(()=> {\n                db.collection('preview-posts').add({\n                    reference: `/posts/${docRef.id}`,\n                    timestamp,\n                    id: docRef.id,\n                    title,\n                    image: mainImage,\n                    views: 0,\n                    category,\n                    city,\n                    country,\n                    continent,\n                })\n                .then(()=>console.log('uploaded'))\n            })              \n        })\n    })\n}\n\nexport const fileUpload = (user, imageSizeArray) => {\n    let photoIndexes = []\n    let fileArray = []\n    const photoUrlArraySorted = []\n    // const urlArray = []\n    const photoFiles = document.getElementsByClassName('photo-input')\n    for (let i = 0; i < photoFiles.length; i++) {\n        fileArray = [...fileArray, ...photoFiles[i].files]\n        if(photoFiles[i].files.length > 1) {\n            photoUrlArraySorted.push([])\n            for(let j = 0; j<photoFiles[i].files.length; j++) {\n                photoIndexes.push(i-1)\n            }\n        }else{\n            if(i!==0) {\n                photoIndexes.push(i-1)\n                photoUrlArraySorted.push([])\n            }\n        }\n    }\n    const urlArray = []\n    let index = []\n    let indexNum = 0\n    const upload = () => {\n        console.log(indexNum)\n        console.log('working')\n        if(indexNum<fileArray.length) {\n            const file = fileArray[indexNum]\n            const metadata = {\n                contentType: file.type\n            }\n            firebase.storage().ref()\n            .child(file.name)\n            .put(file, metadata)\n            .then(snapshot => {\n                snapshot.ref.getDownloadURL()\n                .then(downloadURL => {\n                    urlArray.push(downloadURL)  \n                    indexNum++ \n                    index.push(downloadURL) \n                }).then((downloadURL)=> {\n                    if(urlArray.length===fileArray.length) {\n                        console.log(photoUrlArraySorted)\n                        submit(photoUrlArraySorted, [...urlArray, downloadURL], photoIndexes, user, imageSizeArray)\n                    }else{\n                        upload()\n                    }\n                })\n                .catch(error => console.log(error))\n            });\n        }else{\n            return\n        }\n    }\n    upload()\n}\n\n\n\n// export const fileUpload = (user, imageSizeArray) => {\n//     let photoIndexes = []\n//     let fileArray = []\n//     const photoUrlArraySorted = []\n//     // const urlArray = []\n//     const photoFiles = document.getElementsByClassName('photo-input')\n//     for (let i = 0; i < photoFiles.length; i++) {\n//         fileArray = [...fileArray, ...photoFiles[i].files]\n//         if(photoFiles[i].files.length > 1) {\n//             photoUrlArraySorted.push([])\n//             for(let j = 0; j<photoFiles[i].files.length; j++) {\n//                 photoIndexes.push(i-1)\n//             }\n//         }else{\n//             if(i!==0) {\n//                 photoIndexes.push(i-1)\n//                 photoUrlArraySorted.push([])\n//             }\n//         }\n//     }\n//     const urlArray = []\n//     let index = []\n//     let indexNum = 0\n//     for (let i = 0; i<fileArray.length; i++) {\n        \n//         const file = fileArray[i]\n//         const metadata = {\n//             contentType: file.type\n//         }\n//         firebase.storage().ref()\n//         .child(file.name)\n//         .put(file, metadata)\n//         .then(snapshot => {\n//             snapshot.ref.getDownloadURL()\n//             .then(downloadURL => {\n//                 urlArray.push(downloadURL)  \n//                 indexNum++ \n//                 index.push(downloadURL) \n//             }).then((downloadURL)=> {\n//                 if(urlArray.length===fileArray.length) {\n//                     console.log(photoUrlArraySorted)\n//                     submit(photoUrlArraySorted, [...urlArray, downloadURL], photoIndexes, user, imageSizeArray)\n//                 }\n//             })\n//             .catch(error => console.log(error))\n//         });\n//     }\n// }","import TitlePhoto from './TitlePhoto'\nimport CategoryLocation from './CategoryLocation'\nimport Preview from './Preview'\nimport Body from './Body'\nimport Scroll from './Scroll'\nimport { fileUpload } from './Submit'\nimport React, { \n    useState \n} from 'react'\nimport {\n    NextButton,\n    ButtonContainer,\n} from './AddContentAnimationTest.styles'\n\nconst animationMap = {\n    titlePhoto: {\n        initial: {\n            y: '30vh',\n            opacity: 1,\n        },\n        transitionStart: {\n            y: 10,\n            opacity: 1,\n        }, \n        transitionEnd: {\n            x: -200,\n            opacity: 0,\n        },\n        transitionBack: {\n            y: 10,\n            x: 0,\n            opacity: 1,\n        }, \n        transition: {\n            x: {\n                duration: 10\n            }\n        }\n    },\n    categoryLocation: {\n        initial: {\n            x: 100,\n            opacity: 0,\n            y: '30vh',\n        },\n        transitionStart: {\n            x: 0,\n            opacity: 1,\n            y: '30vh',\n        },\n        transitionBack: {\n            x: 400,\n            opacity: 0,\n        },\n        transitionEnd: {\n            x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    body: {\n        initial: {\n            x: 100,\n            opacity: 0,\n            y: '25vh',\n        },\n        transitionStart: {\n            x: 0,\n            opacity: 1,\n            y: '25vh',\n        },\n        shiftUp: {\n            x: 0,\n            opacity: 1,\n            y: '10vh',\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 1,\n        },\n        transitionEnd: {\n            x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    preview: {\n        initial: {\n            y: '10',\n            opacity: 0,\n        },\n        transitionStart: {\n            opacity: 1,\n            y: 0,\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 0,\n        },\n        // transitionEnd: {\n        //     x: -1000,\n        //     opacity: 0\n        // },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    }\n}\n\n\nconst AddContent = (props) => {\n    const [mainImage, setMainImage] = useState(null)\n    const [titlePhotoProps, setTitlePhotoProps] = useState('initial')\n    const [categoryLocationProps, setCategoryLocationProps] = useState('initial')\n    const [bodyProps, setBody] = useState('initial')\n    const [previewProps, setPreviewProps] = useState('initial')\n    const [switchValue, setSwitchValue] = useState(1)\n    const [bodyContent, setBodyContent] = useState([])\n    const [bodyImages, setBodyImages] = useState([])\n    const [imageSizeRatio, setImageSizeRatio] = useState({})\n\n    const getBodyContent = () => {\n        const paragraphs = document.getElementsByClassName('content-paragraph')\n        const content = []\n        for (let paragraph of paragraphs) {\n            content.push(paragraph.value)\n        }\n        setBodyContent(content)\n    }\n\n    const getBodyImages = () => {\n        const images = document.getElementsByClassName('body-photos')\n        let imagesArray = []\n        for (let i = 0; i < images.length; i++) {\n            let subArray = []\n            for(let j = 0; j<images[i].files.length; j++) {\n                subArray.push(images[i].files[j])\n            }\n            imagesArray.push(subArray)\n        }\n        // console.log(imagesArray)\n        setBodyImages(imagesArray)\n    }\n\n    const transitionSwitchNext = () => {\n        switch(switchValue) {\n            case 1:\n                setTitlePhotoProps('transitionEnd')\n                setCategoryLocationProps('transitionStart')\n                setSwitchValue(2)\n                break\n            case 2:\n                setBody('transitionStart')\n                setCategoryLocationProps('transitionEnd')\n                setSwitchValue(3)\n                break\n            case 3:\n                setPreviewProps('transitionStart')\n                setBody('transitionEnd')\n                setSwitchValue(4)\n                getBodyContent()\n                getBodyImages()\n                break\n            default: \n                return null\n        }\n    }\n\n    const transitionSwitchBack = () => {\n        switch(switchValue) {\n            case 2:\n                setCategoryLocationProps('transitionBack')\n                setTitlePhotoProps('transitionBack')\n                setSwitchValue(1)\n                break\n            case 3: \n                setBody('initial')\n                setCategoryLocationProps('transitionStart')\n                setSwitchValue(2)\n                break\n            case 4: \n                setPreviewProps('transitionBack')\n                setBody('transitionBack')\n                setSwitchValue(3)\n                break\n            default: \n                return null\n        }\n    }\n\n    return(\n        <div>\n            <NextButton width='130px' onClick={()=>props.setPageRoute('GetPhotos')}>Back</NextButton>\n            {/* <button onClick={()=>console.log(imageSizeRatio)}>Submit</button> */}\n            <Scroll animate={previewProps} variants={animationMap.preview} scrollHeight='90vh' visibility={animationMap.preview[previewProps].opacity}>\n                <Preview imageSizeRatio={imageSizeRatio} bodyImages={bodyImages} bodyContent={bodyContent} mainImage={mainImage} previewProps={previewProps} animationMap={animationMap}></Preview>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.titlePhoto[titlePhotoProps].opacity}>\n                <TitlePhoto setMainImage={setMainImage} animationMap={animationMap} setTitlePhotoProps={setTitlePhotoProps} transition={titlePhotoProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.categoryLocation[categoryLocationProps].opacity}>\n                <CategoryLocation animationMap={animationMap} categoryLocation={categoryLocationProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.body[bodyProps].opacity}>\n                <Body imageSizeRatio={imageSizeRatio} setImageSizeRatio={setImageSizeRatio} setBody={setBody} animationMap={animationMap} bodyProps={bodyProps}></Body>\n            </Scroll>\n            <ButtonContainer>\n                {switchValue === 1 ? \n                null\n                :\n                <NextButton width='150px' onClick={transitionSwitchBack}>Back</NextButton>\n                }\n                {switchValue === 4 ? \n                <NextButton width={switchValue === 1 ? '300px' :'150px'} onClick={()=>fileUpload(props.user, imageSizeRatio)}>Submit</NextButton>\n                :\n                <NextButton width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Next</NextButton>\n                }\n            </ButtonContainer>\n        </div>\n    )\n}\n\nexport default AddContent","import React, { \n  useState, \n  useEffect,\n} from 'react'\nimport Header from './Header/Header'\nimport VerticalScroll from './VeritcalScroll/VerticalScroll'\nimport FeaturedPost from './FeaturedPost/FeaturedPost'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Profile from './Profile/Profile'\nimport Login from './Login/Login'\n// import TestFile from './TestFile'\nimport AddContent from './AddContent/AddContent'\n// import Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\nimport { db } from './Firebase'\n// import { firebaseApp } from './Firebase'\n\nconst App = () => {\n  const [user, setUser] = useState()\n  const [homePhotoInformation, setHomePhotoInformation] = useState(null)\n  const [photoInformation, setPhotoInformation] = useState(null)\n  const [pageRoute, setPageRoute] = useState('GetPhotos')\n\n  const getFeaturedPhotoInfo = (docID) => {\n    db.collection('posts').doc(docID)\n    .get()\n    .then(data=> {\n      setPhotoInformation(data.data())\n      setPageRoute('FeaturedPost')\n      window.scrollTo({top: 0})\n    })\n  }\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.uid)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      {pageRoute==='GetPhotos' ? \n      <Header setHomePhotoInformation={setHomePhotoInformation} setPageRoute={setPageRoute} user={user}/>\n      :\n      null\n      }\n\n      {/* <Signup /> */}\n      {/* <TestFile /> */}\n\n      {(() => {\n        switch (pageRoute) {\n          case 'Upload':\n            return(\n              <AddContent \n              user={user} \n              setPageRoute={setPageRoute} \n              /> \n            )\n          case 'GetPhotos':\n            return (\n              <VerticalScroll scrollHeight='93vh'>\n                <GetPhotos \n                  getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n                  homePhotoInformation={homePhotoInformation} \n                  setHomePhotoInformation={setHomePhotoInformation} \n                  setPageRoute={setPageRoute} \n                  setPhotoInformation={setPhotoInformation} \n                />\n              </VerticalScroll>\n            )\n          case 'FeaturedPost':\n            return <FeaturedPost \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              user={user} \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPageRoute={setPageRoute} \n              setPhotoInformation={setPhotoInformation} \n              photoInformation={photoInformation} \n            />\n          case 'Profile':\n            return <Profile \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setHomePhotoInformation={setHomePhotoInformation} \n              setPhotoInformation={setPhotoInformation} \n              user={user} \n              setPageRoute={setPageRoute} \n            />;\n          case 'Login':\n            return <Login setUser={setUser} user={user} />\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}