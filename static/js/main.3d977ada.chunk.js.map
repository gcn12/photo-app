{"version":3,"sources":["Firebase.js","Header/Subheader.styles.js","Header/Subheader.js","Header/Header.styles.js","Header/Header.js","VeritcalScroll/VeritcalScroll.styles.js","VeritcalScroll/VerticalScroll.js","Functions.js","HorizontalGallery/HorizontalGallery.styles.js","HorizontalGallery/HorizontalGallery.js","Dropdown/Dropdown.styles.js","Dropdown/Dropdown.js","AddContent/AddContent.styles.js","FeaturedPost/FeaturedPost.styles.js","FeaturedPost/FeaturedPost.js","GetPhotosHomepage/GetPhotosHomepage.styles.js","GetPhotosHomepage/GetPhotosHomepage.js","UserPosts/UserPosts.styles.js","UserPosts/UserPosts.js","Collections/DropdownDelete.styles.js","Collections/DropdownDelete.js","Collections/Collections.styles.js","Collections/Collections.js","Login/Signout.js","Login/Login.styles.js","Settings/Settings.styles.js","Settings/Settings.js","Profile/Profile.styles.js","Profile/Profile.js","Login/Login.js","AddContent/TitlePhoto.js","Autocomplete/Autocomplete.js","AddContent/CategoryLocation.js","AddContent/Preview.styles.js","AddContent/Preview.js","AddContent/Body.js","AddContent/Scroll.styles.js","AddContent/Scroll.js","AddContent/UploadProgress.styles.js","AddContent/UploadProgress.js","AddContent/AddContent.js","SignUp/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Container","styled","div","UL","ul","LI","props","underline","Subheader","useState","selected","setSelected","sort","value","collection","orderBy","limit","get","then","data","photoArray","docs","forEach","item","push","setHomePhotoInformation","onClick","li","Border","Navigation","cursor","Header","className","continent","photosArray","where","photos","photo","console","log","getPhotoInfo","user","setPageRoute","style","marginBottom","Scroll","scrollHeight","maxHeight","VerticalScroll","children","incrementViewCount","docID","increment","FieldValue","doc","update","views","Title","TextContainer","SeeMore","OverflowX","Image","img","DisplayPhoto","setCollectionsList","getFeaturedPhotoInfo","info","id","url","reference","ref","alt","src","HorizontalGallery","title","place","placeName","map","index","image","photoInformation","getPost","getCountries","setPhotoInformation","Collection","Warning","CreateNewButton","button","CreateNewInput","input","CreateNewSubmit","CollectionName","DropdownItem","updateCollectionPreview","updateTimestampBool","updateObject","preview","delete","Date","now","updateRef","imageArray","set","merge","add","remove","arrayCopy","collectionsList","length","bool","addRef","country","city","timestamp","Dropdown","isCreateCollection","setIsCreateCollection","isCollectionExists","setIsCollectionExists","setCollectionsBoolArray","collectionsBoolArray","autoComplete","placeholder","collectionName","document","getElementById","includes","name","addToCollection","ButtonContainer","NextButton","width","motion","visibility","CategoryLocationContainer","FileUpload","PreviewImage","SubmitButton","NewItemButton","long","RemoveLastElement","TextInput","DescriptionInput","textarea","SelectInput","select","Label","label","BodyButtonContainer","InfoContainer","BodyContainer","margin","Author","Description","BodyImage","BodyImageContainer","FeaturedPost","showDropdown","setShowDropdown","countryPhotos","setCountryPhotos","cityPhotos","setCityPhotos","getCities","snapshot","cityArray","countriesArray","window","scrollTo","top","useEffect","getVH","vh","innerHeight","documentElement","setProperty","onclick","e","target","matches","collectionsArray","collections","mapArray","getCollectionsList","author","moment","format","content","images","i","photoBodyMap","PhotoTextContainer","PhotoTitle","PhotoLocation","PhotoContainer","photoInfo","GetPhotos","homePhotoInformation","startAfter","setStartAfter","lazy","startAt","marginTop","breakpointCols","default","700","columnClassName","Photo","PostsContainer","PostContainer","PostTitle","DisplayPosts","post","UserPosts","posts","setPosts","postsArray","DropdownDelete","collectionInfo","splice","setCollectionInfo","Ellipsis","height","NoImage","ImagesContainer","ImageTitleContainer","isDeleteMenu","setIsDeleteMenu","items","dimensionsMap","large","small","1","2","3","4","Collections","valueArray","collectionObject","signout","auth","signOut","catch","error","TextField","Text","Container2","Settings","HeaderContainer","Profile","profilePage","setProfilePage","borderBottom","Login","email","setEmail","password","setPassword","onChange","type","signInWithEmailAndPassword","setUser","uid","TitlePhoto","isImage","setIsImage","animationMap","titlePhoto","transition","opacity","initial","variants","animate","setTitlePhotoProps","file","files","viewFile","FileReader","onload","result","setMainImage","readAsDataURL","Autocomplete","autocomplete","onPlaceChanged","getPlace","google","maps","places","types","addListener","CategoryLocation","categoryLocation","htmlFor","defaultValue","PreviewContainer","PreviewContainer2","BodyImagePreview","imageSizeRatio","Preview","previewProps","mainImage","bodyContent","bodyImages","Body","isAddImage","setIsAddImage","isAdditionalElements","setIsAdditionalElements","checkAdditionalElement","getElementsByClassName","body","bodyProps","numberInputs","parent","removeChild","lastChild","imageSizeRatioCopy","setImageSizeRatio","createElement","appendChild","setAttribute","imageDiv","onchange","inputID","inputDiv","sizeMapArray","Array","fill","fileReader","displayImage","percentageArray","reader","this","ratioTotal","reduce","sum","val","getImageMap","setBody","scrollIntoView","ScrollContainer","UploadingTitle","ProgressContainer","UploadProgress","radius","circumference","Math","PI","strokeDashoffset","uploadProgress","uploadCount","uploadProgressColor","strokeWidth","strokeDasharray","stroke","r","cx","cy","color","y","transitionStart","transitionEnd","x","transitionBack","duration","stiffness","shiftUp","uploadStatus","AddContent","titlePhotoProps","categoryLocationProps","setCategoryLocationProps","setPreviewProps","uploadStatusProps","setUploadStatusProps","switchValue","setSwitchValue","setBodyContent","setBodyImages","setUploadCount","setUploadProgress","setUploadProgressColor","fileUpload","imageSizeArray","photoIndexes","fileArray","photoUrlArraySorted","photoFiles","j","urlArray","indexNum","upload","metadata","contentType","storage","child","put","getDownloadURL","downloadURL","previousUploadProgress","imagesEmptyArrays","unsortedImages","imageMap","splitLocation","split","trim","category","descriptionArray","String","imagesEmptyArraysCopy","imageMapCopy","urlObject","docRef","setTimeout","submit","transitionSwitchNext","paragraphs","paragraph","getBodyContent","count","imagesArray","subArray","getBodyImages","Signup","createUserWithEmailAndPassword","username","err","App","pageRoute","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d977ada.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n\nconst config = {\n    apiKey: \"AIzaSyDdoQaGgfQzmsXKHgytAROdzRjVaw_wE3M\",\n    authDomain: \"photos-634e7.firebaseapp.com\",\n    databaseURL: \"https://photos-634e7.firebaseio.com\",\n    projectId: \"photos-634e7\",\n    storageBucket: \"photos-634e7.appspot.com\",\n    messagingSenderId: \"23335646481\",\n    appId: \"1:23335646481:web:f6d39ff77620ebd80388b0\",\n    measurementId: \"G-K4NLQYSDWM\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore();\nexport { db };\nexport default firebase","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    margin: 0 30px;\n`\n\nexport const UL = styled.ul`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    \n    @media (max-width: 670px) {\n        display: none;\n        visibility: hidden;\n        /* list-style-type: none; */\n        /* flex-direction: column; */\n        /* display: block; */\n    }\n    /* justify-content: space-evenly; */\n`\n\nexport const LI = styled.ul`\n    font-size: 18px;\n    padding: 0;\n    margin: 0 25px 0 0px;\n    /* text-decoration: ${props=> props.underline ? 'underline' : null}; */\n    border-bottom: ${props=> props.underline ? '1px solid black' : null};\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n\n    &:hover {\n        color: #4a4a4a;\n    }\n`","import React, { useState } from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container,\n    UL,\n    LI,\n} from './Subheader.styles'\n\n\nconst Subheader = (props) => {\n\n    const [selected, setSelected] = useState('assorted')\n\n    const sort = (value) => {\n        setSelected(value)\n        db.collection('preview-posts').orderBy(value, 'desc')\n        .limit(10)\n        .get()\n        .then(data=> {\n            const photoArray = []\n            data.docs.forEach(item=> {\n                photoArray.push(item.data())\n            })\n            props.setHomePhotoInformation([...photoArray])\n        })\n    }\n\n    return(\n        <Container>\n            <UL>\n                <LI underline={selected === 'assorted' ? true : false}>Assorted</LI>\n                <LI onClick={()=>sort('views')} underline={selected === 'views' ? true : false}>Popular</LI>\n                <LI onClick={()=>sort('timestamp')} underline={selected === 'timestamp' ? true : false}>Newest</LI>\n                <LI>Highest rated</LI>\n            </UL>\n        </Container>\n    )\n}\n\nexport default Subheader","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 10px 30px 0;\n`\n\nexport const UL = styled.ul`\n    width: 90%;\n    padding: 0;\n    margin: 0;\n    list-style-type: none;\n    display: flex;\n    justify-content: space-between;\n    font-size: 25px;\n    &:hover{\n        color: #4a4a4a\n    }\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n`\n\nexport const Border = styled.div`\n    border-bottom: 2px solid #c2c2c2;\n`\n\nexport const Navigation = styled.div`\n    cursor: ${props=>props.cursor};\n    font-size: 22px;\n    margin: 0 5px;\n    &:hover{\n        color: #4a4a4a\n    }\n`\n\n\n// .test {\n//     display: flex;\n//     justify-content: center;\n//   }\n  \n// ul {\n//     width: 90%;\n//     padding: 0;\n//     margin: 0;\n//     list-style-type: none;\n//     color: whitesmoke;\n//     display: flex;\n//     justify-content: space-between;\n//     font-size: 25px;\n//   }","import React from 'react'\nimport { db } from '../Firebase'\nimport Subheader from './Subheader'\nimport {\n    Container,\n    UL,\n    LI,\n    Border,\n    Navigation,\n} from './Header.styles'\n\nconst Header = (props) => {\n\n    const getPhotoInfo = (continent) => {\n        const photosArray = []\n        db.collection('posts').where('continent', '==', continent)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            console.log(photosArray)\n            props.setHomePhotoInformation(photosArray)\n        })\n    }\n\n    return(\n        <Border>\n            <Container className='test'>\n                <UL>\n                    <LI onClick={()=> getPhotoInfo('North America')}>Discover</LI>\n                    {/* <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI> */}\n                </UL>\n                {props.user ? \n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Upload')}>Upload</Navigation>\n                :\n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Signup')}>Signup</Navigation>\n                }\n                <Navigation>|</Navigation>\n                {props.user ? \n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Profile')}>Profile</Navigation>\n                :\n                <Navigation cursor='pointer' onClick={()=>props.setPageRoute('Login')}>Log in</Navigation>\n                } \n            </Container>\n            <Subheader setHomePhotoInformation={props.setHomePhotoInformation}/>\n            <div style={{marginBottom: '10px'}}></div>\n        </Border>\n    )\n}\n\nexport default Header\n\n\n\n\n// import React from 'react'\n// import { SubmitButton } from '../Login/Login.styles'\n// import { db } from '../Firebase'\n// import Subheader from './Subheader'\n// import {\n//     Container,\n//     UL,\n//     LI,\n//     Border,\n// } from './Header.styles'\n\n// const Header = (props) => {\n\n//     const getPhotoInfo = (continent) => {\n//         const photosArray = []\n//         db.collection('posts').where('continent', '==', continent)\n//         .get()\n//         .then(photos => {\n//             photos.docs.forEach(photo=> {\n//                 photosArray.push(photo.data())\n//             })\n//             console.log(photosArray)\n//             props.setHomePhotoInformation(photosArray)\n//         })\n//     }\n\n//     return(\n//         <Border>\n//             <Container className='test'>\n//                 <UL>\n//                     <LI onClick={()=> getPhotoInfo('North America')}>NORTH AMERICA</LI>\n//                     <LI onClick={()=> getPhotoInfo('South America')}>SOUTH AMERICA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Europe')}>EUROPE</LI>\n//                     <LI onClick={()=> getPhotoInfo('Oceania')}>OCEANIA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Asia')}>ASIA</LI>\n//                     <LI onClick={()=> getPhotoInfo('Africa')}>AFRICA</LI>\n//                 </UL>\n//                 {props.user ? \n//                 <SubmitButton onClick={()=>props.setPageRoute('Upload')}>Upload</SubmitButton>\n//                 :\n//                 null\n//                 }\n//                 {props.user ? \n//                 <SubmitButton onClick={()=>props.setPageRoute('Profile')}>Profile</SubmitButton>\n//                 :\n//                 <SubmitButton onClick={()=>props.setPageRoute('Login')}>Log in</SubmitButton>\n//                 } \n//             </Container>\n//             <Subheader />\n//         </Border>\n//     )\n// }\n\n// export default Header\n\n\n\n\n// import { db } from '../Firebase'\n// import firebase from 'firebase'\n\n// const test = () => {\n//     db.collection('users')\n//     .get()\n//     .then((snapshot) => {\n//         snapshot.docs.forEach(doc => {console.log(doc.data())\n//         })\n//     })\n// }\n\n// const update = () => {\n//     const ref = db.collection('users')\n//     ref.doc('hello').set({\n//         lists: {\n//             'Fav': [\n//                 1, 2, 4\n//             ]\n//         },\n//         postsCreated: [\n//             43, 242, 1321\n//         ]\n//     }).then(console.log('added'))\n// }\n\n// const deleteItem = () => {\n//     const ref = db.collection('users').doc('hello')\n//     ref.update({\n//         'lists.Fav': firebase.firestore.FieldValue.delete()\n//     }).then(console.log('deleted'))\n// }","import styled from 'styled-components'\n\nexport const Scroll = styled.div`\n    -webkit-overflow-scrolling: touch;\n    height: ${props => props.scrollHeight};\n    max-height: ${props => props.maxHeight};\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { Scroll } from './VeritcalScroll.styles'\n\nconst VerticalScroll = (props) => {\n    return(\n        <Scroll scrollHeight={props.scrollHeight}>\n            {props.children}\n        </Scroll>\n    )\n}\n\nexport default VerticalScroll","import { db } from \"./Firebase\"\nimport firebase from 'firebase'\n\n\nexport const incrementViewCount = (docID) => {\n    const increment = firebase.firestore.FieldValue.increment(1)\n    db.collection('preview-posts').doc(docID)\n    .update({\n        views: increment\n    })\n    .then(()=>null)\n}","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    /* color: white; */\n    font-size: 25px\n`\n\nexport const TextContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const SeeMore = styled.div`\n    /* color: white; */\n    cursor: pointer;\n`\n\nexport const OverflowX = styled.div`\n    overflow-x: scroll;\n    display: flex;\n    -webkit-overflow-scrolling: touch;\n`\n\nexport const Image = styled.img`\n    height: 300px;\n    width: auto;\n    padding-right: 10px;\n    cursor: pointer;\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\nimport { \n    Title,\n    OverflowX, \n    Image,\n    SeeMore,\n    TextContainer,\n} from './HorizontalGallery.styles'\n \nconst DisplayPhoto = (props) => {\n\n    const selectPhoto = () => {\n        // props.getPost(props.info.id)\n        props.setCollectionsList([])\n        props.getFeaturedPhotoInfo(props.info.id)\n        db.collection('preview-posts').where('image', '==', props.url)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    return(\n        <div>\n            <Image onClick={selectPhoto} className='grid-item' alt='' src={props.url}></Image>\n        </div>\n    )\n}\n\nconst HorizontalGallery = (props) => {\n\n    const seeMore = () => {\n        const photosArray = []\n        db.collection('posts').where(props.place, '==', props.placeName)\n        .get()\n        .then(photos => {\n            photos.docs.forEach(photo=> {\n                photosArray.push(photo.data())\n            })\n            props.setHomePhotoInformation(photosArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    return(\n        <div>\n            {props.photos ? \n            <div>\n            <TextContainer>\n                <Title>{props.title}</Title>\n                <SeeMore onClick={seeMore}>See more</SeeMore>\n            </TextContainer>\n            <OverflowX>\n                {props.photos.map((info, index) => {\n                    const duplicateCheck = info.image !== props.photoInformation.image\n                    return(\n                        duplicateCheck ? \n                        <DisplayPhoto \n                            setCollectionsList={props.setCollectionsList}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            getPost={props.getPost} \n                            getCountries={props.getCountries} \n                            setPhotoInformation={props.setPhotoInformation} \n                            setHomePhotoInformation={props.setHomePhotoInformation} \n                            key={index} \n                            info={info} \n                            url={info.image}\n                        /> \n                        :\n                        null\n                    )\n                })}\n            </OverflowX>\n            </div>\n        :\n        null\n        }\n        </div>\n    )\n}\n\nexport default HorizontalGallery","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 250px;\n    background-color: #242424;\n    position: absolute;\n    border-radius: 5%;\n`\n\nexport const Collection = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 18px;\n    height: 30px;\n    &:hover {\n        background-color: gray;\n    }\n`\n\nexport const Warning = styled.div`\n    color: red;\n`\n\nexport const CreateNewButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    color:#FFFFFF;\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 200px;\n    font-size: 15px;\n    transition: background-color 350ms;\n    cursor: pointer;\n`\n\nexport const CreateNewInput = styled.input`\n    display:inline-block;\n    border: 0.1em solid #FFFFFF;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    color: white;\n    background-color: black;\n    height: 30px;\n    font-size: 17px;\n`\n\nexport const CreateNewSubmit = styled.button`\n    height: 35px;\n`\n\nexport const CollectionName = styled.div`\n    font-size: 20px;\n    color: white;\n`","import React, { useState } from 'react'\nimport VerticalScroll from '../VeritcalScroll/VerticalScroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\nimport { \n    Container,\n    Collection, \n    Warning,\n    CreateNewButton,\n    CreateNewInput,\n    CreateNewSubmit,\n    CollectionName,\n} from './Dropdown.styles'\n\nconst DropdownItem = (props) => {\n\n    const addToCollection = () => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        if(!props.bool) {\n            addRef.where('image', '==', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .get()\n            .then(data=> {\n                if(data.docs.length === 0) {\n                    addRef.add({\n                        id: props.photoInformation.id,\n                        image: props.photoInformation.image,\n                        country: props.photoInformation.country,\n                        city: props.photoInformation.city,\n                        title: props.photoInformation.title,\n                        collection: props.collection,\n                        timestamp: Date.now()\n                    }).then(()=> {\n                        updateCollectionPreview(true)\n                    })\n                }\n            })\n        }\n    }\n\n    const updateCollectionPreview = (updateTimestampBool) => {\n        const updateObject = {\n            preview: firebase.firestore.FieldValue.delete()\n        }\n        if (updateTimestampBool) {\n            updateObject['timestamp'] = Date.now()\n        }\n        const updateRef = db.collection('users').doc(props.user)\n        updateRef.collection('collection-names')\n        .doc(props.collection)\n        .update(updateObject)\n        .then(()=>{\n            updateRef.collection('collections')\n            // .where('image', '!=', props.photoInformation.image)\n            .where('collection', '==', props.collection)\n            .orderBy('timestamp', 'desc') \n            .limit(4)\n            .get()\n            .then(data=> {\n                const imageArray = []\n                data.docs.forEach(image=> {\n                    imageArray.push(image.data().image)\n                })\n                \n                updateRef.collection('collection-names')\n                .doc(props.collection)\n                .set({\n                    preview: imageArray\n                }, {merge: true})\n                if (updateTimestampBool) {\n                    add()\n                }else{\n                    remove()\n                }\n            })\n        })\n    }\n\n    const removeFromCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('image', '==', props.photoInformation.image)\n        .where('collection', '==', props.collection)\n        .get()\n        .then(data => {\n            data.docs[0].ref.delete()\n            .then(()=> {\n                updateCollectionPreview(false)\n            })\n        })\n    }\n\n    const add = () => {\n        // addToCollection()\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = true\n        props.setCollectionsList([...arrayCopy])\n\n    }\n\n    const remove = () => {\n        const arrayCopy = props.collectionsList\n        arrayCopy[props.index][1] = false\n        props.setCollectionsList([...arrayCopy])\n    }\n\n    return(\n        <Collection className='dropdown' onClick={null}>\n            <CollectionName className='dropdown'>{props.collection}</CollectionName>\n            {props.collectionsList.length > 0 ?\n                (props.bool ?\n                <CollectionName style={{cursor: 'pointer'}} className='dropdown' onClick={removeFromCollection}>Remove</CollectionName>\n                :\n                <CollectionName style={{cursor: 'pointer'}} className='dropdown' onClick={addToCollection}>Add</CollectionName> )\n            :\n            null\n        }\n        </Collection>\n    )\n}\n\nconst Dropdown = (props) => {\n\n    const [isCreateCollection, setIsCreateCollection] = useState(false)\n    const [isCollectionExists, setIsCollectionExists] = useState(false)\n\n    const addToCollection = (name) => {\n        const addRef = db.collection('users').doc(props.user).collection('collections')\n        addRef.where('image', '==', props.photoInformation.image)\n        .where('collection', '==', name)\n        .get()\n        .then(data=> {\n            if(data.docs.length === 0) {\n                addRef.add({\n                    ...props.photoInformation,\n                    collection: name,\n                    timestamp: Date.now()\n                })\n            }\n        })\n    }\n\n    const createCollection = () => {\n        const collectionName = document.getElementById('collection-name').value\n        if(!props.collectionsList.includes(collectionName) && collectionName.length>0){\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .doc(collectionName)\n            .set({\n                name: collectionName,\n                timestamp: Date.now(),\n                preview: [props.photoInformation.image]\n            },{merge: true})\n            .then(()=>{\n                addToCollection(collectionName)\n                props.setCollectionsList([[collectionName, true], ...props.collectionsList])\n                setIsCollectionExists(false)\n                document.getElementById('collection-name').value=''\n            })\n        }else{\n            setIsCollectionExists(true)\n        }\n    } \n\n    return(\n        <Container>\n            <VerticalScroll scrollHeight='120px' maxHeight='200px'>\n            {props.collectionsList?.map((collection, index) => {\n                return(\n                    <DropdownItem \n                        setCollectionsList={props.setCollectionsList}\n                        collectionsList={props.collectionsList}\n                        setCollectionsBoolArray={props.setCollectionsBoolArray} \n                        collectionsBoolArray={props.collectionsBoolArray} \n                        index={index} \n                        className='dropdown' \n                        user={props.user} \n                        photoInformation={props.photoInformation} \n                        collection={collection[0]} \n                        key={index}\n                        bool={collection[1]}\n                    />\n                )\n            })}\n            </VerticalScroll>\n            {isCreateCollection ? \n            <div>\n                <CreateNewInput autoComplete='off' placeholder='collection name' id='collection-name' className='dropdown'></CreateNewInput>\n                <CreateNewSubmit onClick={createCollection} className='dropdown'>Enter</CreateNewSubmit>\n            </div>\n            :\n            <CreateNewButton onClick={()=>setIsCreateCollection(true)} className='dropdown'>Create new collection</CreateNewButton>\n        }\n        {isCollectionExists ? <Warning>Collection already exists</Warning> : null}\n        </Container>\n    )\n}\n\nexport default Dropdown","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ButtonContainer = styled.div`\n    background-color: #dedede;\n    border-top: 1px solid #b3b3b3;\n    position: fixed;\n    padding: 15px;\n    bottom: 0px;\n    width: 100%;\n    /* position:absolute; */\n    /* bottom:30px; */\n    /* width:100%; */\n    display: flex;\n    justify-content: space-evenly;\n`\n\nexport const NextButton = styled.button`\n    /* position: absolute; */\n    /* right: 150px; */\n    justify-content: flex-end;\n    cursor: pointer;\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: ${props => props.width};\n    /* width: 120px; */\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const Container = styled(motion.div)`\n    /* height: 110vh; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    /* left: 20%;\n    top: 40%;\n    position: absolute;  */\n    /* display: flex; */\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const CategoryLocationContainer = styled(motion.div)`\n    /* height: 110vh; */\n    /* position: relative;  */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'flex' : 'none'};\n    /* top: 3%;\n    left: 20%;\n    position: absolute; */\n    /* display: flex; */\n    flex-wrap: wrap;\n    flex-direction: column; \n    align-items: center;\n    justify-content: center;\n`\n\nexport const FileUpload = styled.input`\n    margin: 10px 0 0 0;\n`\n\nexport const PreviewContainer = styled.div`\n\n`\n\nexport const PreviewImage = styled.img`\n    /* height: 450px; */\n    height: 55vh;\n    width: auto;\n`\n\nexport const SubmitButton = styled.button`\n    cursor: pointer;\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: 120px;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const NewItemButton = styled.button`\n    color: white;\n    background-color: #141414;\n    border: none;\n    width: ${props=> props.long ? '60vw ': '40vw'};\n    /* width: 40vw; */\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n\n    &:hover {\n        background-color: #212121;\n    }\n`\n\nexport const RemoveLastElement = styled.button`\n    color: white;\n    background-color: #ff6257;\n    border: none;\n    width: 20vw;\n    height: 50px;\n    cursor: pointer;\n    transition: background-color 400ms;\n    margin: 20px 0;\n\n    &:hover {\n        /* background-color: #212121; */\n    }\n`\n\nexport const FormContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nexport const TextInput = styled.input`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n    margin-bottom: 20px;\n`\n\nexport const DescriptionInput = styled.textarea`\n    width: 60vw;\n    height: 150px;\n    font-size: 20px;\n`\n\nexport const SelectInput = styled.select`\n    width: 60vw;\n    height: 40px;\n    font-size: 20px;\n`\n\nexport const Label = styled.label`\n    font-size: 30px;\n    color: #242424;\n`\n\nexport const BodyButtonContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 60px;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const InfoContainer = styled.div`\n    /* width: 80%; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const BodyContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: ${props=> props.margin}\n`\n\nexport const Title = styled.div`\n    /* color: #242424; */\n    font-size: 40px;\n`\n\nexport const Image = styled.img`\n    height: 90vh;\n`\n\nexport const Author = styled.div`\n    /* color: #242424; */\n`\n\nexport const Description = styled.div`\n    /* color: white; */\n    width: 65vw;\n    margin: 20px 0;\n    font-size: 20px;\n    white-space: pre-wrap;\n    text-align: justify;\n    text-justify: inter-word;\n`\n\nexport const BodyImage = styled.img`\n    width: ${props=> `${props.width}%`};\n    /* width: calc(var(--vh, 1vh) * ${props=> `${props.width}`}); */\n    height: auto;\n    margin: 0 .5%;\n`\n\nexport const BodyImageContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React, { useEffect, useState } from 'react'\nimport HorizontalGallery from '../HorizontalGallery/HorizontalGallery'\nimport Dropdown from '../Dropdown/Dropdown'\nimport { db } from '../Firebase'\n// import FeaturedPostGallery from '../FeaturedPostGallery/FeaturedPostGallery'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport moment from 'moment'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    // Container2,\n    // Container3,\n    BodyImage,\n} from './FeaturedPost.styles'\n\nconst FeaturedPost = (props) => {\n\n    const [collectionsList, setCollectionsList] = useState([])\n    const [collectionsBoolArray, setCollectionsBoolArray] = useState(null)\n    const [showDropdown, setShowDropdown] = useState(null)\n    const [countryPhotos, setCountryPhotos] = useState([])\n    const [cityPhotos, setCityPhotos] = useState([])\n\n    \n    const getCities = () => {\n        const { city, continent, country } = props.photoInformation\n        const ref = db.collection('preview-posts')\n        .where('continent', '==', continent)\n        .where('country', '==', country)\n\n        ref.where('city', '==', city)\n        .get().then(snapshot=>{\n            const cityArray = []\n            snapshot.forEach(city=>{\n                cityArray.push(city.data())\n            })\n            setCityPhotos(cityArray)\n        })\n\n        ref.get().then(snapshot=>{\n            const countriesArray = []\n            snapshot.docs.forEach(doc=> {\n                countriesArray.push(doc.data())\n            }) \n            setCountryPhotos(countriesArray)\n        })\n        window.scrollTo({top: 0})\n    }\n\n    const getPost = (docID) => {\n        db.collection('posts')\n        .doc(docID)\n        .get()\n        .then(data=> {\n            getCities(data.data())\n        })\n    }\n    \n    // eslint-disable-next-line\n    useEffect(()=>getCities(props.photoInformation.id), [])\n    // eslint-disable-next-line\n    useEffect(()=>getVH(), [])\n    \n\n    const getVH = () => {\n        let vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n\n    const getCollectionsList = () => {\n        const collectionsArray = []\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .orderBy('timestamp', 'desc')\n        .get()\n        .then(collections => {\n            if(collections.docs.length>0) {\n                collections.docs.forEach((collection, index)=> {\n                    const mapArray = []\n                    mapArray.push(collection.data().name)\n                    db.collection('users')\n                    .doc(props.user)\n                    .collection('collections')\n                    .where('collection', '==', collection.data().name)\n                    .where('id', '==', props.photoInformation.id)\n                    .get()\n                    .then(data=> {\n                        if(data) {\n                            if(data.docs.length > 0){\n                                mapArray.push(true)\n                            }else{\n                                mapArray.push(false)\n                            }\n                        }\n                        collectionsArray.push(mapArray)\n                        if (index+1 === collections.docs.length) {\n                            setCollectionsList(collectionsArray)\n                            setShowDropdown(!showDropdown)\n                        }\n                    })\n                })\n            }else{\n                setShowDropdown(!showDropdown)\n            }\n        }) \n    }\n\n    const showDropdownAndGetList = () => {\n        if(collectionsList?.length === 0) {\n            getCollectionsList()\n        }else{\n            setShowDropdown(!showDropdown)\n        }\n    }\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.dropdown')) {\n            setShowDropdown(false)\n        }\n    }\n\n    return(\n        <div>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <Container>\n                <Title>{props.photoInformation?.title}</Title>\n                <div>\n\n                <Image id='test' alt='display' src={props?.photoInformation?.image}></Image>\n                <InfoContainer>\n                    {props?.user ? \n                    <div>\n                        <SubmitButton className='dropdown' onClick={showDropdownAndGetList}>\n                            <div className='dropdown'>Add to collection</div>\n                        </SubmitButton>\n                        {showDropdown ? \n                        <Dropdown\n                            photoInformation={props.photoInformation}\n                            setCollectionsBoolArray={setCollectionsBoolArray}\n                            collectionsBoolArray={collectionsBoolArray} \n                            className='dropdown' \n                            user={props.user} \n                            collectionsList={collectionsList}\n                            setCollectionsList={setCollectionsList}\n                        /> \n                        : \n                        null}  \n                    </div>\n                    :\n                    null}\n                    <Author>{props.photoInformation?.author}</Author>\n                    <Author>{moment(props.photoInformation?.timestamp).format('MMMM Do YYYY')}</Author>\n                </InfoContainer>\n                </div>\n            </Container>\n                {props.photoInformation?.content.map((item, index) => {\n                    // console.log(props.photoInformation.images[index])\n                    return(\n                        <BodyContainer key={index}>\n                            {/* <FeaturedPostGallery images={props.photoInformation.images[index]}></FeaturedPostGallery> */}\n                            <Description>{item}</Description>\n                            <BodyImageContainer>\n                            {props.photoInformation.images[index].map((image, i)=> {\n                                // console.log(props.photoInformation.photoBodyMap[index][i])\n                                return(\n                                    // <BodyImage width={Math.round(65 * props.photoInformation.photoBodyMap[index][i])} src={image} key={i}></BodyImage>\n                                    <BodyImage width={65 * props.photoInformation.photoBodyMap[index][i]} src={image} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            \n\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                getCountries={getCities} \n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute}  \n                placeName={props?.city} \n                place={'city'} \n                title={props.photoInformation?.city} \n                photoInformation={props.photoInformation} \n                photos={cityPhotos} \n                setPhotoInformation={props.setPhotoInformation}  \n            />\n            <HorizontalGallery \n                setCollectionsList={setCollectionsList}\n                getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                getPost={getPost}\n                setHomePhotoInformation={props.setHomePhotoInformation} \n                setPageRoute={props.setPageRoute} \n                placeName={props.photoInformation?.country} \n                place={'country'} \n                title={props.photoInformation?.country} \n                setPhotoInformation={props.setPhotoInformation} \n                photos={countryPhotos} \n                photoInformation={props.photoInformation} \n            />\n        </div>\n    )\n}\n\nexport default FeaturedPost","import styled from 'styled-components'\n\nexport const PhotoTextContainer = styled.div`\n    position: relative;\n`\n\nexport const PhotoTitle = styled.div`\n    color: white;\n    position: absolute;\n    top: 43%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 250ms;\n    font-size: 30px;\n    white-space: nowrap;\n`\n\nexport const PhotoLocation = styled.div`\n    position: absolute;\n    top: 57%;\n    left: 50%;\n    margin-left: -5px;\n    transform: translate(-50%, -50%);\n    opacity: 0;\n    transition: opacity 500ms;\n    transition-delay: 250ms;\n    font-size: 20px;\n    white-space: nowrap;\n    color: white;\n`\n\nexport const Image = styled.img`\n    margin-bottom: 15px;\n    filter: brightness(1);\n    transition: 800ms ease;\n    transition-delay: 250ms;\n\n    width: ${props => props.width};\n\n    @media(max-width: 700px) {\n        width: 40vw;\n    }\n\n    animation: fadeIn ease 3s;\n    -webkit-animation: fadeIn ease 3s;\n    -moz-animation: fadeIn ease 3s;\n    -o-animation: fadeIn ease 3s;\n    -ms-animation: fadeIn ease 3s;\n    \n    @keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-moz-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-webkit-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-o-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n\n    @-ms-keyframes fadeIn {\n        0% {opacity:0;}\n        100% {opacity:1;}\n    }\n`\n\nexport const PhotoContainer = styled.div`\n\n    cursor: pointer;\n\n    &:hover ${PhotoTitle}{\n        opacity: 1;\n    }\n\n    &:hover ${PhotoLocation}{\n        opacity: 1;\n    }\n\n    &:hover ${Image} {\n        filter: brightness(.3)\n    }\n`\n\nexport const Container = styled.div`\n    margin: 0 15px;\n    margin-left: 35px;\n`\n\nexport const SortSelect = styled.select`\n    height: 40px;\n    width: 150px;\n    color: white;\n    background-color: black;\n    border: none;\n    border-radius: 5%;\n    margin-bottom: 10px;\n    font-size: 15px;\n`","import React, { useEffect, useState } from 'react'\nimport { db } from '../Firebase'\nimport { incrementViewCount } from '../Functions'\n// import { useInView } from 'react-intersection-observer'\nimport '../App.css'\nimport { \n    Image, \n    Container, \n    PhotoContainer,\n    PhotoTitle,\n    PhotoTextContainer,\n    PhotoLocation,\n} from './GetPhotosHomepage.styles'\nimport Masonry from 'react-masonry-css'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\n\nconst DisplayPhoto = (props) => {\n\n    const click = () => {\n        // props.setPageRoute('PhotoFeatured')\n        props.setPhotoInformation(props.photoInfo)\n        props.getFeaturedPhotoInfo(props.photoInfo.id)\n        db.collection('preview-posts').where('image', '==', props.photoInfo.image)\n        .get()\n        .then(reference=> {\n            incrementViewCount(reference.docs[0].ref.id)\n        })\n    }\n\n    // const { ref, inView, entry } = useInView({\n    //     /* Optional options */\n    //     threshold: 0,\n    //     triggerOnce: true,\n    // });\n\n    let width = '30vw'\n \n    return(\n        <PhotoContainer onClick={click}>\n            <PhotoTextContainer>\n                <Image width={width} className='grid-item masonry' alt='' src={props.photoInfo.image}></Image>\n                <PhotoTitle>{props.photoInfo.title}</PhotoTitle>                    \n                <PhotoLocation>{`${props.photoInfo.city}, ${props.photoInfo.country}`}</PhotoLocation>\n            </PhotoTextContainer>\n        </PhotoContainer>\n    )\n}\n\nconst GetPhotos = (props) => {\n\n    const { setHomePhotoInformation, homePhotoInformation} = props\n    const [startAfter, setStartAfter] = useState(null)\n\n    const lazy = () => {\n        db.collection('preview-posts')\n        .startAt(startAfter)\n        .limit(15)\n        .get()\n        .then(snapshot => {\n            setStartAfter(snapshot.docs[snapshot.docs.length-1])\n            const photosArray = []\n            snapshot.docs.forEach(doc => {\n                photosArray.push(doc.data())\n            })\n            setHomePhotoInformation([...homePhotoInformation, ...photosArray])\n            console.log('lazy')\n        })\n    }\n\n    useEffect(()=>{\n        window.scrollTo({top: 0})\n        if(!homePhotoInformation){\n            db.collection('preview-posts')\n            .limit(17)\n            .get()\n            .then(snapshot => {\n                setStartAfter(snapshot.docs[snapshot.docs.length-1])\n                const photosArray = []\n                snapshot.docs.forEach(doc => {\n                    photosArray.push(doc.data())\n                })\n                setHomePhotoInformation(photosArray)\n                console.log('running')\n            })\n        }\n    }, [setHomePhotoInformation, homePhotoInformation])\n    \n    return(\n        // <Container onLoad={startObserve}>\n        <Container>\n            <div style={{marginTop: '15px'}}></div>\n            <div id=\"grid\" className='masonry-container'>\n            <Masonry\n            breakpointCols={{default: 3, 700: 2}}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\">\n\n                {props.homePhotoInformation ? props.homePhotoInformation.map((photo, index)=> {\n                    return(\n                        <DisplayPhoto \n                            lazy={lazy}\n                            index={index}\n                            length={props.homePhotoInformation.length}\n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPageRoute={props.setPageRoute} \n                            setPhotoInformation={props.setPhotoInformation} \n                            key={index} \n                            // grid={grid} \n                            photoInfo={photo} \n                            homePhotoInformation={props.homePhotoInformation}\n                        />\n                    )\n                })\n                :\n                null}\n            </Masonry>\n            <SubmitButton onClick={lazy}>Load more</SubmitButton>\n            </div>\n        </Container>\n    )\n}\n\nexport default GetPhotos","import styled from 'styled-components'\n\nexport const Title = styled.div`\n    /* color: white; */\n    font-size: 25px;\n`\n\nexport const Photo = styled.img`\n    object-fit: cover;\n    height: 180px;\n    width: 180px;\n    border-radius: 50%;\n`\n\nexport const PostsContainer = styled.div`\n    /* display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between; */\n    /* margin: 0 5%; */\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    grid-gap: 20px;\n    align-items: stretch;\n    justify-items: center;\n`\n\nexport const PostContainer = styled.div`\n    margin: 20px;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const PostTitle = styled.div`\n    /* color: white; */\n    font-size: 20px;\n    justify-self: center;\n`","import React, {\n    useEffect,\n    useState,\n} from 'react'\nimport { db } from '../Firebase'\nimport {\n    Photo,\n    PostsContainer,\n    PostContainer, \n    PostTitle,\n} from './UserPosts.styles'\n \nconst DisplayPosts = (props) => {\n\n    const selectPhoto = () => {\n        props.getFeaturedPhotoInfo(props.post.id)\n    }\n\n    return(\n        <PostContainer onClick={selectPhoto}>\n            <Photo src={props.post.image} alt='display'></Photo>\n            <PostTitle>{props.post.title}</PostTitle>\n        </PostContainer>\n    )\n}\n\nconst UserPosts = (props) => {\n\n    const [posts, setPosts] = useState([])\n    \n    useEffect(()=>  {\n        const getPosts = (user) => {\n            if (props.user) {\n                db.collection('users').doc(user)\n                .collection('posts')\n                .get()\n                .then(posts => {\n                    const postsArray = []\n                    posts.docs.forEach(post => {\n                        postsArray.push(post.data())\n                    })\n                    setPosts(postsArray)\n                })\n            }\n            console.log('running')\n        }\n        getPosts(props.user)\n    }, [props.user])\n\n    return(\n        <div>\n            <div>\n            <PostsContainer>\n                {posts?.map((post, index)=> {\n                    return(\n                        <DisplayPosts \n                            getFeaturedPhotoInfo={props.getFeaturedPhotoInfo}\n                            setPhotoInformation={props.setPhotoInformation} \n                            setPageRoute={props.setPageRoute} \n                            key={index} \n                            post={post}\n                        />\n                        )\n                    })}\n            </PostsContainer>\n            </div>\n        </div>\n    )\n}\n\nexport default UserPosts","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 100px;\n    height: 40px;\n    position: absolute;\n    background-color: white;\n    font-size: 20px;\n    transform: translate(-93%, 0%);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-color: black;\n    border: 1px black solid;\n\n    &:hover {\n        background-color: #525252;\n        color: white;\n    }\n`","import React from 'react'\nimport { db } from '../Firebase'\nimport {\n    Container\n} from './DropdownDelete.styles'\n\nconst DropdownDelete = (props) => {\n\n    const deleteCollection = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collection-names')\n        .where('name', '==', props.collectionName)\n        .get()\n        .then(data=> {\n            data.docs.forEach(item => {\n                item.ref.delete()\n            })\n            console.log('collection deleted')\n        })\n        const collectionInfo = props.collectionInfo\n        collectionInfo.splice(props.index, 1)\n        props.setCollectionInfo([...collectionInfo])\n    }\n\n    return(\n        <Container onClick={deleteCollection}>\n            Delete\n        </Container>\n    )\n}\n\nexport default DropdownDelete","import styled from 'styled-components'\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n`\n\nexport const Ellipsis = styled.div`\n    cursor: pointer;\n`\n\nexport const Image = styled.img`\n    height: ${props => props.height};\n    width: ${props => props.width};\n    object-fit: cover;\n    float: left;\n`\n\nexport const NoImage = styled.div`\n    height: 268px;\n    width: 268px;\n    object-fit: cover;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid gray;\n`\n \nexport const ImagesContainer = styled.div`\n    height: 270px;\n    width: 270px;\n    overflow: hidden;\n    cursor: pointer;\n`\n\nexport const Container = styled.div`\n    /* display: flex; */\n    /* flex-wrap: wrap; */\n    /* justify-content: space-between; */\n    margin: 0 2%;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n    grid-gap: 20px;\n    align-items: stretch;\n    justify-items: center;\n`\n\nexport const ImageTitleContainer = styled.div`\n    /* margin: 0 20px 20px 20px; */\n    /* display: inline-block; */\n    /* max-width: 100%; */\n`\n\n\n\n\n\n\n\n// import styled from 'styled-components'\n\n// export const Header = styled.div`\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: flex-end;\n// `\n\n// export const Ellipsis = styled.div`\n//     cursor: pointer;\n// `\n\n// export const Image = styled.img`\n//     height: ${props => props.height};\n//     width: ${props => props.width};\n//     object-fit: cover;\n//     float: left;\n// `\n\n// export const NoImage = styled.div`\n//     height: 268px;\n//     width: 268px;\n//     object-fit: cover;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     border: 1px solid gray;\n// `\n \n// export const ImagesContainer = styled.div`\n//     height: 270px;\n//     width: 270px;\n//     overflow: hidden;\n//     cursor: pointer;\n    \n//     /* display: flex; */\n//     /* flex-wrap: wrap; */\n//     /* border-radius: 50%; */\n// `\n\n// export const Container = styled.div`\n//     display: flex;\n//     flex-wrap: wrap;\n//     justify-content: space-between;\n//     margin: 0 5%;\n// `\n\n// export const ImageTitleContainer = styled.div`\n//     margin: 0 20px 20px 20px;\n// `","import React, { useState, useEffect } from 'react'\nimport { db } from '../Firebase'\nimport DropdownDelete from './DropdownDelete'\nimport { \n    Title\n} from '../UserPosts/UserPosts.styles'\nimport { \n    Image,\n    ImagesContainer,\n    Container,\n    NoImage,\n    Header,\n    Ellipsis,\n    ImageTitleContainer,\n} from './Collections.styles'\n\nconst Collection = (props) => {\n\n    const getPhotos = () => {\n        db.collection('users')\n        .doc(props.user)\n        .collection('collections')\n        .where('collection', '==', props.collection[0])\n        .get()\n        .then(data=> {\n            const imageArray = []\n            data.docs.forEach(doc=> {\n                imageArray.push(doc.data())\n            })\n            props.setHomePhotoInformation(imageArray)\n            props.setPageRoute('GetPhotos')\n        })\n    }\n\n    const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n    window.onclick = (e) => {\n        if (!e.target.matches('.delete-collection')) {\n            setIsDeleteMenu(false)\n        }\n    } \n\n    let items = props.collection[1].length\n    if(props.collection[1][0] !== null) {\n        items = props.collection[1].length\n    }else{\n        items = 0\n    }\n    \n    const { collection } = props\n    \n    return(\n        <ImageTitleContainer>\n            <Header>\n                <Title>{props.collection[0]}</Title>\n                <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n                    <div className='delete-collection'>&#8942;</div>\n                    {isDeleteMenu ? \n                    <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n                    :\n                    null\n                    }\n                </Ellipsis>\n            </Header>\n            <ImagesContainer onClick={getPhotos}>\n                {items > 0 ? \n                <div>\n                    <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n                    <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n                </div>\n                :\n                <NoImage>Collection is empty</NoImage>\n                }\n            </ImagesContainer>\n        </ImageTitleContainer>\n    )\n}\n\nconst Collections = (props) => {\n\n    const [collectionInfo, setCollectionInfo] = useState(null)\n\n    const getCollections = () => {\n        if(props.user) {    \n            const collectionsArray = []\n            db.collection('users')\n            .doc(props.user)\n            .collection('collection-names')\n            .orderBy('timestamp', 'desc')\n            .get()\n            .then(collections=> {\n                collections.docs.forEach(collection => {\n                    const valueArray = []\n                    const collectionObject = collection.data()\n                    valueArray.push(collectionObject.name)\n                    if(collectionObject?.preview?.length>0) {\n                        valueArray.push(collectionObject.preview)\n                    }else{\n                        valueArray.push([null])\n                    }\n                    collectionsArray.push(valueArray)\n                })\n                setCollectionInfo(collectionsArray)\n            })\n        }\n    }\n\n    useEffect(getCollections, [props.user])\n \n    return(\n        <Container>\n            {collectionInfo?.map((collection, index)=> {\n                return(\n                    <Collection \n                        collectionInfo={collectionInfo}\n                        setCollectionInfo={setCollectionInfo}\n                        index={index}\n                        user={props.user} \n                        setHomePhotoInformation={props.setHomePhotoInformation} \n                        setPageRoute={props.setPageRoute} \n                        collection={collection} \n                        key={index}\n                    />\n                )\n            })}\n        </Container>\n    )\n}\n\nconst large = 270\nconst small = 135\n\nconst dimensionsMap = {\n    1: {\n        height: {\n            1: large,\n        },\n        width: {\n            1: large\n        }\n    },\n    2: {\n        height: {\n            1: small,\n            2: small,\n        },\n        width: {\n            1: large,\n            2: large\n        }\n    },\n    3: {\n        height: {\n            1: small,\n            2: small,\n            3: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: large\n        }\n    },\n    4: {\n        height: {\n            1: small,\n            2: small,\n            3: small,\n            4: small\n        },\n        width: {\n            1: small,\n            2: small,\n            3: small,\n            4: small,\n        }\n    },\n}\n\nexport default Collections\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react'\n// import { db } from '../Firebase'\n// import DropdownDelete from './DropdownDelete'\n// import { \n//     Title\n// } from '../UserPosts/UserPosts.styles'\n// import { \n//     Image,\n//     ImagesContainer,\n//     Container,\n//     NoImage,\n//     Header,\n//     Ellipsis,\n//     ImageTitleContainer,\n// } from './Collections.styles'\n\n// const Collection = (props) => {\n\n//     const getPhotos = () => {\n//         db.collection('users')\n//         .doc(props.user)\n//         .collection('collections')\n//         .where('collection', '==', props.collection[0])\n//         .get()\n//         .then(data=> {\n//             const imageArray = []\n//             data.docs.forEach(doc=> {\n//                 imageArray.push(doc.data())\n//             })\n//             props.setHomePhotoInformation(imageArray)\n//             props.setPageRoute('GetPhotos')\n//         })\n//     }\n\n//     const [isDeleteMenu, setIsDeleteMenu] = useState(false)\n\n//     window.onclick = (e) => {\n//         if (!e.target.matches('.delete-collection')) {\n//             setIsDeleteMenu(false)\n//         }\n//     } \n\n//     let items = props.collection[1].length\n//     if(props.collection[1][0] !== null) {\n//         items = props.collection[1].length\n//     }else{\n//         items = 0\n//     }\n    \n//     const { collection } = props\n    \n//     return(\n//         <ImageTitleContainer>\n//             <Header>\n//                 <Title>{props.collection[0]}</Title>\n//                 <Ellipsis onClick={()=>setIsDeleteMenu(!isDeleteMenu)}>\n//                     <div className='delete-collection'>&#8942;</div>\n//                     {isDeleteMenu ? \n//                     <DropdownDelete collectionInfo={props.collectionInfo} index={props.index} setCollectionInfo={props.setCollectionInfo} user={props.user} collectionName={props.collection[0]}></DropdownDelete>\n//                     :\n//                     null\n//                     }\n//                 </Ellipsis>\n//             </Header>\n//             <ImagesContainer onClick={getPhotos}>\n//                 {items > 0 ? \n//                 <div>\n//                     <Image height={dimensionsMap[items].height[1]} width={dimensionsMap[items].width[1]} src={collection[1][0]} key='1' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[2]} width={dimensionsMap[items].width[2]} src={collection[1][1]} key='2' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[3]} width={dimensionsMap[items].width[3]} src={collection[1][2]} key='3' alt='placeholder' />\n//                     <Image height={dimensionsMap[items].height[4]} width={dimensionsMap[items].width[4]} src={collection[1][3]} key='4' alt='placeholder' />\n//                 </div>\n//                 :\n//                 <NoImage>Collection is empty</NoImage>\n//                 }\n//             </ImagesContainer>\n//         </ImageTitleContainer>\n//     )\n// }\n\n// const Collections = (props) => {\n\n//     const [collectionInfo, setCollectionInfo] = useState(null)\n\n//     const getCollections = () => {\n//         if(props.user) {    \n//             const collectionsArray = []\n//             db.collection('users')\n//             .doc(props.user)\n//             .collection('collection-names')\n//             .orderBy('timestamp', 'desc')\n//             .get()\n//             .then(collections=> {\n//                 collections.docs.forEach(collection => {\n//                     const valueArray = []\n//                     const collectionObject = collection.data()\n//                     valueArray.push(collectionObject.name)\n//                     if(collectionObject?.preview?.length>0) {\n//                         valueArray.push(collectionObject.preview)\n//                     }else{\n//                         valueArray.push([null])\n//                     }\n//                     collectionsArray.push(valueArray)\n//                 })\n//                 setCollectionInfo(collectionsArray)\n//             })\n//         }\n//     }\n\n//     useEffect(getCollections, [props.user])\n \n//     return(\n//         <Container>\n//             {collectionInfo?.map((collection, index)=> {\n//                 return(\n//                     <Collection \n//                         collectionInfo={collectionInfo}\n//                         setCollectionInfo={setCollectionInfo}\n//                         index={index}\n//                         user={props.user} \n//                         setHomePhotoInformation={props.setHomePhotoInformation} \n//                         setPageRoute={props.setPageRoute} \n//                         collection={collection} \n//                         key={index}\n//                     />\n//                 )\n//             })}\n//         </Container>\n//     )\n// }\n\n// const large = 270\n// const small = 135\n\n// const dimensionsMap = {\n//     1: {\n//         height: {\n//             1: large,\n//         },\n//         width: {\n//             1: large\n//         }\n//     },\n//     2: {\n//         height: {\n//             1: small,\n//             2: small,\n//         },\n//         width: {\n//             1: large,\n//             2: large\n//         }\n//     },\n//     3: {\n//         height: {\n//             1: small,\n//             2: small,\n//             3: small\n//         },\n//         width: {\n//             1: small,\n//             2: small,\n//             3: large\n//         }\n//     },\n//     4: {\n//         height: {\n//             1: small,\n//             2: small,\n//             3: small,\n//             4: small\n//         },\n//         width: {\n//             1: small,\n//             2: small,\n//             3: small,\n//             4: small,\n//         }\n//     },\n// }\n\n// export default Collections","import firebase from 'firebase'\n\nexport const signout = () => {\n    firebase.auth().signOut()\n    .catch(error=>console.log(error))\n}\n\nexport default signout","import styled from 'styled-components'\n\nexport const TextField = styled.input`\n    width: 400px;\n    height: 30px;\n    font-size: 20px;\n    transition: height 500ms;\n\n    &:focus {\n        height: 40px;\n    }\n`\n\nexport const SubmitButton = styled.button`\n    display:inline-block;\n    padding: 0.35em 1.2em;\n    border: 0.1em solid #242424;\n    margin: 0 0.3em 0.3em 0;\n    border-radius:0.12em;\n    box-sizing: border-box;\n    text-decoration:none;\n    font-weight:300;\n    /* color:#FFFFFF; */\n    text-align:center;\n    transition: all 0.2s;\n    background-color: transparent;\n    width: 120px;\n    font-size: 20px;\n    transition: color 300ms;\n    transition: background-color 350ms;\n\n    &:hover{\n        background-color: #242424;\n        color: #FFFFFF;\n        cursor: pointer;\n    }\n`\n\nexport const Text = styled.div`\n    color: white;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const Container2 = styled.div`\n    display: flex;\n    justify-content: center;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-content: center;\n`","import React from 'react'\nimport { signout } from '../Login/Signout'\nimport { SubmitButton } from '../Login/Login.styles'\nimport { Container } from './Settings.styles'\n\nconst Settings = () => {\n    return(\n        <Container>\n            <SubmitButton onClick={signout}>Signout</SubmitButton>\n        </Container>\n    )\n}\n\nexport default Settings","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    /* justify-content: center;\n    display: flex; */\n`\n\nexport const UL = styled.ul`\n    list-style-type: none;\n    display: flex;\n    justify-content: space-evenly;\n    padding: 0;\n    margin: 0;\n`\n\nexport const Container = styled.div`\n    margin: 0 10%;\n`\n\nexport const LI = styled.li`\n    cursor: pointer;\n    -webkit-touch-callout: none; \n    -webkit-user-select: none; \n    -khtml-user-select: none; \n    -moz-user-select: none; \n    -ms-user-select: none; \n    user-select: none; \n\n    &:hover {\n        border-bottom: 1px solid #242424;\n    }\n`","import React, { useState } from 'react'\nimport UserPosts from '../UserPosts/UserPosts'\nimport { SubmitButton } from '../AddContent/AddContent.styles'\nimport Collections from '../Collections/Collections'\nimport Settings from '../Settings/Settings'\n// import { LI } from '../Header/Header.styles'\nimport { \n    UL, \n    HeaderContainer,\n    Container,\n    LI,\n} from './Profile.styles'\n\nconst Profile = (props) => {\n    const [profilePage, setProfilePage] = useState('Collections')\n    return(\n        <Container>\n            <SubmitButton onClick={()=>props.setPageRoute('GetPhotos')}>Back</SubmitButton>\n            <HeaderContainer>\n                <UL>\n                    <LI style={{borderBottom: profilePage==='Collections' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Collections')}>Collections</LI>\n                    <LI style={{borderBottom: profilePage==='Posts' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Posts')}>Posts</LI>\n                    <LI style={{borderBottom: profilePage==='Settings' ? '1px solid #242424' : null}} onClick={()=>setProfilePage('Settings')}>Settings</LI>\n                </UL>\n            </HeaderContainer>\n            {(()=> {\n                switch (profilePage) {\n                    case 'Posts': \n                        return(\n                            <UserPosts getFeaturedPhotoInfo={props.getFeaturedPhotoInfo} setPhotoInformation={props.setPhotoInformation} setPageRoute={props.setPageRoute} user={props.user} />\n                        )\n                    case 'Collections':\n                        return(\n                            <Collections setHomePhotoInformation={props.setHomePhotoInformation} setPageRoute={props.setPageRoute} user={props.user}/>\n                        )\n                    case 'Settings':\n                        return <Settings />\n                    default:\n                        return null\n                }\n\n            })()}\n        </Container>\n    )\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport signout from './Signout'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from './Login.styles'\n\nconst Login = (props) => {\n\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length > 0 && password?.length > 0){\n            firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(user => {\n                props.setUser(user.user.uid)\n            })\n            .catch(error=>console.log(error))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email {props.user}</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e => setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Login</SubmitButton>\n                <br></br>\n                <SubmitButton onClick={signout}>Signout</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Login","import React, { useState } from 'react'\nimport {\n    PreviewImage,\n    TextInput,\n    Container,\n    Label,\n    FileUpload,\n} from './AddContent.styles'\n\nconst TitlePhoto = (props) => {\n\n    const [isImage, setIsImage] = useState(false)\n\n    const displayImage = () => {\n        props.setTitlePhotoProps('transitionStart')\n        const file = document.getElementById('photo-input').files[0]\n        const viewFile = new FileReader()\n        viewFile.onload = (e) => {\n            const image = document.getElementById('previewImage')\n            image.src = e.target.result\n            props.setMainImage(e.target.result)\n        }\n        viewFile.readAsDataURL(file)\n        setIsImage(true)\n    }\n\n    return(\n        <div>\n           \n            <Container visibility={props.animationMap.titlePhoto[props.transition].opacity} initial='initial'  transition='transition' variants={props.animationMap.titlePhoto} animate={props.transition}>\n                <Label>Create a title:</Label>\n                <TextInput autoComplete='off' id='add-content-title'></TextInput>\n                <Label>Upload header photo:</Label>\n                <FileUpload onChange={displayImage} id='photo-input' type='file' className='photo-input'></FileUpload>\n                <br></br>\n                {isImage ? \n                <PreviewImage alt='preview' id='previewImage'></PreviewImage>\n                :\n                null\n                }\n                <br></br>\n            </Container>\n        </div>\n    )\n}\n\nexport default TitlePhoto","import React from 'react'\nimport '../App.css'\n/* global google */\n\nconst Autocomplete = (props) => {\n\n    let autocomplete\n    const initAutocomplete = () => {\n        autocomplete = new google.maps.places.Autocomplete(\n            document.getElementById('autocomplete'),\n            {\n                types: ['(cities)'],\n                // componentRestrictions: {'country': ['au']},\n                // fields: ['place_id', 'geometry', 'name']\n            }\n        )\n        autocomplete.addListener('place_changed', onPlaceChanged)\n        console.log('autocomplete')\n    }\n\n    const onPlaceChanged = () => {\n        const place = autocomplete.getPlace()\n        if (!place?.name) {\n            document.getElementById('autocomplete').placeholder = 'Enter a place'\n        } else {\n            console.log('autocomplete')\n        }\n    }\n\n    return(\n        <div>\n            <input autoComplete='off' onChange={initAutocomplete} id='autocomplete'></input>\n        </div>\n    )\n}\n\nexport default Autocomplete","import React from 'react'\nimport Autocomplete from '../Autocomplete/Autocomplete'\n\nimport {\n    SelectInput,\n    CategoryLocationContainer,\n    Label,\n} from './AddContent.styles'\n\nconst CategoryLocation = (props) => {\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.categoryLocation[props.categoryLocation].opacity} initial='initial' variants={props.animationMap.categoryLocation} animate={props.categoryLocation} transition='transition'>\n            <Label htmlFor='category'>Select category:</Label>\n            <SelectInput name='category' id='category'>\n                <option value='' defaultValue>Select category</option>\n                <option value='restaurant'>Restaurant</option>\n                <option value='entertainment'>Entertainment</option>\n                <option value='adventure'>Adventure</option>\n                <option value='sightseeing'>Sightseeing</option>\n                <option value='shopping'>Shopping</option>\n                <option value='museum'>Museum</option>\n            </SelectInput>\n            <Label>Select city:</Label>\n            <Autocomplete />\n        </CategoryLocationContainer>\n    )\n}\n\nexport default CategoryLocation","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const PreviewContainer = styled(motion.div)`\n    /* border: 10px solid black; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    /* position: absolute; \n    top: 2%;\n    left: 10%; */\n` \n\nexport const PreviewContainer2 = styled.div`\n    display: flex;\n    justify-content: center;\n    margin-bottom: 40px;\n`\n\nexport const BodyImagePreview = styled.img`\n    /* width: 70vw; */\n    width: ${props=> `${props.width}vw`};\n    height: auto;\n    margin: 0 1%;\n    /* height: 400px; */\n    /* width: auto; */\n`","import React from 'react'\nimport moment from 'moment'\nimport {\n    PreviewContainer,\n    BodyImagePreview,\n    PreviewContainer2,\n} from './Preview.styles'\nimport { SubmitButton } from './AddContent.styles'\nimport {\n    Title,\n    Description,\n    Image,\n    Author,\n    Container,\n    InfoContainer,\n    BodyContainer,\n    BodyImageContainer,\n    // Container2,\n    // Container3,\n} from '../FeaturedPost/FeaturedPost.styles'\n\nconst BodyImage = (props) => {\n\n    const image = () => {\n        const viewFile = new FileReader()\n        const file = props.image\n        viewFile.onload = (e) => {\n            const image = document.getElementById(`body-photo-${props.index}-${props.i}`)\n            image.src = e.target.result\n        }\n        viewFile.readAsDataURL(file)\n    }\n\n    image()\n\n    // console.log(65 * props.imageSizeRatio)\n    // console.log(props.image)\n    return(\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={65 / (props.bodyImages[props.index] ? props.bodyImages[props.index].length : 1)} ></BodyImagePreview>\n        // <BodyImagePreview id={`body-photo-${props.index}-${props.index}`} ></BodyImagePreview>\n        <BodyImagePreview id={`body-photo-${props.index}-${props.i}`} width={65 * props.imageSizeRatio} ></BodyImagePreview>\n    )\n}\n\nconst Preview = (props) => {\n    \n    return( \n        <PreviewContainer2>\n        {/* {console.log(props.imageSizeRatio)} */}\n\n            <PreviewContainer initial='initial' visibility={props.animationMap.preview[props.previewProps].opacity} transition='transition' animate={props.previewProps} variants={props.animationMap.preview}>\n                <Container>\n                    {document.getElementById('add-content-title') ? \n                    <Title>{document.getElementById('add-content-title').value}</Title>\n                    :\n                    null\n                    }\n                    <Image id='test' alt='display' src={props?.mainImage}></Image>\n                    <InfoContainer>\n    \n                    <SubmitButton className='dropdown'>\n                        <div className='dropdown'>Add to collection</div>\n                    </SubmitButton>\n                    <Author>{'Dan Richards'}</Author>\n                    <Author>{moment(Date.now()).format('MMMM Do YYYY')}</Author>\n                    </InfoContainer>\n                </Container>\n                {props.bodyContent.map((item, index) => {\n                    // console.log(item)\n                    return(\n                        <BodyContainer margin='35px' key={index}>\n                            <Description>{item}</Description>\n                            <BodyImageContainer>\n                            {props?.bodyImages[index]?.map((image, i)=> {\n                                return(\n                                    <BodyImage imageSizeRatio={props.imageSizeRatio[index][i]} bodyImages={props.bodyImages} i={i} image={image} index={index} key={i}></BodyImage>\n                                )\n                            })}\n                            </BodyImageContainer>\n                        </BodyContainer>\n                    )\n                })}\n            </PreviewContainer>\n        </PreviewContainer2>\n    )\n}\n \nexport default Preview","import React, { useState } from 'react'\n\nimport {\n    DescriptionInput,\n    NewItemButton,\n    RemoveLastElement,\n    Container,\n    Label,\n    BodyButtonContainer,\n    CategoryLocationContainer,\n} from './AddContent.styles'\n\nconst Body = (props) => {\n\n    const [isAddImage, setIsAddImage] = useState(false)\n    const [isAdditionalElements, setIsAdditionalElements] = useState(false)\n\n    const getImageMap = (inputID, inputDiv) => {\n        const images = document.getElementById(inputID)\n        let sizeMapArray = new Array(images.files.length).fill('')\n        if(images.files.length>1) {\n            for (let i = 0; i < images.files.length; i++) {\n                const file = images.files[i];\n                const fileReader  = new FileReader();\n                fileReader.onload = function(e)  {\n                    const displayImage = document.createElement(\"img\");\n                    displayImage.src = e.target.result;\n                    displayImage.className = 'upload-gallery-image'\n                    // document.body.appendChild(displayImage);\n                    document.getElementById(inputDiv).appendChild(displayImage);\n                }\n                fileReader.readAsDataURL(file);\n\n                let percentageArray = []\n                const reader = new FileReader()\n                reader.readAsDataURL(images.files[i]);\n                reader.onload = (e) => {\n                    const image = document.createElement('img')\n                    image.src = e.target.result;\n                    image.onload = function () {\n                        const height = this.height;\n                        const width = this.width;\n                        sizeMapArray[i] = width/height\n                        if(sizeMapArray.length === images.files.length) {\n                            const reducer = (sum, val) => sum + val;\n                            let ratioTotal = sizeMapArray.reduce(reducer, 0);\n                            for (let image of sizeMapArray) {\n                                percentageArray.push(image/ratioTotal)\n                            }\n                            const index = inputID[inputID.length-1]\n                            const imageSizeRatioCopy = props.imageSizeRatio \n                            imageSizeRatioCopy[index] = percentageArray\n                            props.setImageSizeRatio(imageSizeRatioCopy)\n                        }\n                    };\n                }\n            }\n        }else{\n            const index = inputID[inputID.length-1]\n            const imageSizeRatioCopy = props.imageSizeRatio \n            imageSizeRatioCopy[index] = [1]\n            props.setImageSizeRatio(imageSizeRatioCopy)\n            const file = images.files[0];\n            const fileReader  = new FileReader();\n            fileReader.onload = function(e)  {\n                const displayImage = document.createElement(\"img\");\n                displayImage.src = e.target.result;\n                displayImage.className = 'upload-gallery-image'\n                document.getElementById(inputDiv).appendChild(displayImage);\n            }\n            fileReader.readAsDataURL(file);\n        }\n    }\n\n    const newImage = () => {\n        const numberInputs = document.getElementsByClassName('body-photos').length\n        const image = document.createElement('input')\n        image.type='file'\n        image.className='photo-input additional-item body-photos'\n        image.setAttribute('multiple', '')\n        image.setAttribute('accept', 'image/jpeg, image/png, image/jpg, image/tif')\n        image.id = `image-input-${numberInputs}`\n\n        const imageDiv = document.createElement('div')\n        imageDiv.id = `image-div-${numberInputs}`\n        imageDiv.className = 'image-div'\n\n        const parent = document.getElementById('content-form')\n        parent.appendChild(image)\n        parent.appendChild(imageDiv)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        image.onchange = ()=> {\n            getImageMap(`image-input-${numberInputs}`, `image-div-${numberInputs}`)\n            props.setBody('shiftUp')\n            const buttons = document.getElementById('body-scroll-here');\n            buttons.scrollIntoView();\n        }\n    }\n    \n    const removeLastElement = () => {\n        const numberInputs = document.getElementsByClassName('body-photos').length\n        const parent = document.getElementById('content-form')\n        parent.removeChild(parent.lastChild)\n        if(isAddImage) {\n            parent.removeChild(parent.lastChild)\n            const imageSizeRatioCopy = props.imageSizeRatio\n            delete imageSizeRatioCopy[numberInputs-1]\n            props.setImageSizeRatio(imageSizeRatioCopy)\n        }\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n    }\n\n    const newParagraph = () => {\n        const input = document.createElement('textarea')\n        input.className='add-content-description-input content-paragraph additional-item'\n        const parent = document.getElementById('content-form')\n        parent.appendChild(input)\n        setIsAddImage(!isAddImage)\n        checkAdditionalElement()\n        // if(document.getElementsByClassName('add-content-description-input').length > 0){\n        //     props.setBody('shiftUp')\n        // }\n     }\n\n    const checkAdditionalElement = () => {\n        const additionalElements = document.getElementsByClassName('additional-item')\n        if(additionalElements.length > 0) {\n            setIsAdditionalElements(true)\n        }else{\n            setIsAdditionalElements(false)\n        }\n    }\n\n    return(\n        <CategoryLocationContainer visibility={props.animationMap.body[props.bodyProps].opacity} variants={props.animationMap.body} animate={props.bodyProps} transition='transition' initial={'initial'}>\n            <Container visibility={props.animationMap.body[props.bodyProps].opacity} id='content-form'>\n                <Label>Body content</Label>\n                <DescriptionInput className='content-paragraph'></DescriptionInput>\n            </Container>\n            <BodyButtonContainer id='add-content-body-buttons'>\n                {isAdditionalElements ? \n                <RemoveLastElement type=\"button\" onClick={removeLastElement}>{`Remove last ${isAddImage ? 'image' : 'text block'}`}</RemoveLastElement>\n                :\n                null\n                }\n                {isAddImage ? \n                <NewItemButton type=\"button\" onClick={newParagraph}>Add paragraph</NewItemButton>\n                : \n                <NewItemButton long={!isAdditionalElements} type=\"button\" onClick={newImage}>Add image</NewItemButton>\n                }\n            </BodyButtonContainer>\n            <div id='body-scroll-here'></div>\n        </CategoryLocationContainer>\n    )\n}\n\nexport default Body","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const ScrollContainer = styled(motion.div)`\n    /* position: absolute;\n    left: 20%; */\n    /* visibility: hidden; */\n    /* display: none; */\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n    width: 100%;\n    -webkit-overflow-scrolling: touch;\n    height: calc(100vh - 80px);\n    /* height: ${props => props.scrollHeight}; */\n    /* max-height: ${props => props.maxHeight}; */\n    overflow-Y: scroll;\n`","import React from 'react'\nimport { ScrollContainer } from './Scroll.styles'\n\nconst Scroll = (props) => {\n    return(\n        <ScrollContainer initial='initial' animate={props.animate} variants={props.variants} visibility={props.visibility} scrollHeight={props.scrollHeight}>\n            {props.children}\n        </ScrollContainer>\n    )\n}\n\nexport default Scroll","import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nexport const UploadingTitle = styled.div`\n    font-size: 30px;\n`\n\nexport const ProgressContainer = styled(motion.div)`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    visibility: ${props=> props.visibility ? 'null' : 'hidden'};\n    display: ${props=> props.visibility ? 'null' : 'none'};\n`","import React from 'react'\nimport {\n    ProgressContainer,\n    UploadingTitle,\n} from './UploadProgress.styles'\n\nconst UploadProgress = (props) => {\n\n    const radius = 52\n    const stroke = 4\n    const normalizedRadius = radius - stroke * 2\n    const circumference = Math.PI * normalizedRadius * 2\n    // const strokeDashoffset = circumference - props.uploadProgress / 100 * circumference\n    const strokeDashoffset = circumference - props.uploadProgress / props.uploadCount * circumference\n\n    return(\n        <ProgressContainer visibility={props.variants[props.animate].opacity} animate={props.animate} variants={props.variants} initial='initial' transition='transition'>\n            {props.uploadProgressColor ? \n            <svg\n            className=\"progress-ring\"\n            height={radius * 2}\n            width={radius * 2}\n            >\n            <circle\n                className=\"progress-ring__circle\"\n                strokeWidth={stroke}\n                strokeDasharray = {circumference + ' ' + circumference}\n                style = {{strokeDashoffset}}\n                stroke='green'\n                fill=\"transparent\"\n                r={normalizedRadius}\n                cx={radius}\n                cy={radius}\n            />\n            </svg>\n            :\n            <svg\n                className=\"progress-ring\"\n                height={radius * 2}\n                width={radius * 2}\n                >\n                <circle\n                    className=\"progress-ring__circle\"\n                    strokeWidth={stroke}\n                    strokeDasharray = {circumference + ' ' + circumference}\n                    style = {{strokeDashoffset}}\n                    stroke='#242424'\n                    fill=\"transparent\"\n                    r={normalizedRadius}\n                    cx={radius}\n                    cy={radius}\n                />\n            </svg>\n            }\n            <UploadingTitle style={{color: props.uploadProgressColor ? 'green' : '#242424'}}>{props.uploadProgressColor ? 'Upload succeeded' : 'Uploading...'}</UploadingTitle>\n            {/* {props.uploadProgressColor ? \n            :\n            <UploadingTitle>Uploading...</UploadingTitle>\n            } */}\n        </ProgressContainer>\n    )\n}\n\nexport default UploadProgress","import TitlePhoto from './TitlePhoto'\nimport CategoryLocation from './CategoryLocation'\nimport Preview from './Preview'\nimport Body from './Body'\nimport Scroll from './Scroll'\nimport { db } from '../Firebase'\nimport firebase from 'firebase'\n// import { fileUpload } from './Submit'\nimport UploadProgress from './UploadProgress'\nimport React, { \n    useState \n} from 'react'\nimport {\n    NextButton,\n    ButtonContainer,\n} from './AddContent.styles'\n\nconst animationMap = {\n    titlePhoto: {\n        initial: {\n            y: '25vh',\n            opacity: 1,\n        },\n        transitionStart: {\n            y: 10,\n            opacity: 1,\n        }, \n        transitionEnd: {\n            x: -200,\n            opacity: 0,\n        },\n        transitionBack: {\n            y: 10,\n            x: 0,\n            opacity: 1,\n        }, \n        transition: {\n            x: {\n                duration: 10\n            }\n        }\n    },\n    categoryLocation: {\n        initial: {\n            x: 100,\n            opacity: 0,\n            y: '25vh',\n        },\n        transitionStart: {\n            x: 0,\n            opacity: 1,\n            y: '25vh',\n        },\n        transitionBack: {\n            x: 400,\n            opacity: 0,\n        },\n        transitionEnd: {\n            x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    body: {\n        initial: {\n            x: 100,\n            opacity: 0,\n            y: '25vh',\n        },\n        transitionStart: {\n            x: 0,\n            opacity: 1,\n            y: '25vh',\n        },\n        shiftUp: {\n            x: 0,\n            opacity: 1,\n            y: '0',\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 1,\n        },\n        transitionEnd: {\n            x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    preview: {\n        initial: {\n            y: '10',\n            opacity: 0,\n        },\n        transitionStart: {\n            opacity: 1,\n            y: 0,\n        },\n        transitionBack: {\n            x: 0,\n            opacity: 0,\n        },\n        transitionEnd: {\n            // x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    },\n    uploadStatus: {\n        initial: {\n            x: 30,\n            y: '35vh',\n            opacity: 0,\n        },\n        transitionStart: {\n            x: 0,\n            opacity: 1,\n            y: '35vh',\n        },\n        // transitionBack: {\n        //     x: 0,\n        //     opacity: 0,\n        // },\n        transitionEnd: {\n            // x: -1000,\n            opacity: 0\n        },\n        transition: {\n            x: {\n                type: 'spring',\n                stiffness: 1000,\n            }\n        }\n    }\n}\n\n\nconst AddContent = (props) => {\n    const [mainImage, setMainImage] = useState(null)\n    const [titlePhotoProps, setTitlePhotoProps] = useState('initial')\n    const [categoryLocationProps, setCategoryLocationProps] = useState('initial')\n    const [bodyProps, setBody] = useState('initial')\n    const [previewProps, setPreviewProps] = useState('initial')\n    const [uploadStatusProps, setUploadStatusProps] = useState('initial')\n    const [switchValue, setSwitchValue] = useState(1)\n    const [bodyContent, setBodyContent] = useState([])\n    const [bodyImages, setBodyImages] = useState([])\n    const [imageSizeRatio, setImageSizeRatio] = useState({})\n    const [uploadCount, setUploadCount] = useState(5)\n    const [uploadProgress, setUploadProgress] = useState(0)\n    const [uploadProgressColor, setUploadProgressColor] = useState(false)\n\n    const submit = (imagesEmptyArrays, unsortedImages, imageMap, user, imageSizeArray) => {\n        const title = document.getElementById('add-content-title').value\n        const location = document.getElementById('autocomplete').value\n        const splitLocation = location.split(',')\n        const country = splitLocation[splitLocation.length-1].trim()\n        const city = splitLocation[0]\n        const category = document.getElementById('category').value\n        const timestamp = Date.now()\n        const descriptionArray = []\n        const content = document.getElementsByClassName('content-paragraph')\n    \n        for (let i=0; i<content.length; i++) {\n            descriptionArray.push(String(content[i].value))\n        }\n    \n        let mainImage = ''\n    \n        let imagesEmptyArraysCopy = imagesEmptyArrays\n        let imageMapCopy = imageMap\n    \n        for(let i=0; i<unsortedImages.length; i++) {\n            if(i === 0) {\n                mainImage = unsortedImages[i]\n            }else{\n                if(i<imageMapCopy.length+1) {\n                    imagesEmptyArraysCopy[imageMapCopy[i-1]].push(unsortedImages[i])\n                }\n            }\n        }\n    \n        const urlObject = {}\n        \n        for (let i=0; i<imagesEmptyArraysCopy.length; i++) {\n            urlObject[i] = imagesEmptyArraysCopy[i]\n        }\n    \n        db.collection('continents-countries').doc('map').collection(country)\n        .where(country, 'in', ['North America', 'South America', 'Asia', 'Europe', 'Oceania', 'Africa'])\n        .get()\n        .then(data => {\n            setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n            const continent = data.docs[0].data()[country]\n            db.collection('posts').add({\n                photoBodyMap: imageSizeArray,\n                content: descriptionArray,\n                images: urlObject,\n                title,\n                timestamp,\n                image: mainImage,\n                category,\n                city,\n                country,\n                continent,\n                author: 'Dan Smith',\n                views: 0,\n            }).then(docRef => {\n                setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                db.collection('users').doc(user)\n                .collection('posts').doc(docRef.id).set({\n                    reference: `posts/${docRef.id}`,\n                    timestamp,\n                    id: docRef.id,\n                    title: title,\n                    image: mainImage,\n                    views: 0,\n                    city,\n                    country,\n                    continent,\n                }, {merge: true})\n                .then(()=>{ \n                    db.collection('posts').doc(docRef.id).set({\n                        id: docRef.id,\n                    }, {merge: true}) \n                })\n                .then(()=> {\n                    setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                    db.collection('preview-posts').add({\n                        reference: `/posts/${docRef.id}`,\n                        timestamp,\n                        id: docRef.id,\n                        title,\n                        image: mainImage,\n                        views: 0,\n                        category,\n                        city,\n                        country,\n                        continent,\n                    })\n                    // .then(()=>setUploadProgress(previousUploadProgress=> previousUploadProgress + 1))\n                    .then(()=>{\n                        console.log('uploaded')\n                        setTimeout(()=>setUploadProgressColor(true), 300)\n                        setTimeout(()=>props.getFeaturedPhotoInfo(docRef.id), 2000)\n                    })\n                })              \n            })\n        })\n    }\n    \n    const fileUpload = (user, imageSizeArray) => {\n        let photoIndexes = []\n        let fileArray = []\n        const photoUrlArraySorted = []\n        // const urlArray = []\n        const photoFiles = document.getElementsByClassName('photo-input')\n        for (let i = 0; i < photoFiles.length; i++) {\n            fileArray = [...fileArray, ...photoFiles[i].files]\n            if(photoFiles[i].files.length > 1) {\n                photoUrlArraySorted.push([])\n                for(let j = 0; j<photoFiles[i].files.length; j++) {\n                    photoIndexes.push(i-1)\n                }\n            }else{\n                if(i!==0) {\n                    photoIndexes.push(i-1)\n                    photoUrlArraySorted.push([])\n                }\n            }\n        }\n        const urlArray = []\n        let index = []\n        let indexNum = 0\n        const upload = () => {\n            if(indexNum<fileArray.length) {\n                const file = fileArray[indexNum]\n                const metadata = {\n                    contentType: file.type\n                }\n                firebase.storage().ref()\n                .child(file.name)\n                .put(file, metadata)\n                .then(snapshot => {\n                    snapshot.ref.getDownloadURL()\n                    .then(downloadURL => {\n                        urlArray.push(downloadURL)  \n                        indexNum++ \n                        index.push(downloadURL) \n                    }).then((downloadURL)=> {\n                        setUploadProgress(previousUploadProgress=> previousUploadProgress + 1)\n                        if(urlArray.length===fileArray.length) {\n                            submit(photoUrlArraySorted, [...urlArray, downloadURL], photoIndexes, user, imageSizeArray)\n                        }else{\n                            upload()\n                        }\n                    })\n                    .catch(error => console.log(error))\n                });\n            }else{\n                return\n            }\n        }\n        upload()\n    }\n\n    const getBodyContent = () => {\n        const paragraphs = document.getElementsByClassName('content-paragraph')\n        const content = []\n        for (let paragraph of paragraphs) {\n            content.push(paragraph.value)\n        }\n        setBodyContent(content)\n    }\n\n    const getBodyImages = () => {\n        const images = document.getElementsByClassName('body-photos')\n        let count = 0\n        let imagesArray = []\n        for (let i = 0; i < images.length; i++) {\n            let subArray = []\n            for(let j = 0; j<images[i].files.length; j++) {\n                count += 1\n                subArray.push(images[i].files[j])\n            }\n            imagesArray.push(subArray)\n        }\n        setUploadCount(uploadCount => uploadCount + count)\n        setBodyImages(imagesArray)\n    }\n\n    const transitionSwitchNext = () => {\n        switch(switchValue) {\n            case 1:\n                setTitlePhotoProps('transitionEnd')\n                setCategoryLocationProps('transitionStart')\n                setSwitchValue(2)\n                break\n            case 2:\n                setBody('transitionStart')\n                setCategoryLocationProps('transitionEnd')\n                setSwitchValue(3)\n                break\n            case 3:\n                setPreviewProps('transitionStart')\n                setBody('transitionEnd')\n                setSwitchValue(4)\n                getBodyContent()\n                getBodyImages()\n                break\n            case 4: \n                setPreviewProps('transitionEnd')\n                fileUpload(props.user, imageSizeRatio)\n                setUploadStatusProps('transitionStart')\n                setUploadProgress(previousUploadProgress => previousUploadProgress + 1)\n                setSwitchValue(5)\n                break\n            default: \n                return null\n        }\n    }\n\n    const transitionSwitchBack = () => {\n        switch(switchValue) {\n            case 2:\n                setCategoryLocationProps('transitionBack')\n                setTitlePhotoProps('transitionBack')\n                setSwitchValue(1)\n                break\n            case 3: \n                setBody('initial')\n                setCategoryLocationProps('transitionStart')\n                setSwitchValue(2)\n                break\n            case 4: \n                setPreviewProps('transitionBack')\n                setBody('transitionBack')\n                setSwitchValue(3)\n                break\n            default: \n                return null\n        }\n    }\n\n    return(\n        <div>\n            <NextButton width='130px' onClick={()=>props.setPageRoute('GetPhotos')}>Back</NextButton>\n            <UploadProgress uploadProgressColor={uploadProgressColor} animate={uploadStatusProps} variants={animationMap.uploadStatus} uploadCount={uploadCount} uploadProgress={uploadProgress}/>\n            {switchValue === 5 ? \n            null\n            :\n            <div>\n\n            <Scroll animate={previewProps} variants={animationMap.preview} scrollHeight='90vh' visibility={animationMap.preview[previewProps].opacity}>\n                <Preview imageSizeRatio={imageSizeRatio} bodyImages={bodyImages} bodyContent={bodyContent} mainImage={mainImage} previewProps={previewProps} animationMap={animationMap}></Preview>\n            </Scroll>\n            </div>\n            }\n            <Scroll scrollHeight='90vh' visibility={animationMap.titlePhoto[titlePhotoProps].opacity}>\n                <TitlePhoto setMainImage={setMainImage} animationMap={animationMap} setTitlePhotoProps={setTitlePhotoProps} transition={titlePhotoProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.categoryLocation[categoryLocationProps].opacity}>\n                <CategoryLocation animationMap={animationMap} categoryLocation={categoryLocationProps}/>\n            </Scroll>\n            <Scroll scrollHeight='90vh' visibility={animationMap.body[bodyProps].opacity}>\n                <Body imageSizeRatio={imageSizeRatio} setImageSizeRatio={setImageSizeRatio} setBody={setBody} animationMap={animationMap} bodyProps={bodyProps}></Body>\n            </Scroll>\n            {switchValue === 5 ? \n            null\n            :\n            <ButtonContainer>\n                {switchValue === 1 ? \n                null\n                :\n                <NextButton width='150px' onClick={transitionSwitchBack}>Back</NextButton>\n                }\n                {switchValue === 4 ? \n                <NextButton width={switchValue === 1 ? '300px' :'150px'} onClick={transitionSwitchNext}>Submit</NextButton>\n                :\n                <NextButton width={switchValue === 1 ? '40vw' :'150px'} onClick={transitionSwitchNext}>Next</NextButton>\n                }\n            </ButtonContainer>\n            }\n        </div>\n    )\n}\n\nexport default AddContent","import React, { useState } from 'react'\nimport firebase from 'firebase'\nimport { db } from '../Firebase'\nimport { \n    TextField, \n    SubmitButton,\n    Text,\n    Container,\n    Container2,\n} from '../Login/Login.styles'\n\nconst Signup = () => {\n\n    const [email, setEmail] = useState()\n    const [password, setPassword] = useState()\n\n    const submit = () => {\n        if(email?.length>0 && password?.length>0) {\n            firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(user=> {\n                console.log(user.user.uid)\n                db.collection('users').doc(user.user.uid).set({\n                    username: user.user.uid\n                }, {merge: true})\n                .then(console.log('sign up complete'))\n                .catch(err=>console.log(err))\n            })\n            .catch(err=>console.log(err))\n        }\n    }\n\n    return(\n        <Container2>\n            <Container>\n                <Text>Email</Text>\n                <TextField onChange={e => setEmail(e.target.value)}></TextField>\n                <Text>Password</Text>\n                <TextField onChange={e=> setPassword(e.target.value)} type='password'></TextField>\n                <SubmitButton onClick={submit}>Signup</SubmitButton>\n            </Container>\n        </Container2>\n    )\n}\n\nexport default Signup","import React, { \n  useState, \n  useEffect,\n} from 'react'\nimport Header from './Header/Header'\nimport VerticalScroll from './VeritcalScroll/VerticalScroll'\nimport FeaturedPost from './FeaturedPost/FeaturedPost'\nimport GetPhotos from './GetPhotosHomepage/GetPhotosHomepage'\nimport Profile from './Profile/Profile'\nimport Login from './Login/Login'\n// import TestFile from './TestFile'\nimport AddContent from './AddContent/AddContent'\nimport Signup from './SignUp/SignUp'\nimport firebase from 'firebase'\nimport { db } from './Firebase'\n// import { firebaseApp } from './Firebase'\n\nconst App = () => {\n  const [user, setUser] = useState()\n  const [homePhotoInformation, setHomePhotoInformation] = useState(null)\n  const [photoInformation, setPhotoInformation] = useState(null)\n  const [pageRoute, setPageRoute] = useState('GetPhotos')\n\n  const getFeaturedPhotoInfo = (docID) => {\n    db.collection('posts').doc(docID)\n    .get()\n    .then(data=> {\n      setPhotoInformation(data.data())\n      setPageRoute('FeaturedPost')\n      window.scrollTo({top: 0})\n    })\n  }\n  \n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        setUser(user.uid)\n      }\n    })\n  }, [])\n\n  return (\n    <div>\n      {pageRoute==='GetPhotos' ? \n      <Header setHomePhotoInformation={setHomePhotoInformation} setPageRoute={setPageRoute} user={user}/>\n      :\n      null\n      }\n\n      \n      {/* <TestFile /> */}\n\n      {(() => {\n        switch (pageRoute) {\n          case 'Upload':\n            return(\n              <AddContent \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setPhotoInformation={setPhotoInformation}\n              user={user} \n              setPageRoute={setPageRoute} \n              /> \n            )\n          case 'GetPhotos':\n            return (\n              <VerticalScroll scrollHeight='87vh'>\n                <GetPhotos \n                  getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n                  homePhotoInformation={homePhotoInformation} \n                  setHomePhotoInformation={setHomePhotoInformation} \n                  setPageRoute={setPageRoute} \n                  setPhotoInformation={setPhotoInformation} \n                />\n              </VerticalScroll>\n            )\n          case 'FeaturedPost':\n            return <FeaturedPost \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              user={user} \n              setHomePhotoInformation={setHomePhotoInformation} \n              setPageRoute={setPageRoute} \n              setPhotoInformation={setPhotoInformation} \n              photoInformation={photoInformation} \n            />\n          case 'Profile':\n            return <Profile \n              getFeaturedPhotoInfo={getFeaturedPhotoInfo}\n              setHomePhotoInformation={setHomePhotoInformation} \n              setPhotoInformation={setPhotoInformation} \n              user={user} \n              setPageRoute={setPageRoute} \n            />;\n          case 'Login':\n            return <Login setUser={setUser} user={user} />\n          case 'Signup':\n            return <Signup />\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}